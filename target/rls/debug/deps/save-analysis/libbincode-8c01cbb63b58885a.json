{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0","program":"C:\\Users\\Vinay Konuru\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bincode","C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=8c01cbb63b58885a","-C","extra-filename=-8c01cbb63b58885a","--out-dir","c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps","--extern","byteorder=c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps\\libbyteorder-1cefc87f20df9614.rmeta","--extern","serde=c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps\\libserde-4542287462c886cb.rmeta","--cap-lints","allow","--cfg","has_i128","--error-format=json","--sysroot","C:\\Users\\Vinay Konuru\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps\\libbincode-8c01cbb63b58885a.rmeta"},"prelude":{"crate_id":{"name":"bincode","disambiguator":[10156052357952687865,0]},"crate_root":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src","external_crates":[{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[4402420685575932686,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[16639894342417964460,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1960661561601094031,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4626707339213967717,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13575330073562295178,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[15417973128473761251,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3307230022923030275,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1477362299507908243,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[6635298892910706034,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1545597443293537734,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1361891767217464645,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15508830081156326446,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[15010314299123018028,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4879419464889335982,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[14947387329158915948,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":16,"id":{"name":"byteorder","disambiguator":[1861825717919986435,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":17,"id":{"name":"serde","disambiguator":[13792621528660339119,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","num":18,"id":{"name":"serde_derive","disambiguator":[16957788986416221569,0]}}],"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":0,"byte_end":5089,"line_start":1,"line_end":173,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1074,"byte_end":1080,"line_start":41,"line_end":41,"column_start":17,"column_end":23},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1101,"byte_end":1112,"line_start":42,"line_end":42,"column_start":20,"column_end":31},"alias_span":null,"name":"BincodeRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1114,"byte_end":1122,"line_start":42,"line_end":42,"column_start":33,"column_end":41},"alias_span":null,"name":"IoReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1124,"byte_end":1135,"line_start":42,"line_end":42,"column_start":43,"column_end":54},"alias_span":null,"name":"SliceReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1154,"byte_end":1159,"line_start":43,"line_end":43,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1161,"byte_end":1170,"line_start":43,"line_end":43,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1172,"byte_end":1178,"line_start":43,"line_end":43,"column_start":35,"column_end":41},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":0,"byte_end":5089,"line_start":1,"line_end":173,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":164},{"krate":0,"index":394},{"krate":0,"index":430},{"krate":0,"index":517},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":833},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":850},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":859},{"krate":0,"index":863}],"decl_id":null,"docs":" Bincode is a crate for encoding and decoding using a tiny binary\n serialization strategy.  Using it, you can easily go from having\n an object in memory, quickly serialize it to bytes, and then\n deserialize it back just as fast!","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/ Bincode is a crate for encoding and decoding using a tiny binary","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":24,"byte_end":92,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ serialization strategy.  Using it, you can easily go from having","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":93,"byte_end":161,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ an object in memory, quickly serialize it to bytes, and then","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":162,"byte_end":226,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/ deserialize it back just as fast!","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":227,"byte_end":264,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":265,"byte_end":268,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ### Using Basic Functions","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":269,"byte_end":298,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":299,"byte_end":302,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":303,"byte_end":321,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":322,"byte_end":337,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     // The object that we will serialize.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":338,"byte_end":383,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/     let target: Option<String>  = Some(\"hello world\".to_string());","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":384,"byte_end":454,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":455,"byte_end":458,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/     let encoded: Vec<u8> = bincode::serialize(&target).unwrap();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":459,"byte_end":527,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/     let decoded: Option<String> = bincode::deserialize(&encoded[..]).unwrap();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":528,"byte_end":610,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/     assert_eq!(target, decoded);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":611,"byte_end":647,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":648,"byte_end":653,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":654,"byte_end":661,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":662,"byte_end":665,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ### 128bit numbers","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":666,"byte_end":688,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":689,"byte_end":692,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Support for `i128` and `u128` is automatically enabled on Rust toolchains","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":693,"byte_end":770,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ greater than or equal to `1.26.0`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":771,"byte_end":809,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"crate_name = \"bincode\"","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":868,"byte_end":894,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"crate_type = \"rlib\"","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":895,"byte_end":918,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"crate_type = \"dylib\"","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":919,"byte_end":943,"line_start":29,"line_end":29,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":5499,"byte_end":5504,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Limit","qualname":"::config::Options::Limit","value":"type Limit: SizeLimit + 'static;","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":5536,"byte_end":5542,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Endian","qualname":"::config::Options::Endian","value":"type Endian: ByteOrder + 'static;","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7709,"byte_end":7715,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"decl_id":null,"docs":" A configuration builder whose options Bincode will use\n while serializing and deserializing.","sig":null,"attributes":[{"value":"/ A configuration builder whose options Bincode will use","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":6927,"byte_end":6985,"line_start":85,"line_end":85,"column_start":1,"column_end":59}},{"value":"/ while serializing and deserializing.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":6986,"byte_end":7026,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7027,"byte_end":7030,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ### Options","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7031,"byte_end":7046,"line_start":88,"line_end":88,"column_start":1,"column_end":16}},{"value":"/ Endianness: The endianness with which multi-byte integers will be read/written.  *default: little endian*","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7047,"byte_end":7156,"line_start":89,"line_end":89,"column_start":1,"column_end":110}},{"value":"/ Limit: The maximum number of bytes that will be read/written in a bincode serialize/deserialize. *default: unlimited*","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7157,"byte_end":7278,"line_start":90,"line_end":90,"column_start":1,"column_end":122}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7279,"byte_end":7282,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ### Byte Limit Details","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7283,"byte_end":7309,"line_start":92,"line_end":92,"column_start":1,"column_end":27}},{"value":"/ The purpose of byte-limiting is to prevent Denial-Of-Service attacks whereby malicious attackers get bincode","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7310,"byte_end":7422,"line_start":93,"line_end":93,"column_start":1,"column_end":113}},{"value":"/ deserialization to crash your process by allocating too much memory or keeping a connection open for too long.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7423,"byte_end":7537,"line_start":94,"line_end":94,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7538,"byte_end":7541,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ When a byte limit is set, bincode will return `Err` on any deserialization that goes over the limit, or any","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7542,"byte_end":7653,"line_start":96,"line_end":96,"column_start":1,"column_end":112}},{"value":"/ serialization that goes over the limit.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":7654,"byte_end":7697,"line_start":97,"line_end":97,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10306,"byte_end":10314,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"no_limit","qualname":"<Config>::no_limit","value":"fn no_limit(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to be unlimited.\n This is the default.\n","sig":null,"attributes":[{"value":"/ Sets the byte limit to be unlimited.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10203,"byte_end":10243,"line_start":193,"line_end":193,"column_start":5,"column_end":45}},{"value":"/ This is the default.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10248,"byte_end":10272,"line_start":194,"line_end":194,"column_start":5,"column_end":29}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10277,"byte_end":10294,"line_start":195,"line_end":195,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10479,"byte_end":10484,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"limit","qualname":"<Config>::limit","value":"fn limit(&mut Self, u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to `limit`.\n","sig":null,"attributes":[{"value":"/ Sets the byte limit to `limit`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10410,"byte_end":10445,"line_start":201,"line_end":201,"column_start":5,"column_end":40}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10450,"byte_end":10467,"line_start":202,"line_end":202,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10700,"byte_end":10713,"line_start":211,"line_end":211,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Config>::little_endian","value":"fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to little-endian\n This is the default.\n","sig":null,"attributes":[{"value":"/ Sets the endianness to little-endian","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10597,"byte_end":10637,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/ This is the default.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10642,"byte_end":10666,"line_start":209,"line_end":209,"column_start":5,"column_end":29}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10671,"byte_end":10688,"line_start":210,"line_end":210,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10879,"byte_end":10889,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Config>::big_endian","value":"fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to big-endian\n","sig":null,"attributes":[{"value":"/ Sets the endianness to big-endian","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10808,"byte_end":10845,"line_start":216,"line_end":216,"column_start":5,"column_end":42}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10850,"byte_end":10867,"line_start":217,"line_end":217,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11075,"byte_end":11088,"line_start":225,"line_end":225,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Config>::native_endian","value":"fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to the the machine-native endianness\n","sig":null,"attributes":[{"value":"/ Sets the endianness to the the machine-native endianness","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10981,"byte_end":11041,"line_start":223,"line_end":223,"column_start":5,"column_end":65}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11046,"byte_end":11063,"line_start":224,"line_end":224,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11300,"byte_end":11309,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Config>::serialize","value":"fn serialize<T>(&Self, &T) -> Result<Vec<u8>> where T: ?Sized +\nserde::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using this configuration\n","sig":null,"attributes":[{"value":"/ Serializes a serializable object into a `Vec` of bytes using this configuration","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11183,"byte_end":11266,"line_start":230,"line_end":230,"column_start":5,"column_end":88}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11271,"byte_end":11288,"line_start":231,"line_end":231,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11582,"byte_end":11597,"line_start":238,"line_end":238,"column_start":12,"column_end":27},"name":"serialized_size","qualname":"<Config>::serialized_size","value":"fn serialized_size<T>(&Self, &T) -> Result<u64> where T: ?Sized +\nserde::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with this configuration\n","sig":null,"attributes":[{"value":"/ Returns the size that an object would be if serialized using Bincode with this configuration","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11452,"byte_end":11548,"line_start":236,"line_end":236,"column_start":5,"column_end":101}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11553,"byte_end":11570,"line_start":237,"line_end":237,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":12019,"byte_end":12033,"line_start":247,"line_end":247,"column_start":12,"column_end":26},"name":"serialize_into","qualname":"<Config>::serialize_into","value":"fn serialize_into<W, T>(&Self, W, &T) -> Result<()> where W: Write,\nT: ?Sized + serde::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using this configuration","sig":null,"attributes":[{"value":"/ Serializes an object directly into a `Writer` using this configuration","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11742,"byte_end":11816,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11821,"byte_end":11824,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ If the serialization would take more bytes than allowed by the size limit, an error","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11829,"byte_end":11916,"line_start":244,"line_end":244,"column_start":5,"column_end":92}},{"value":"/ is returned and *no bytes* will be written into the `Writer`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11921,"byte_end":11985,"line_start":245,"line_end":245,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":11990,"byte_end":12007,"line_start":246,"line_end":246,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":12342,"byte_end":12353,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Config>::deserialize","value":"fn deserialize<'a, T>(&Self, &'a [u8]) -> Result<T> where\nT: serde::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using this configuration\n","sig":null,"attributes":[{"value":"/ Deserializes a slice of bytes into an instance of `T` using this configuration","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":12226,"byte_end":12308,"line_start":255,"line_end":255,"column_start":5,"column_end":87}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":12313,"byte_end":12330,"line_start":256,"line_end":256,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":12578,"byte_end":12598,"line_start":264,"line_end":264,"column_start":12,"column_end":32},"name":"deserialize_in_place","qualname":"<Config>::deserialize_in_place","value":"fn deserialize_in_place<'a, R, T>(&Self, R, &mut T) -> Result<()> where\nR: BincodeRead, T: serde::de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" TODO: document\n","sig":null,"attributes":[{"value":"/ TODO: document","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":12507,"byte_end":12525,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":12549,"byte_end":12566,"line_start":263,"line_end":263,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":12950,"byte_end":12966,"line_start":274,"line_end":274,"column_start":12,"column_end":28},"name":"deserialize_seed","qualname":"<Config>::deserialize_seed","value":"fn deserialize_seed<'a, T>(&Self, T, &'a [u8]) -> Result<T::Value> where\nT: serde::de::DeserializeSeed","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes with state `seed` using this configuration.\n","sig":null,"attributes":[{"value":"/ Deserializes a slice of bytes with state `seed` using this configuration.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":12839,"byte_end":12916,"line_start":272,"line_end":272,"column_start":5,"column_end":82}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":12921,"byte_end":12938,"line_start":273,"line_end":273,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":13377,"byte_end":13393,"line_start":286,"line_end":286,"column_start":12,"column_end":28},"name":"deserialize_from","qualname":"<Config>::deserialize_from","value":"fn deserialize_from<R, T>(&Self, R) -> Result<T> where R: Read,\nT: serde::de::DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using this configuration","sig":null,"attributes":[{"value":"/ Deserializes an object directly from a `Read`er using this configuration","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":13186,"byte_end":13262,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":13267,"byte_end":13270,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":13275,"byte_end":13343,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":13348,"byte_end":13365,"line_start":285,"line_end":285,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":13789,"byte_end":13810,"line_start":297,"line_end":297,"column_start":12,"column_end":33},"name":"deserialize_from_seed","qualname":"<Config>::deserialize_from_seed","value":"fn deserialize_from_seed<'a, R, T>(&Self, T, R) -> Result<T::Value> where\nR: Read, T: serde::de::DeserializeSeed","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er with state `seed` using this configuration","sig":null,"attributes":[{"value":"/ Deserializes an object directly from a `Read`er with state `seed` using this configuration","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":13580,"byte_end":13674,"line_start":293,"line_end":293,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":13679,"byte_end":13682,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":13687,"byte_end":13755,"line_start":295,"line_end":295,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":13760,"byte_end":13777,"line_start":296,"line_end":296,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14378,"byte_end":14401,"line_start":311,"line_end":311,"column_start":12,"column_end":35},"name":"deserialize_from_custom","qualname":"<Config>::deserialize_from_custom","value":"fn deserialize_from_custom<'a, R, T>(&Self, R) -> Result<T> where\nR: BincodeRead, T: serde::de::DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"/ Deserializes an object from a custom `BincodeRead`er using the default configuration.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14039,"byte_end":14128,"line_start":305,"line_end":305,"column_start":5,"column_end":94}},{"value":"/ It is highly recommended to use `deserialize_from` unless you need to implement","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14133,"byte_end":14216,"line_start":306,"line_end":306,"column_start":5,"column_end":88}},{"value":"/ `BincodeRead` for performance reasons.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14221,"byte_end":14263,"line_start":307,"line_end":307,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14268,"byte_end":14271,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14276,"byte_end":14344,"line_start":309,"line_end":309,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14349,"byte_end":14366,"line_start":310,"line_end":310,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14967,"byte_end":14995,"line_start":324,"line_end":324,"column_start":12,"column_end":40},"name":"deserialize_from_custom_seed","qualname":"<Config>::deserialize_from_custom_seed","value":"fn deserialize_from_custom_seed<'a, R, T>(&Self, T, R) -> Result<T::Value>\nwhere R: BincodeRead, T: serde::de::DeserializeSeed","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er with state `seed` using the default\n configuration. It is highly recommended to use `deserialize_from` unless you need to\n implement `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"/ Deserializes an object from a custom `BincodeRead`er with state `seed` using the default","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14610,"byte_end":14702,"line_start":318,"line_end":318,"column_start":5,"column_end":97}},{"value":"/ configuration. It is highly recommended to use `deserialize_from` unless you need to","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14707,"byte_end":14795,"line_start":319,"line_end":319,"column_start":5,"column_end":93}},{"value":"/ implement `BincodeRead` for performance reasons.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14800,"byte_end":14852,"line_start":320,"line_end":320,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14857,"byte_end":14860,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14865,"byte_end":14933,"line_start":322,"line_end":322,"column_start":5,"column_end":73}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":14938,"byte_end":14955,"line_start":323,"line_end":323,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":15410,"byte_end":15427,"line_start":339,"line_end":339,"column_start":12,"column_end":29},"name":"with_deserializer","qualname":"<Config>::with_deserializer","value":"fn with_deserializer<'a, A, R>(&Self, R, A) -> A::Output where\nA: DeserializerAcceptor, R: BincodeRead","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Deserializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[{"value":"/ Executes the acceptor with a serde::Deserializer instance.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":15273,"byte_end":15335,"line_start":336,"line_end":336,"column_start":5,"column_end":67}},{"value":"/ NOT A PART OF THE STABLE PUBLIC API","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":15340,"byte_end":15379,"line_start":337,"line_end":337,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":15877,"byte_end":15892,"line_start":353,"line_end":353,"column_start":12,"column_end":27},"name":"with_serializer","qualname":"<Config>::with_serializer","value":"fn with_serializer<A, W>(&Self, W, A) -> A::Output where\nA: SerializerAcceptor, W: Write","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Serializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[{"value":"/ Executes the acceptor with a serde::Serializer instance.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":15742,"byte_end":15802,"line_start":350,"line_end":350,"column_start":5,"column_end":65}},{"value":"/ NOT A PART OF THE STABLE PUBLIC API","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":15807,"byte_end":15846,"line_start":351,"line_end":351,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":30722,"byte_end":30733,"line_start":9,"line_end":9,"column_start":11,"column_end":22},"name":"BincodeRead","qualname":"::de::read::BincodeRead","value":"BincodeRead<'storage>: io::Read","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214}],"decl_id":null,"docs":" An optional Read trait for advanced Bincode usage.","sig":null,"attributes":[{"value":"/ An optional Read trait for advanced Bincode usage.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":30534,"byte_end":30588,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":30589,"byte_end":30592,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It is highly recommended to use bincode with `io::Read` or `&[u8]` before","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":30593,"byte_end":30670,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ implementing a custom `BincodeRead`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":30671,"byte_end":30711,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":30839,"byte_end":30855,"line_start":11,"line_end":11,"column_start":8,"column_end":24},"name":"forward_read_str","qualname":"::de::read::BincodeRead::forward_read_str","value":"fn forward_read_str<V>(&mut Self, usize, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Forwards reading `length` bytes of a string on to the serde reader.\n","sig":null,"attributes":[{"value":"/ Forwards reading `length` bytes of a string on to the serde reader.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":30760,"byte_end":30831,"line_start":10,"line_end":10,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31045,"byte_end":31060,"line_start":16,"line_end":16,"column_start":8,"column_end":23},"name":"get_byte_buffer","qualname":"::de::read::BincodeRead::get_byte_buffer","value":"fn get_byte_buffer(&mut Self, usize) -> Result<Vec<u8>>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Return the first `length` bytes of the internal byte buffer.\n","sig":null,"attributes":[{"value":"/ Return the first `length` bytes of the internal byte buffer.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":30973,"byte_end":31037,"line_start":15,"line_end":15,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31179,"byte_end":31197,"line_start":19,"line_end":19,"column_start":8,"column_end":26},"name":"forward_read_bytes","qualname":"::de::read::BincodeRead::forward_read_bytes","value":"fn forward_read_bytes<V>(&mut Self, usize, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Forwards reading `length` bytes on to the serde reader.\n","sig":null,"attributes":[{"value":"/ Forwards reading `length` bytes on to the serde reader.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31112,"byte_end":31171,"line_start":18,"line_end":18,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31428,"byte_end":31439,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"SliceReader","qualname":"::de::read::SliceReader","value":"SliceReader {  }","parent":null,"children":[{"krate":0,"index":218}],"decl_id":null,"docs":" A BincodeRead implementation for byte slices\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[{"value":"/ A BincodeRead implementation for byte slices","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31313,"byte_end":31361,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ NOT A PART OF THE STABLE PUBLIC API","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31362,"byte_end":31401,"line_start":25,"line_end":25,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31597,"byte_end":31605,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IoReader","qualname":"::de::read::IoReader","value":"IoReader {  }","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"decl_id":null,"docs":" A BincodeRead implementation for io::Readers\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[{"value":"/ A BincodeRead implementation for io::Readers","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31482,"byte_end":31530,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/ NOT A PART OF THE STABLE PUBLIC API","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31531,"byte_end":31570,"line_start":32,"line_end":32,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31739,"byte_end":31742,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceReader>::new","value":"fn new(&'storage [u8]) -> SliceReader","parent":null,"children":[],"decl_id":null,"docs":" Constructs a slice reader\n","sig":null,"attributes":[{"value":"/ Constructs a slice reader","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31698,"byte_end":31727,"line_start":40,"line_end":40,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31907,"byte_end":31910,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<IoReader<R>>::new","value":"fn new(R) -> IoReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an IoReadReader\n","sig":null,"attributes":[{"value":"/ Constructs an IoReadReader","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31865,"byte_end":31895,"line_start":47,"line_end":47,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32109,"byte_end":32113,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"read","qualname":"<SliceReader as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32084,"byte_end":32101,"line_start":57,"line_end":57,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32235,"byte_end":32245,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"read_exact","qualname":"<SliceReader as std::io::Read>::read_exact","value":"fn read_exact(&mut Self, &mut [u8]) -> io::Result<()>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4547},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32210,"byte_end":32227,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32418,"byte_end":32422,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"read","qualname":"<IoReader<R> as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32393,"byte_end":32410,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32538,"byte_end":32548,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"read_exact","qualname":"<IoReader<R> as std::io::Read>::read_exact","value":"fn read_exact(&mut Self, &mut [u8]) -> io::Result<()>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4547},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32513,"byte_end":32530,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32978,"byte_end":32994,"line_start":90,"line_end":90,"column_start":8,"column_end":24},"name":"forward_read_str","qualname":"<SliceReader as de::read::BincodeRead>::forward_read_str","value":"fn forward_read_str<V>(&mut Self, usize, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":0,"index":209},"children":[],"decl_id":{"krate":0,"index":211},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32953,"byte_end":32970,"line_start":89,"line_end":89,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":33568,"byte_end":33583,"line_start":109,"line_end":109,"column_start":8,"column_end":23},"name":"get_byte_buffer","qualname":"<SliceReader as de::read::BincodeRead>::get_byte_buffer","value":"fn get_byte_buffer(&mut Self, usize) -> Result<Vec<u8>>","parent":{"krate":0,"index":209},"children":[],"decl_id":{"krate":0,"index":213},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":33543,"byte_end":33560,"line_start":108,"line_end":108,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":33878,"byte_end":33896,"line_start":120,"line_end":120,"column_start":8,"column_end":26},"name":"forward_read_bytes","qualname":"<SliceReader as de::read::BincodeRead>::forward_read_bytes","value":"fn forward_read_bytes<V>(&mut Self, usize, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":0,"index":209},"children":[],"decl_id":{"krate":0,"index":214},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":33853,"byte_end":33870,"line_start":119,"line_end":119,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":34758,"byte_end":34774,"line_start":157,"line_end":157,"column_start":8,"column_end":24},"name":"forward_read_str","qualname":"<IoReader<R> as de::read::BincodeRead>::forward_read_str","value":"fn forward_read_str<V>(&mut Self, usize, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":0,"index":209},"children":[],"decl_id":{"krate":0,"index":211},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":35178,"byte_end":35193,"line_start":172,"line_end":172,"column_start":8,"column_end":23},"name":"get_byte_buffer","qualname":"<IoReader<R> as de::read::BincodeRead>::get_byte_buffer","value":"fn get_byte_buffer(&mut Self, usize) -> Result<Vec<u8>>","parent":{"krate":0,"index":209},"children":[],"decl_id":{"krate":0,"index":213},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":35357,"byte_end":35375,"line_start":177,"line_end":177,"column_start":8,"column_end":26},"name":"forward_read_bytes","qualname":"<IoReader<R> as de::read::BincodeRead>::forward_read_bytes","value":"fn forward_read_bytes<V>(&mut Self, usize, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":0,"index":209},"children":[],"decl_id":{"krate":0,"index":214},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18498,"byte_end":18513,"line_start":83,"line_end":83,"column_start":8,"column_end":23},"name":"deserialize_any","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_any","value":"fn deserialize_any<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1467},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18481,"byte_end":18490,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18683,"byte_end":18699,"line_start":90,"line_end":90,"column_start":8,"column_end":24},"name":"deserialize_bool","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_bool","value":"fn deserialize_bool<V>(Self, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1469},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":19080,"byte_end":19095,"line_start":102,"line_end":102,"column_start":21,"column_end":36},"name":"deserialize_u16","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_u16","value":"fn deserialize_u16<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1481},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18018,"byte_end":18027,"line_start":64,"line_end":64,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":19139,"byte_end":19154,"line_start":103,"line_end":103,"column_start":21,"column_end":36},"name":"deserialize_u32","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_u32","value":"fn deserialize_u32<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1483},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18018,"byte_end":18027,"line_start":64,"line_end":64,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":19198,"byte_end":19213,"line_start":104,"line_end":104,"column_start":21,"column_end":36},"name":"deserialize_u64","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_u64","value":"fn deserialize_u64<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1485},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18018,"byte_end":18027,"line_start":64,"line_end":64,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":19257,"byte_end":19272,"line_start":105,"line_end":105,"column_start":21,"column_end":36},"name":"deserialize_i16","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_i16","value":"fn deserialize_i16<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1473},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18018,"byte_end":18027,"line_start":64,"line_end":64,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":19316,"byte_end":19331,"line_start":106,"line_end":106,"column_start":21,"column_end":36},"name":"deserialize_i32","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_i32","value":"fn deserialize_i32<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1475},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18018,"byte_end":18027,"line_start":64,"line_end":64,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":19375,"byte_end":19390,"line_start":107,"line_end":107,"column_start":21,"column_end":36},"name":"deserialize_i64","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_i64","value":"fn deserialize_i64<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1477},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18018,"byte_end":18027,"line_start":64,"line_end":64,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":19434,"byte_end":19449,"line_start":108,"line_end":108,"column_start":21,"column_end":36},"name":"deserialize_f32","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_f32","value":"fn deserialize_f32<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1487},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18018,"byte_end":18027,"line_start":64,"line_end":64,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":19493,"byte_end":19508,"line_start":109,"line_end":109,"column_start":21,"column_end":36},"name":"deserialize_f64","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_f64","value":"fn deserialize_f64<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1489},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18018,"byte_end":18027,"line_start":64,"line_end":64,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":19575,"byte_end":19591,"line_start":112,"line_end":112,"column_start":22,"column_end":38},"name":"deserialize_u128","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_u128","value":"fn deserialize_u128<V>(Self, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":8546},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18018,"byte_end":18027,"line_start":64,"line_end":64,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":19660,"byte_end":19676,"line_start":115,"line_end":115,"column_start":22,"column_end":38},"name":"deserialize_i128","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_i128","value":"fn deserialize_i128<V>(Self, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":8544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":18018,"byte_end":18027,"line_start":64,"line_end":64,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":20319,"byte_end":20333,"line_start":138,"line_end":138,"column_start":8,"column_end":22},"name":"deserialize_u8","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_u8","value":"fn deserialize_u8<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1479},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":20302,"byte_end":20311,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":20547,"byte_end":20561,"line_start":147,"line_end":147,"column_start":8,"column_end":22},"name":"deserialize_i8","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_i8","value":"fn deserialize_i8<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1471},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":20530,"byte_end":20539,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":20761,"byte_end":20777,"line_start":155,"line_end":155,"column_start":8,"column_end":24},"name":"deserialize_unit","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_unit","value":"fn deserialize_unit<V>(Self, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1503},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":20914,"byte_end":20930,"line_start":162,"line_end":162,"column_start":8,"column_end":24},"name":"deserialize_char","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_char","value":"fn deserialize_char<V>(Self, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1491},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":21809,"byte_end":21824,"line_start":195,"line_end":195,"column_start":8,"column_end":23},"name":"deserialize_str","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_str","value":"fn deserialize_str<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1493},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":22102,"byte_end":22120,"line_start":204,"line_end":204,"column_start":8,"column_end":26},"name":"deserialize_string","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_string","value":"fn deserialize_string<V>(Self, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1495},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":22283,"byte_end":22300,"line_start":211,"line_end":211,"column_start":8,"column_end":25},"name":"deserialize_bytes","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_bytes","value":"fn deserialize_bytes<V>(Self, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1497},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":22580,"byte_end":22600,"line_start":220,"line_end":220,"column_start":8,"column_end":28},"name":"deserialize_byte_buf","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_byte_buf","value":"fn deserialize_byte_buf<V>(Self, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1499},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":22762,"byte_end":22778,"line_start":227,"line_end":227,"column_start":8,"column_end":24},"name":"deserialize_enum","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_enum","value":"fn deserialize_enum<V>(Self, &'static str, &'static [&'static str], V)\n-> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1519},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":23220,"byte_end":23232,"line_start":244,"line_end":244,"column_start":16,"column_end":28},"name":"variant_seed","qualname":"<&'a mut Deserializer<R, O> as serde::de::EnumAccess>::variant_seed","value":"fn variant_seed<V>(Self, V) -> Result<(V::Value, Self::Variant)> where\nV: serde::de::DeserializeSeed","parent":{"krate":17,"index":1638},"children":[],"decl_id":{"krate":17,"index":1642},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":23648,"byte_end":23665,"line_start":257,"line_end":257,"column_start":8,"column_end":25},"name":"deserialize_tuple","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_tuple","value":"fn deserialize_tuple<V>(Self, usize, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":24851,"byte_end":24869,"line_start":298,"line_end":298,"column_start":8,"column_end":26},"name":"deserialize_option","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_option","value":"fn deserialize_option<V>(Self, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1501},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":25248,"byte_end":25263,"line_start":310,"line_end":310,"column_start":8,"column_end":23},"name":"deserialize_seq","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_seq","value":"fn deserialize_seq<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1509},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":25486,"byte_end":25501,"line_start":319,"line_end":319,"column_start":8,"column_end":23},"name":"deserialize_map","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_map","value":"fn deserialize_map<V>(Self, V) -> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":27101,"byte_end":27119,"line_start":373,"line_end":373,"column_start":8,"column_end":26},"name":"deserialize_struct","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_struct","value":"fn deserialize_struct<V>(Self, &str, &'static [&'static str], V)\n-> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1517},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":27366,"byte_end":27388,"line_start":385,"line_end":385,"column_start":8,"column_end":30},"name":"deserialize_identifier","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_identifier","value":"fn deserialize_identifier<V>(Self, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1521},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":27620,"byte_end":27646,"line_start":393,"line_end":393,"column_start":8,"column_end":34},"name":"deserialize_newtype_struct","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_newtype_struct","value":"fn deserialize_newtype_struct<V>(Self, &str, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1507},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":27810,"byte_end":27833,"line_start":400,"line_end":400,"column_start":8,"column_end":31},"name":"deserialize_unit_struct","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_unit_struct","value":"fn deserialize_unit_struct<V>(Self, &'static str, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1505},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":27991,"byte_end":28015,"line_start":407,"line_end":407,"column_start":8,"column_end":32},"name":"deserialize_tuple_struct","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_tuple_struct","value":"fn deserialize_tuple_struct<V>(Self, &'static str, usize, V)\n-> Result<V::Value> where V: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1513},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":28240,"byte_end":28263,"line_start":419,"line_end":419,"column_start":8,"column_end":31},"name":"deserialize_ignored_any","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::deserialize_ignored_any","value":"fn deserialize_ignored_any<V>(Self, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1523},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":28496,"byte_end":28513,"line_start":427,"line_end":427,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"<&'a mut Deserializer<R, O> as serde::Deserializer>::is_human_readable","value":"fn is_human_readable(&Self) -> bool","parent":{"krate":17,"index":1464},"children":[],"decl_id":{"krate":17,"index":1525},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":28716,"byte_end":28728,"line_start":439,"line_end":439,"column_start":8,"column_end":20},"name":"unit_variant","qualname":"<&'a mut Deserializer<R, O> as serde::de::VariantAccess>::unit_variant","value":"fn unit_variant(Self) -> Result<()>","parent":{"krate":17,"index":1646},"children":[],"decl_id":{"krate":17,"index":1649},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":28780,"byte_end":28800,"line_start":443,"line_end":443,"column_start":8,"column_end":28},"name":"newtype_variant_seed","qualname":"<&'a mut Deserializer<R, O> as serde::de::VariantAccess>::newtype_variant_seed","value":"fn newtype_variant_seed<T>(Self, T) -> Result<T::Value> where\nT: serde::de::DeserializeSeed","parent":{"krate":17,"index":1646},"children":[],"decl_id":{"krate":17,"index":1650},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":28973,"byte_end":28986,"line_start":450,"line_end":450,"column_start":8,"column_end":21},"name":"tuple_variant","qualname":"<&'a mut Deserializer<R, O> as serde::de::VariantAccess>::tuple_variant","value":"fn tuple_variant<V>(Self, usize, V) -> Result<V::Value> where\nV: serde::de::Visitor","parent":{"krate":17,"index":1646},"children":[],"decl_id":{"krate":17,"index":1654},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":29177,"byte_end":29191,"line_start":457,"line_end":457,"column_start":8,"column_end":22},"name":"struct_variant","qualname":"<&'a mut Deserializer<R, O> as serde::de::VariantAccess>::struct_variant","value":"fn struct_variant<V>(Self, &'static [&'static str], V) -> Result<V::Value>\nwhere V: serde::de::Visitor","parent":{"krate":17,"index":1646},"children":[],"decl_id":{"krate":17,"index":1656},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":35784,"byte_end":35790,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a serialization or deserialization operation.\n","sig":null,"attributes":[{"value":"/ The result of a serialization or deserialization operation.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":35711,"byte_end":35774,"line_start":8,"line_end":8,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":35897,"byte_end":35902,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Box<ErrorKind>","parent":null,"children":[],"decl_id":null,"docs":" An error that can be produced during (de)serializing.\n","sig":null,"attributes":[{"value":"/ An error that can be produced during (de)serializing.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":35830,"byte_end":35887,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36198,"byte_end":36200,"line_start":19,"line_end":19,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" If the error stems from the reader/writer that is being used\n during (de)serialization, that error will be stored and returned here.\n","sig":null,"attributes":[{"value":"/ If the error stems from the reader/writer that is being used","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36050,"byte_end":36114,"line_start":17,"line_end":17,"column_start":5,"column_end":69}},{"value":"/ during (de)serialization, that error will be stored and returned here.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36119,"byte_end":36193,"line_start":18,"line_end":18,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36201,"byte_end":36210,"line_start":19,"line_end":19,"column_start":8,"column_end":17},"name":"0","qualname":"::error::ErrorKind::Io::0","value":"std::io::Error","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36310,"byte_end":36329,"line_start":21,"line_end":21,"column_start":5,"column_end":24},"name":"InvalidUtf8Encoding","qualname":"::error::ErrorKind::InvalidUtf8Encoding","value":"ErrorKind::InvalidUtf8Encoding(Utf8Error)","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a string that is not valid utf8\n","sig":null,"attributes":[{"value":"/ Returned if the deserializer attempts to deserialize a string that is not valid utf8","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36217,"byte_end":36305,"line_start":20,"line_end":20,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36330,"byte_end":36339,"line_start":21,"line_end":21,"column_start":25,"column_end":34},"name":"0","qualname":"::error::ErrorKind::InvalidUtf8Encoding::0","value":"std::str::Utf8Error","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36464,"byte_end":36483,"line_start":24,"line_end":24,"column_start":5,"column_end":24},"name":"InvalidBoolEncoding","qualname":"::error::ErrorKind::InvalidBoolEncoding","value":"ErrorKind::InvalidBoolEncoding(u8)","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a bool that was\n not encoded as either a 1 or a 0\n","sig":null,"attributes":[{"value":"/ Returned if the deserializer attempts to deserialize a bool that was","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36346,"byte_end":36418,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ not encoded as either a 1 or a 0","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36423,"byte_end":36459,"line_start":23,"line_end":23,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36484,"byte_end":36486,"line_start":24,"line_end":24,"column_start":25,"column_end":27},"name":"0","qualname":"::error::ErrorKind::InvalidBoolEncoding::0","value":"u8","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36596,"byte_end":36615,"line_start":26,"line_end":26,"column_start":5,"column_end":24},"name":"InvalidCharEncoding","qualname":"::error::ErrorKind::InvalidCharEncoding","value":"ErrorKind::InvalidCharEncoding","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a char that is not in the correct format.\n","sig":null,"attributes":[{"value":"/ Returned if the deserializer attempts to deserialize a char that is not in the correct format.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36493,"byte_end":36591,"line_start":25,"line_end":25,"column_start":5,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36744,"byte_end":36762,"line_start":29,"line_end":29,"column_start":5,"column_end":23},"name":"InvalidTagEncoding","qualname":"::error::ErrorKind::InvalidTagEncoding","value":"ErrorKind::InvalidTagEncoding(usize)","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize the tag of an enum that is\n not in the expected ranges\n","sig":null,"attributes":[{"value":"/ Returned if the deserializer attempts to deserialize the tag of an enum that is","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36621,"byte_end":36704,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ not in the expected ranges","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36709,"byte_end":36739,"line_start":28,"line_end":28,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36763,"byte_end":36768,"line_start":29,"line_end":29,"column_start":24,"column_end":29},"name":"0","qualname":"::error::ErrorKind::InvalidTagEncoding::0","value":"usize","parent":{"krate":0,"index":918},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36904,"byte_end":36930,"line_start":32,"line_end":32,"column_start":5,"column_end":31},"name":"DeserializeAnyNotSupported","qualname":"::error::ErrorKind::DeserializeAnyNotSupported","value":"ErrorKind::DeserializeAnyNotSupported","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Serde has a deserialize_any method that lets the format hint to the\n object which route to take in deserializing.\n","sig":null,"attributes":[{"value":"/ Serde has a deserialize_any method that lets the format hint to the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36775,"byte_end":36846,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ object which route to take in deserializing.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36851,"byte_end":36899,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":37046,"byte_end":37055,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"SizeLimit","qualname":"::error::ErrorKind::SizeLimit","value":"ErrorKind::SizeLimit","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" If (de)serializing a message takes more than the provided size limit, this\n error is returned.\n","sig":null,"attributes":[{"value":"/ If (de)serializing a message takes more than the provided size limit, this","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36936,"byte_end":37014,"line_start":33,"line_end":33,"column_start":5,"column_end":83}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":37019,"byte_end":37041,"line_start":34,"line_end":34,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":37138,"byte_end":37160,"line_start":37,"line_end":37,"column_start":5,"column_end":27},"name":"SequenceMustHaveLength","qualname":"::error::ErrorKind::SequenceMustHaveLength","value":"ErrorKind::SequenceMustHaveLength","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Bincode can not encode sequences of unknown length (like iterators).\n","sig":null,"attributes":[{"value":"/ Bincode can not encode sequences of unknown length (like iterators).","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":37061,"byte_end":37133,"line_start":36,"line_end":36,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":37209,"byte_end":37215,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Custom","qualname":"::error::ErrorKind::Custom","value":"ErrorKind::Custom(String)","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" A custom error message from Serde.\n","sig":null,"attributes":[{"value":"/ A custom error message from Serde.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":37166,"byte_end":37204,"line_start":38,"line_end":38,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":37216,"byte_end":37222,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"0","qualname":"::error::ErrorKind::Custom::0","value":"std::string::String","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":36034,"byte_end":36043,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"enum ErrorKind {\n    Io(io::Error),\n    InvalidUtf8Encoding(Utf8Error),\n    InvalidBoolEncoding(u8),\n    InvalidCharEncoding,\n    InvalidTagEncoding(usize),\n    DeserializeAnyNotSupported,\n    SizeLimit,\n    SequenceMustHaveLength,\n    Custom(String),\n}","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":927}],"decl_id":null,"docs":" The kind of error that can be produced during a serialization or deserialization.\n","sig":null,"attributes":[{"value":"/ The kind of error that can be produced during a serialization or deserialization.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":35922,"byte_end":36007,"line_start":14,"line_end":14,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":37265,"byte_end":37276,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"description","qualname":"<ErrorKind as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2569},"children":[],"decl_id":{"krate":1,"index":2573},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":38146,"byte_end":38151,"line_start":61,"line_end":61,"column_start":8,"column_end":13},"name":"cause","qualname":"<ErrorKind as std::error::Error>::cause","value":"fn cause(&Self) -> Option<&error::Error>","parent":{"krate":1,"index":2569},"children":[],"decl_id":{"krate":1,"index":2574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":38730,"byte_end":38734,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(io::Error) -> Error","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":38846,"byte_end":38849,"line_start":83,"line_end":83,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ErrorKind as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10122},"children":[],"decl_id":{"krate":2,"index":10123},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":39929,"byte_end":39935,"line_start":106,"line_end":106,"column_start":8,"column_end":14},"name":"custom","qualname":"<Error as serde::de::Error>::custom","value":"fn custom<T>(T) -> Error where T: fmt::Display","parent":{"krate":17,"index":8474},"children":[],"decl_id":{"krate":17,"index":8475},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":40075,"byte_end":40081,"line_start":112,"line_end":112,"column_start":8,"column_end":14},"name":"custom","qualname":"<Error as serde::ser::Error>::custom","value":"fn custom<T>(T) -> Self where T: fmt::Display","parent":{"krate":17,"index":9072},"children":[],"decl_id":{"krate":17,"index":9073},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":46383,"byte_end":46397,"line_start":45,"line_end":45,"column_start":8,"column_end":22},"name":"serialize_unit","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_unit","value":"fn serialize_unit(Self) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1957},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":46449,"byte_end":46470,"line_start":49,"line_end":49,"column_start":8,"column_end":29},"name":"serialize_unit_struct","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_unit_struct","value":"fn serialize_unit_struct(Self, &'static str) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1958},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":46539,"byte_end":46553,"line_start":53,"line_end":53,"column_start":8,"column_end":22},"name":"serialize_bool","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_bool","value":"fn serialize_bool(Self, bool) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1940},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":46697,"byte_end":46709,"line_start":59,"line_end":59,"column_start":8,"column_end":20},"name":"serialize_u8","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_u8","value":"fn serialize_u8(Self, u8) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":46805,"byte_end":46818,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"serialize_u16","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_u16","value":"fn serialize_u16(Self, u16) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1946},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":46929,"byte_end":46942,"line_start":67,"line_end":67,"column_start":8,"column_end":21},"name":"serialize_u32","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_u32","value":"fn serialize_u32(Self, u32) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":47053,"byte_end":47066,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"serialize_u64","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_u64","value":"fn serialize_u64(Self, u64) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1948},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":47177,"byte_end":47189,"line_start":75,"line_end":75,"column_start":8,"column_end":20},"name":"serialize_i8","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_i8","value":"fn serialize_i8(Self, i8) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1941},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":47285,"byte_end":47298,"line_start":79,"line_end":79,"column_start":8,"column_end":21},"name":"serialize_i16","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_i16","value":"fn serialize_i16(Self, i16) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1942},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":47409,"byte_end":47422,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"serialize_i32","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_i32","value":"fn serialize_i32(Self, i32) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1943},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":47533,"byte_end":47546,"line_start":87,"line_end":87,"column_start":8,"column_end":21},"name":"serialize_i64","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_i64","value":"fn serialize_i64(Self, i64) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":47678,"byte_end":47692,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"serialize_u128","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_u128","value":"fn serialize_u128(Self, u128) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":9076},"docs":"","sig":null,"attributes":[{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":47654,"byte_end":47670,"line_start":91,"line_end":91,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":47826,"byte_end":47840,"line_start":97,"line_end":97,"column_start":8,"column_end":22},"name":"serialize_i128","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_i128","value":"fn serialize_i128(Self, i128) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":9075},"docs":"","sig":null,"attributes":[{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":47802,"byte_end":47818,"line_start":96,"line_end":96,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":48454,"byte_end":48467,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"serialize_f32","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_f32","value":"fn serialize_f32(Self, f32) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1949},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":48578,"byte_end":48591,"line_start":123,"line_end":123,"column_start":8,"column_end":21},"name":"serialize_f64","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_f64","value":"fn serialize_f64(Self, f64) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1950},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":48702,"byte_end":48715,"line_start":127,"line_end":127,"column_start":8,"column_end":21},"name":"serialize_str","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_str","value":"fn serialize_str(Self, &str) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":48875,"byte_end":48889,"line_start":132,"line_end":132,"column_start":8,"column_end":22},"name":"serialize_char","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_char","value":"fn serialize_char(Self, char) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1951},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":49038,"byte_end":49053,"line_start":138,"line_end":138,"column_start":8,"column_end":23},"name":"serialize_bytes","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_bytes","value":"fn serialize_bytes(Self, &[u8]) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1953},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":49203,"byte_end":49217,"line_start":143,"line_end":143,"column_start":8,"column_end":22},"name":"serialize_none","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_none","value":"fn serialize_none(Self) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1954},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":49306,"byte_end":49320,"line_start":147,"line_end":147,"column_start":8,"column_end":22},"name":"serialize_some","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_some","value":"fn serialize_some<T>(Self, &T) -> Result<()> where T: ?Sized,\nT: serde::Serialize","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1955},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":49483,"byte_end":49496,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"serialize_seq","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_seq","value":"fn serialize_seq(Self, Option<usize>) -> Result<Self::SerializeSeq>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1964},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":49720,"byte_end":49735,"line_start":161,"line_end":161,"column_start":8,"column_end":23},"name":"serialize_tuple","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_tuple","value":"fn serialize_tuple(Self, usize) -> Result<Self::SerializeTuple>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1965},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":49838,"byte_end":49860,"line_start":165,"line_end":165,"column_start":8,"column_end":30},"name":"serialize_tuple_struct","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_tuple_struct","value":"fn serialize_tuple_struct(Self, &'static str, usize)\n-> Result<Self::SerializeTupleStruct>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1966},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":50021,"byte_end":50044,"line_start":173,"line_end":173,"column_start":8,"column_end":31},"name":"serialize_tuple_variant","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_tuple_variant","value":"fn serialize_tuple_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeTupleVariant>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1967},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":50315,"byte_end":50328,"line_start":184,"line_end":184,"column_start":8,"column_end":21},"name":"serialize_map","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_map","value":"fn serialize_map(Self, Option<usize>) -> Result<Self::SerializeMap>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1968},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":50552,"byte_end":50568,"line_start":190,"line_end":190,"column_start":8,"column_end":24},"name":"serialize_struct","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_struct","value":"fn serialize_struct(Self, &'static str, usize)\n-> Result<Self::SerializeStruct>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1969},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":50693,"byte_end":50717,"line_start":194,"line_end":194,"column_start":8,"column_end":32},"name":"serialize_struct_variant","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_struct_variant","value":"fn serialize_struct_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeStructVariant>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1970},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":50989,"byte_end":51013,"line_start":205,"line_end":205,"column_start":8,"column_end":32},"name":"serialize_newtype_struct","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_newtype_struct","value":"fn serialize_newtype_struct<T>(Self, &'static str, &T) -> Result<()> where\nT: ?Sized, T: serde::ser::Serialize","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1960},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":51171,"byte_end":51196,"line_start":212,"line_end":212,"column_start":8,"column_end":33},"name":"serialize_newtype_variant","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_newtype_variant","value":"fn serialize_newtype_variant<T>(Self, &'static str, u32, &'static str, &T)\n-> Result<()> where T: ?Sized, T: serde::ser::Serialize","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1962},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":51494,"byte_end":51516,"line_start":226,"line_end":226,"column_start":8,"column_end":30},"name":"serialize_unit_variant","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::serialize_unit_variant","value":"fn serialize_unit_variant(Self, &'static str, u32, &'static str) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1959},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":51699,"byte_end":51716,"line_start":235,"line_end":235,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"<&'a mut Serializer<W, O> as serde::Serializer>::is_human_readable","value":"fn is_human_readable(&Self) -> bool","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1982},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":52659,"byte_end":52673,"line_start":270,"line_end":270,"column_start":8,"column_end":22},"name":"serialize_unit","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_unit","value":"fn serialize_unit(Self) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1957},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":52725,"byte_end":52746,"line_start":274,"line_end":274,"column_start":8,"column_end":29},"name":"serialize_unit_struct","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_unit_struct","value":"fn serialize_unit_struct(Self, &'static str) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1958},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":52815,"byte_end":52829,"line_start":278,"line_end":278,"column_start":8,"column_end":22},"name":"serialize_bool","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_bool","value":"fn serialize_bool(Self, bool) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1940},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":52907,"byte_end":52919,"line_start":282,"line_end":282,"column_start":8,"column_end":20},"name":"serialize_u8","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_u8","value":"fn serialize_u8(Self, u8) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1945},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":52989,"byte_end":53002,"line_start":286,"line_end":286,"column_start":8,"column_end":21},"name":"serialize_u16","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_u16","value":"fn serialize_u16(Self, u16) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1946},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":53073,"byte_end":53086,"line_start":290,"line_end":290,"column_start":8,"column_end":21},"name":"serialize_u32","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_u32","value":"fn serialize_u32(Self, u32) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1947},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":53157,"byte_end":53170,"line_start":294,"line_end":294,"column_start":8,"column_end":21},"name":"serialize_u64","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_u64","value":"fn serialize_u64(Self, u64) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1948},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":53241,"byte_end":53253,"line_start":298,"line_end":298,"column_start":8,"column_end":20},"name":"serialize_i8","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_i8","value":"fn serialize_i8(Self, i8) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1941},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":53323,"byte_end":53336,"line_start":302,"line_end":302,"column_start":8,"column_end":21},"name":"serialize_i16","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_i16","value":"fn serialize_i16(Self, i16) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1942},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":53407,"byte_end":53420,"line_start":306,"line_end":306,"column_start":8,"column_end":21},"name":"serialize_i32","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_i32","value":"fn serialize_i32(Self, i32) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1943},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":53491,"byte_end":53504,"line_start":310,"line_end":310,"column_start":8,"column_end":21},"name":"serialize_i64","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_i64","value":"fn serialize_i64(Self, i64) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1944},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":53606,"byte_end":53620,"line_start":315,"line_end":315,"column_start":12,"column_end":26},"name":"serialize_u128","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_u128","value":"fn serialize_u128(Self, u128) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":9076},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":53704,"byte_end":53718,"line_start":319,"line_end":319,"column_start":12,"column_end":26},"name":"serialize_i128","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_i128","value":"fn serialize_i128(Self, i128) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":9075},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":53804,"byte_end":53817,"line_start":324,"line_end":324,"column_start":8,"column_end":21},"name":"serialize_f32","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_f32","value":"fn serialize_f32(Self, f32) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1949},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":53888,"byte_end":53901,"line_start":328,"line_end":328,"column_start":8,"column_end":21},"name":"serialize_f64","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_f64","value":"fn serialize_f64(Self, f64) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1950},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":53972,"byte_end":53985,"line_start":332,"line_end":332,"column_start":8,"column_end":21},"name":"serialize_str","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_str","value":"fn serialize_str(Self, &str) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":54108,"byte_end":54122,"line_start":337,"line_end":337,"column_start":8,"column_end":22},"name":"serialize_char","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_char","value":"fn serialize_char(Self, char) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1951},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":54229,"byte_end":54244,"line_start":341,"line_end":341,"column_start":8,"column_end":23},"name":"serialize_bytes","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_bytes","value":"fn serialize_bytes(Self, &[u8]) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1953},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":54368,"byte_end":54382,"line_start":346,"line_end":346,"column_start":8,"column_end":22},"name":"serialize_none","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_none","value":"fn serialize_none(Self) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1954},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":54451,"byte_end":54465,"line_start":350,"line_end":350,"column_start":8,"column_end":22},"name":"serialize_some","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_some","value":"fn serialize_some<T>(Self, &T) -> Result<()> where T: ?Sized,\nT: serde::Serialize","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1955},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":54628,"byte_end":54641,"line_start":358,"line_end":358,"column_start":8,"column_end":21},"name":"serialize_seq","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_seq","value":"fn serialize_seq(Self, Option<usize>) -> Result<Self::SerializeSeq>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1964},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":54870,"byte_end":54885,"line_start":365,"line_end":365,"column_start":8,"column_end":23},"name":"serialize_tuple","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_tuple","value":"fn serialize_tuple(Self, usize) -> Result<Self::SerializeTuple>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1965},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":54992,"byte_end":55014,"line_start":369,"line_end":369,"column_start":8,"column_end":30},"name":"serialize_tuple_struct","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_tuple_struct","value":"fn serialize_tuple_struct(Self, &'static str, usize)\n-> Result<Self::SerializeTupleStruct>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1966},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":55179,"byte_end":55202,"line_start":377,"line_end":377,"column_start":8,"column_end":31},"name":"serialize_tuple_variant","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_tuple_variant","value":"fn serialize_tuple_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeTupleVariant>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1967},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":55473,"byte_end":55486,"line_start":388,"line_end":388,"column_start":8,"column_end":21},"name":"serialize_map","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_map","value":"fn serialize_map(Self, Option<usize>) -> Result<Self::SerializeMap>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1968},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":55715,"byte_end":55731,"line_start":395,"line_end":395,"column_start":8,"column_end":24},"name":"serialize_struct","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_struct","value":"fn serialize_struct(Self, &'static str, usize)\n-> Result<Self::SerializeStruct>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1969},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":55860,"byte_end":55884,"line_start":399,"line_end":399,"column_start":8,"column_end":32},"name":"serialize_struct_variant","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_struct_variant","value":"fn serialize_struct_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeStructVariant>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1970},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":56156,"byte_end":56180,"line_start":410,"line_end":410,"column_start":8,"column_end":32},"name":"serialize_newtype_struct","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_newtype_struct","value":"fn serialize_newtype_struct<V>(Self, &'static str, &V) -> Result<()> where\nV: serde::Serialize + ?Sized","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1960},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":56332,"byte_end":56354,"line_start":418,"line_end":418,"column_start":8,"column_end":30},"name":"serialize_unit_variant","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_unit_variant","value":"fn serialize_unit_variant(Self, &'static str, u32, &'static str) -> Result<()>","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1959},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":56533,"byte_end":56558,"line_start":427,"line_end":427,"column_start":8,"column_end":33},"name":"serialize_newtype_variant","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::serialize_newtype_variant","value":"fn serialize_newtype_variant<V>(Self, &'static str, u32, &'static str, &V)\n-> Result<()> where V: serde::Serialize + ?Sized","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1962},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":56823,"byte_end":56840,"line_start":438,"line_end":438,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"<&'a mut SizeChecker<O> as serde::Serializer>::is_human_readable","value":"fn is_human_readable(&Self) -> bool","parent":{"krate":17,"index":1930},"children":[],"decl_id":{"krate":17,"index":1982},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1397,"byte_end":1417,"line_start":50,"line_end":50,"column_start":11,"column_end":31},"name":"DeserializerAcceptor","qualname":"::DeserializerAcceptor","value":"DeserializerAcceptor<'a>","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831}],"decl_id":null,"docs":" An object that implements this trait can be passed a\n serde::Deserializer without knowing its concrete type.","sig":null,"attributes":[{"value":"/ An object that implements this trait can be passed a","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1182,"byte_end":1238,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"/ serde::Deserializer without knowing its concrete type.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1239,"byte_end":1297,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1298,"byte_end":1301,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This trait should be used only for `with_deserializer` functions.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1302,"byte_end":1371,"line_start":48,"line_end":48,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1479,"byte_end":1485,"line_start":52,"line_end":52,"column_start":10,"column_end":16},"name":"Output","qualname":"::DeserializerAcceptor::Output","value":"type Output;","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" The return type for the accept method\n","sig":null,"attributes":[{"value":"/ The return type for the accept method","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1428,"byte_end":1469,"line_start":51,"line_end":51,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1565,"byte_end":1571,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"accept","qualname":"::DeserializerAcceptor::accept","value":"fn accept<T>(Self, T) -> Self::Output where T: serde::Deserializer","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Accept a serde::Deserializer and do whatever you want with it.\n","sig":null,"attributes":[{"value":"/ Accept a serde::Deserializer and do whatever you want with it.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1491,"byte_end":1557,"line_start":53,"line_end":53,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1840,"byte_end":1858,"line_start":62,"line_end":62,"column_start":11,"column_end":29},"name":"SerializerAcceptor","qualname":"::SerializerAcceptor","value":"SerializerAcceptor","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835}],"decl_id":null,"docs":" An object that implements this trait can be passed a\n serde::Serializer without knowing its concrete type.","sig":null,"attributes":[{"value":"/ An object that implements this trait can be passed a","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1629,"byte_end":1685,"line_start":57,"line_end":57,"column_start":1,"column_end":57}},{"value":"/ serde::Serializer without knowing its concrete type.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1686,"byte_end":1742,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1743,"byte_end":1746,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This trait should be used only for `with_serializer` functions.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1747,"byte_end":1814,"line_start":60,"line_end":60,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1916,"byte_end":1922,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Output","qualname":"::SerializerAcceptor::Output","value":"type Output;","parent":{"krate":0,"index":833},"children":[],"decl_id":null,"docs":" The return type for the accept method\n","sig":null,"attributes":[{"value":"/ The return type for the accept method","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1865,"byte_end":1906,"line_start":63,"line_end":63,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2000,"byte_end":2006,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"accept","qualname":"::SerializerAcceptor::accept","value":"fn accept<T>(Self, T) -> Self::Output where T: serde::Serializer","parent":{"krate":0,"index":833},"children":[],"decl_id":null,"docs":" Accept a serde::Serializer and do whatever you want with it.\n","sig":null,"attributes":[{"value":"/ Accept a serde::Serializer and do whatever you want with it.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":1928,"byte_end":1992,"line_start":65,"line_end":65,"column_start":5,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2258,"byte_end":2264,"line_start":77,"line_end":77,"column_start":8,"column_end":14},"name":"config","qualname":"::config","value":"fn config() -> Config","parent":null,"children":[],"decl_id":null,"docs":" Get a default configuration object.","sig":null,"attributes":[{"value":"/ Get a default configuration object.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2058,"byte_end":2097,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2098,"byte_end":2101,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ### Default Configuration:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2102,"byte_end":2132,"line_start":71,"line_end":71,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2133,"byte_end":2136,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ | Byte limit | Endianness |","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2137,"byte_end":2168,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/ |------------|------------|","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2169,"byte_end":2200,"line_start":74,"line_end":74,"column_start":1,"column_end":32}},{"value":"/ | Unlimited  | Little     |","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2201,"byte_end":2232,"line_start":75,"line_end":75,"column_start":1,"column_end":32}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2233,"byte_end":2250,"line_start":76,"line_end":76,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2548,"byte_end":2562,"line_start":85,"line_end":85,"column_start":8,"column_end":22},"name":"serialize_into","qualname":"::serialize_into","value":"fn serialize_into<W, T>(W, &T) -> Result<()> where T: ?Sized,\nW: std::io::Write, T: serde::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using the default configuration.","sig":null,"attributes":[{"value":"/ Serializes an object directly into a `Writer` using the default configuration.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2300,"byte_end":2382,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2383,"byte_end":2386,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ If the serialization would take more bytes than allowed by the size limit, an error","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2387,"byte_end":2474,"line_start":83,"line_end":83,"column_start":1,"column_end":88}},{"value":"/ is returned and *no bytes* will be written into the `Writer`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2475,"byte_end":2540,"line_start":84,"line_end":84,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2814,"byte_end":2823,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serialize","value":"fn serialize<T>(&T) -> Result<Vec<u8>> where T: ?Sized, T: serde::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using the default configuration.\n","sig":null,"attributes":[{"value":"/ Serializes a serializable object into a `Vec` of bytes using the default configuration.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2715,"byte_end":2806,"line_start":93,"line_end":93,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3096,"byte_end":3112,"line_start":104,"line_end":104,"column_start":8,"column_end":24},"name":"deserialize_from","qualname":"::deserialize_from","value":"fn deserialize_from<R, T>(R) -> Result<T> where R: std::io::Read,\nT: serde::de::DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using the default configuration.","sig":null,"attributes":[{"value":"/ Deserializes an object directly from a `Read`er using the default configuration.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":2931,"byte_end":3015,"line_start":101,"line_end":101,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3016,"byte_end":3019,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3020,"byte_end":3088,"line_start":103,"line_end":103,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3547,"byte_end":3570,"line_start":117,"line_end":117,"column_start":8,"column_end":31},"name":"deserialize_from_custom","qualname":"::deserialize_from_custom","value":"fn deserialize_from_custom<'a, R, T>(R) -> Result<T> where\nR: de::read::BincodeRead, T: serde::de::DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"/ Deserializes an object from a custom `BincodeRead`er using the default configuration.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3250,"byte_end":3339,"line_start":112,"line_end":112,"column_start":1,"column_end":90}},{"value":"/ It is highly recommended to use `deserialize_from` unless you need to implement","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3340,"byte_end":3423,"line_start":113,"line_end":113,"column_start":1,"column_end":84}},{"value":"/ `BincodeRead` for performance reasons.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3424,"byte_end":3466,"line_start":114,"line_end":114,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3467,"byte_end":3470,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ If this returns an `Error`, `reader` may be in an invalid state.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3471,"byte_end":3539,"line_start":116,"line_end":116,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3842,"byte_end":3862,"line_start":129,"line_end":129,"column_start":8,"column_end":28},"name":"deserialize_in_place","qualname":"::deserialize_in_place","value":"fn deserialize_in_place<'a, R, T>(R, &mut T) -> Result<()> where\nT: serde::de::Deserialize, R: BincodeRead","parent":null,"children":[],"decl_id":null,"docs":" Only use this if you know what you're doing.","sig":null,"attributes":[{"value":"/ Only use this if you know what you're doing.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3731,"byte_end":3779,"line_start":125,"line_end":125,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3780,"byte_end":3783,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This is part of the public API.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":3784,"byte_end":3819,"line_start":127,"line_end":127,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":4130,"byte_end":4141,"line_start":138,"line_end":138,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::deserialize","value":"fn deserialize<'a, T>(&'a [u8]) -> Result<T> where T: serde::de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using the default configuration.\n","sig":null,"attributes":[{"value":"/ Deserializes a slice of bytes into an instance of `T` using the default configuration.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":4032,"byte_end":4122,"line_start":137,"line_end":137,"column_start":1,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":4369,"byte_end":4384,"line_start":146,"line_end":146,"column_start":8,"column_end":23},"name":"serialized_size","qualname":"::serialized_size","value":"fn serialized_size<T>(&T) -> Result<u64> where T: ?Sized, T: serde::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with the default configuration.\n","sig":null,"attributes":[{"value":"/ Returns the size that an object would be if serialized using Bincode with the default configuration.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":4257,"byte_end":4361,"line_start":145,"line_end":145,"column_start":1,"column_end":105}}]},{"kind":"Function","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":4619,"byte_end":4636,"line_start":156,"line_end":156,"column_start":8,"column_end":25},"name":"with_deserializer","qualname":"::with_deserializer","value":"fn with_deserializer<'a, A, R>(R, A) -> A::Output where\nA: DeserializerAcceptor, R: BincodeRead","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Deserializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[{"value":"/ Executes the acceptor with a serde::Deserializer instance.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":4494,"byte_end":4556,"line_start":153,"line_end":153,"column_start":1,"column_end":63}},{"value":"/ NOT A PART OF THE STABLE PUBLIC API","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":4557,"byte_end":4596,"line_start":154,"line_end":154,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":4924,"byte_end":4939,"line_start":167,"line_end":167,"column_start":8,"column_end":23},"name":"with_serializer","qualname":"::with_serializer","value":"fn with_serializer<A, W>(W, A) -> A::Output where A: SerializerAcceptor,\nW: std::io::Write","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Serializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[{"value":"/ Executes the acceptor with a serde::Serializer instance.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":4801,"byte_end":4861,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"/ NOT A PART OF THE STABLE PUBLIC API","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\lib.rs","byte_start":4862,"byte_end":4901,"line_start":165,"line_end":165,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":6479,"byte_end":6480,"line_start":54,"line_end":54,"column_start":33,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":6490,"byte_end":6504,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":6599,"byte_end":6613,"line_start":62,"line_end":62,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":8022,"byte_end":8036,"line_start":113,"line_end":113,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":8273,"byte_end":8288,"line_start":123,"line_end":123,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":8542,"byte_end":8557,"line_start":133,"line_end":133,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":8771,"byte_end":8785,"line_start":143,"line_end":143,"column_start":54,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10013,"byte_end":10019,"line_start":184,"line_end":184,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31670,"byte_end":31681,"line_start":39,"line_end":39,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31847,"byte_end":31855,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32056,"byte_end":32067,"line_start":56,"line_end":56,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32375,"byte_end":32383,"line_start":67,"line_end":67,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32656,"byte_end":32667,"line_start":78,"line_end":78,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32925,"byte_end":32936,"line_start":88,"line_end":88,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":34260,"byte_end":34268,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":34714,"byte_end":34722,"line_start":153,"line_end":153,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":17010,"byte_end":17022,"line_start":32,"line_end":32,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":24029,"byte_end":24035,"line_start":267,"line_end":267,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":25853,"byte_end":25859,"line_start":329,"line_end":329,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":37246,"byte_end":37255,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":38715,"byte_end":38720,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":38827,"byte_end":38836,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":39914,"byte_end":39919,"line_start":105,"line_end":105,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":40060,"byte_end":40065,"line_start":111,"line_end":111,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\internal.rs","byte_start":41313,"byte_end":41322,"line_start":45,"line_end":45,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\internal.rs","byte_start":44628,"byte_end":44635,"line_start":164,"line_end":164,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\internal.rs","byte_start":44965,"byte_end":44973,"line_start":181,"line_end":181,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":45687,"byte_end":45697,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":51841,"byte_end":51852,"line_start":244,"line_end":244,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":57020,"byte_end":57028,"line_start":447,"line_end":447,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":57420,"byte_end":57428,"line_start":469,"line_end":469,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":57826,"byte_end":57834,"line_start":491,"line_end":491,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":58231,"byte_end":58239,"line_start":513,"line_end":513,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":58627,"byte_end":58635,"line_start":535,"line_end":535,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":59205,"byte_end":59213,"line_start":565,"line_end":565,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":59631,"byte_end":59639,"line_start":587,"line_end":587,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":60143,"byte_end":60155,"line_start":613,"line_end":613,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":60514,"byte_end":60526,"line_start":631,"line_end":631,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":60891,"byte_end":60903,"line_start":649,"line_end":649,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":61267,"byte_end":61279,"line_start":667,"line_end":667,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":61639,"byte_end":61651,"line_start":685,"line_end":685,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":62188,"byte_end":62200,"line_start":711,"line_end":711,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":62585,"byte_end":62597,"line_start":729,"line_end":729,"column_start":61,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":64024,"byte_end":64034,"line_start":784,"line_end":784,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":5643,"byte_end":5650,"line_start":22,"line_end":22,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":60},"to":{"krate":0,"index":64}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":5653,"byte_end":5658,"line_start":22,"line_end":22,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":64}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":6479,"byte_end":6480,"line_start":54,"line_end":54,"column_start":33,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":77},"to":{"krate":0,"index":64}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":6490,"byte_end":6504,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":6599,"byte_end":6613,"line_start":62,"line_end":62,"column_start":18,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":57},"to":{"krate":0,"index":60}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":8022,"byte_end":8036,"line_start":113,"line_end":113,"column_start":32,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":8273,"byte_end":8288,"line_start":123,"line_end":123,"column_start":32,"column_end":47},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":8542,"byte_end":8557,"line_start":133,"line_end":133,"column_start":54,"column_end":69},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":60}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":8771,"byte_end":8785,"line_start":143,"line_end":143,"column_start":54,"column_end":68},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":87},"to":{"krate":0,"index":60}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\config.rs","byte_start":10013,"byte_end":10019,"line_start":184,"line_end":184,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":30749,"byte_end":30753,"line_start":9,"line_end":9,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":4540},"to":{"krate":0,"index":209}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31670,"byte_end":31681,"line_start":39,"line_end":39,"column_start":16,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":31847,"byte_end":31855,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32056,"byte_end":32067,"line_start":56,"line_end":56,"column_start":29,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":216},"to":{"krate":1,"index":4540}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32375,"byte_end":32383,"line_start":67,"line_end":67,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":219},"to":{"krate":1,"index":4540}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32656,"byte_end":32667,"line_start":78,"line_end":78,"column_start":16,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":32925,"byte_end":32936,"line_start":88,"line_end":88,"column_start":42,"column_end":53},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":216},"to":{"krate":0,"index":209}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":34260,"byte_end":34268,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\read.rs","byte_start":34714,"byte_end":34722,"line_start":153,"line_end":153,"column_start":33,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":219},"to":{"krate":0,"index":209}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":17010,"byte_end":17022,"line_start":32,"line_end":32,"column_start":44,"column_end":56},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":24029,"byte_end":24035,"line_start":267,"line_end":267,"column_start":17,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":325},"to":{"krate":17,"index":1582}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\de\\mod.rs","byte_start":25853,"byte_end":25859,"line_start":329,"line_end":329,"column_start":17,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":347},"to":{"krate":17,"index":1600}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":37246,"byte_end":37255,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":906},"to":{"krate":1,"index":2569}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":38715,"byte_end":38720,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":38827,"byte_end":38836,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":906},"to":{"krate":2,"index":10122}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":39914,"byte_end":39919,"line_start":105,"line_end":105,"column_start":27,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":416},"to":{"krate":17,"index":8474}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\error.rs","byte_start":40060,"byte_end":40065,"line_start":111,"line_end":111,"column_start":28,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":416},"to":{"krate":17,"index":9072}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\internal.rs","byte_start":41313,"byte_end":41322,"line_start":45,"line_end":45,"column_start":34,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":932},"to":{"krate":0,"index":508}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\internal.rs","byte_start":44014,"byte_end":44019,"line_start":146,"line_end":146,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2801},"to":{"krate":0,"index":508}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\internal.rs","byte_start":44628,"byte_end":44635,"line_start":164,"line_end":164,"column_start":20,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":939},"to":{"krate":0,"index":508}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\internal.rs","byte_start":44965,"byte_end":44973,"line_start":181,"line_end":181,"column_start":20,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":945},"to":{"krate":0,"index":508}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":45687,"byte_end":45697,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":51841,"byte_end":51852,"line_start":244,"line_end":244,"column_start":18,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":57020,"byte_end":57028,"line_start":447,"line_end":447,"column_start":45,"column_end":53},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":658},"to":{"krate":17,"index":1983}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":57420,"byte_end":57428,"line_start":469,"line_end":469,"column_start":47,"column_end":55},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":658},"to":{"krate":17,"index":1989}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":57826,"byte_end":57834,"line_start":491,"line_end":491,"column_start":53,"column_end":61},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":658},"to":{"krate":17,"index":1995}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":58231,"byte_end":58239,"line_start":513,"line_end":513,"column_start":54,"column_end":62},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":658},"to":{"krate":17,"index":2001}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":58627,"byte_end":58635,"line_start":535,"line_end":535,"column_start":45,"column_end":53},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":658},"to":{"krate":17,"index":2007}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":59205,"byte_end":59213,"line_start":565,"line_end":565,"column_start":48,"column_end":56},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":658},"to":{"krate":17,"index":2018}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":59631,"byte_end":59639,"line_start":587,"line_end":587,"column_start":55,"column_end":63},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":658},"to":{"krate":17,"index":2025}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":60143,"byte_end":60155,"line_start":613,"line_end":613,"column_start":51,"column_end":63},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":728},"to":{"krate":17,"index":1983}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":60514,"byte_end":60526,"line_start":631,"line_end":631,"column_start":53,"column_end":65},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":728},"to":{"krate":17,"index":1989}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":60891,"byte_end":60903,"line_start":649,"line_end":649,"column_start":59,"column_end":71},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":728},"to":{"krate":17,"index":1995}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":61267,"byte_end":61279,"line_start":667,"line_end":667,"column_start":60,"column_end":72},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":728},"to":{"krate":17,"index":2001}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":61639,"byte_end":61651,"line_start":685,"line_end":685,"column_start":56,"column_end":68},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":728},"to":{"krate":17,"index":2007}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":62188,"byte_end":62200,"line_start":711,"line_end":711,"column_start":54,"column_end":66},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":728},"to":{"krate":17,"index":2018}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":62585,"byte_end":62597,"line_start":729,"line_end":729,"column_start":61,"column_end":73},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":728},"to":{"krate":17,"index":2025}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.2.0\\src\\ser\\mod.rs","byte_start":64024,"byte_end":64034,"line_start":784,"line_end":784,"column_start":6,"column_end":16},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":799},"to":{"krate":4294967295,"index":4294967295}}]}