{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1","program":"C:\\Users\\Vinay Konuru\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","async_net","--edition=2018","C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=6bddeb309d3f27d5","-C","extra-filename=-6bddeb309d3f27d5","--out-dir","c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps","--extern","async_io=c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps\\libasync_io-172ca13124401650.rmeta","--extern","blocking=c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps\\libblocking-0e3b6cbc67dab9ab.rmeta","--extern","futures_lite=c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps\\libfutures_lite-900af5e8f9c02699.rmeta","--cap-lints","allow","-L","native=c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\build\\wepoll-ffi-ef091457b36b3187\\out","--error-format=json","--sysroot","C:\\Users\\Vinay Konuru\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps\\libasync_net-6bddeb309d3f27d5.rmeta"},"prelude":{"crate_id":{"name":"async_net","disambiguator":[926624179451456817,0]},"crate_root":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src","external_crates":[{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[4402420685575932686,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-lite-1.12.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[16639894342417964460,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1960661561601094031,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4626707339213967717,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13575330073562295178,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[15417973128473761251,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3307230022923030275,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1477362299507908243,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[6635298892910706034,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1545597443293537734,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1361891767217464645,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15508830081156326446,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[15010314299123018028,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4879419464889335982,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[14947387329158915948,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":16,"id":{"name":"blocking","disambiguator":[11788004439393883444,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":17,"id":{"name":"async_channel","disambiguator":[7158124102275358399,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":18,"id":{"name":"concurrent_queue","disambiguator":[15269541614331346434,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":19,"id":{"name":"cache_padded","disambiguator":[1238709577226378565,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":20,"id":{"name":"event_listener","disambiguator":[9918295997340967371,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":21,"id":{"name":"futures_core","disambiguator":[6173946419991773545,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":22,"id":{"name":"async_task","disambiguator":[17372614879601352784,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":23,"id":{"name":"atomic_waker","disambiguator":[13294349172151153331,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":24,"id":{"name":"futures_lite","disambiguator":[902473786521455000,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[1269045153925112180,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":26,"id":{"name":"parking","disambiguator":[4705506268815164149,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":27,"id":{"name":"waker_fn","disambiguator":[5144450777290827141,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":28,"id":{"name":"futures_io","disambiguator":[17290633158441507956,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":29,"id":{"name":"fastrand","disambiguator":[6749727627265362700,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":30,"id":{"name":"memchr","disambiguator":[18211387761634498069,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","num":31,"id":{"name":"once_cell","disambiguator":[13396067912086193844,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","num":32,"id":{"name":"async_io","disambiguator":[12113679055266550491,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","num":33,"id":{"name":"socket2","disambiguator":[563300699580851621,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","num":34,"id":{"name":"winapi","disambiguator":[15063840511212365505,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","num":35,"id":{"name":"polling","disambiguator":[10123124427011468034,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","num":36,"id":{"name":"cfg_if","disambiguator":[5883972174905652012,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","num":37,"id":{"name":"log","disambiguator":[15360930774627508066,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","num":38,"id":{"name":"wepoll_ffi","disambiguator":[8294794407466813825,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","num":39,"id":{"name":"slab","disambiguator":[14934230304490194376,0]}}],"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":0,"byte_end":1655,"line_start":1,"line_end":65,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":966,"byte_end":984,"line_start":40,"line_end":40,"column_start":15,"column_end":33},"alias_span":null,"name":"AsyncToSocketAddrs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1000,"byte_end":1008,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1010,"byte_end":1021,"line_start":41,"line_end":41,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1023,"byte_end":1032,"line_start":41,"line_end":41,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1048,"byte_end":1057,"line_start":42,"line_end":42,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":10298},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1111,"byte_end":1117,"line_start":47,"line_end":47,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":10322},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1119,"byte_end":1127,"line_start":47,"line_end":47,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":10325},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1129,"byte_end":1137,"line_start":47,"line_end":47,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":10425},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1139,"byte_end":1147,"line_start":47,"line_end":47,"column_start":48,"column_end":56},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":10268},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1149,"byte_end":1159,"line_start":47,"line_end":47,"column_start":58,"column_end":68},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":10292},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1161,"byte_end":1173,"line_start":47,"line_end":47,"column_start":70,"column_end":82},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":10295},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1175,"byte_end":1187,"line_start":47,"line_end":47,"column_start":84,"column_end":96},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":10400},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1227,"byte_end":1241,"line_start":50,"line_end":50,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":0,"byte_end":1655,"line_start":1,"line_end":65,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":129},{"krate":0,"index":270},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403}],"decl_id":null,"docs":" Async networking primitives for TCP/UDP/Unix communication.","sig":null,"attributes":[{"value":"/ Async networking primitives for TCP/UDP/Unix communication.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":0,"byte_end":63,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":64,"byte_end":67,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is an async version of [`std::net`] and [`std::os::unix::net`].","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":68,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":147,"byte_end":150,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":151,"byte_end":171,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":172,"byte_end":175,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This crate uses [`async-io`] for async I/O and [`blocking`] for DNS lookups.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":176,"byte_end":256,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":257,"byte_end":260,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`async-io`]: https://docs.rs/async-io","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":261,"byte_end":303,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/ [`blocking`]: https://docs.rs/blocking","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":304,"byte_end":346,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":347,"byte_end":350,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":351,"byte_end":365,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":366,"byte_end":369,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A simple UDP server that echoes messages back to the sender:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":370,"byte_end":434,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":435,"byte_end":438,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":439,"byte_end":452,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":453,"byte_end":482,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":483,"byte_end":486,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":487,"byte_end":531,"line_start":19,"line_end":19,"column_start":1,"column_end":45}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":532,"byte_end":590,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":591,"byte_end":625,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":626,"byte_end":629,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":630,"byte_end":640,"line_start":23,"line_end":23,"column_start":1,"column_end":11}},{"value":"/     let (n, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":641,"byte_end":699,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &addr).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":700,"byte_end":748,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":749,"byte_end":754,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":755,"byte_end":788,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":789,"byte_end":796,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":798,"byte_end":821,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":822,"byte_end":893,"line_start":31,"line_end":31,"column_start":1,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2203,"byte_end":2221,"line_start":18,"line_end":18,"column_start":11,"column_end":29},"name":"AsyncToSocketAddrs","qualname":"::addr::AsyncToSocketAddrs","value":"AsyncToSocketAddrs: Sealed","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":1940,"byte_end":2000,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2001,"byte_end":2004,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This trait currently only appears in function signatures and cannot be used directly.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2005,"byte_end":2094,"line_start":15,"line_end":15,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2095,"byte_end":2098,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ However, you can use the [`resolve()`][`super::resolve()`] function to resolve addresses.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2099,"byte_end":2192,"line_start":17,"line_end":17,"column_start":1,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2244,"byte_end":2250,"line_start":20,"line_end":20,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::addr::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2345,"byte_end":2349,"line_start":22,"line_end":22,"column_start":10,"column_end":14},"name":"Iter","qualname":"::addr::Sealed::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Unpin;","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2257,"byte_end":2335,"line_start":21,"line_end":21,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2699,"byte_end":2714,"line_start":30,"line_end":30,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::addr::Sealed::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2393,"byte_end":2459,"line_start":24,"line_end":24,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2464,"byte_end":2467,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2472,"byte_end":2563,"line_start":26,"line_end":26,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2568,"byte_end":2593,"line_start":27,"line_end":27,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2598,"byte_end":2601,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2606,"byte_end":2691,"line_start":29,"line_end":29,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2799,"byte_end":2808,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(future::Boxed<io::Result<I>>)","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2809,"byte_end":2837,"line_start":34,"line_end":34,"column_start":15,"column_end":43},"name":"0","qualname":"::addr::ToSocketAddrsFuture::Resolving::0","value":"std::pin::Pin<std::boxed::Box<(dyn futures_lite::Future<Output = std::result::Result<I, std::io::Error>> + std::marker::Send + 'static)>>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2844,"byte_end":2849,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Ready","qualname":"::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2850,"byte_end":2863,"line_start":35,"line_end":35,"column_start":11,"column_end":24},"name":"0","qualname":"::addr::ToSocketAddrsFuture::Ready::0","value":"std::result::Result<I, std::io::Error>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2870,"byte_end":2874,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Done","qualname":"::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2770,"byte_end":2789,"line_start":33,"line_end":33,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::addr::ToSocketAddrsFuture","value":"enum ToSocketAddrsFuture<I> {\n    Resolving(future::Boxed<io::Result<I>>),\n    Ready(io::Result<I>),\n    Done,\n}","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2934,"byte_end":2937,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ToSocketAddrsFuture<I> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10115},"children":[],"decl_id":{"krate":2,"index":10116},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":3162,"byte_end":3166,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"poll","qualname":"<ToSocketAddrsFuture<I> as futures_lite::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13546},"children":[],"decl_id":{"krate":2,"index":13548},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":3901,"byte_end":3916,"line_start":70,"line_end":70,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddr as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":4169,"byte_end":4184,"line_start":80,"line_end":80,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddrV4 as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":4429,"byte_end":4444,"line_start":90,"line_end":90,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddrV6 as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":4691,"byte_end":4706,"line_start":100,"line_end":100,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(IpAddr, u16) as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":5094,"byte_end":5109,"line_start":114,"line_end":114,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(Ipv4Addr, u16) as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":5398,"byte_end":5413,"line_start":125,"line_end":125,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(Ipv6Addr, u16) as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":5697,"byte_end":5712,"line_start":136,"line_end":136,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(&'_ str, u16) as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":6600,"byte_end":6615,"line_start":163,"line_end":163,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(String, u16) as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":6836,"byte_end":6851,"line_start":173,"line_end":173,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<str as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":7383,"byte_end":7398,"line_start":189,"line_end":189,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<&'a [SocketAddr] as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":7654,"byte_end":7669,"line_start":199,"line_end":199,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<&'_ T as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":7884,"byte_end":7899,"line_start":209,"line_end":209,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<String as addr::Sealed>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":56},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9575,"byte_end":9586,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::tcp::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":408}],"decl_id":null,"docs":" A TCP server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP server, listening for connections.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":8464,"byte_end":8508,"line_start":19,"line_end":19,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":8509,"byte_end":8512,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After creating a [`TcpListener`] by [`bind`][`TcpListener::bind()`]ing it to an address, it","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":8513,"byte_end":8608,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ listens for incoming TCP connections. These can be accepted by calling","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":8609,"byte_end":8683,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ [`accept()`][`TcpListener::accept()`] or by awaiting items from the stream of","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":8684,"byte_end":8765,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ [`incoming`][`TcpListener::incoming()`] connections.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":8766,"byte_end":8822,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":8823,"byte_end":8826,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Cloning a [`TcpListener`] creates another handle to the same socket. The socket will be closed","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":8827,"byte_end":8925,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ when all handles to it are dropped.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":8926,"byte_end":8965,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":8966,"byte_end":8969,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":8970,"byte_end":9039,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9040,"byte_end":9043,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9044,"byte_end":9098,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9099,"byte_end":9102,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9103,"byte_end":9117,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9118,"byte_end":9121,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9122,"byte_end":9135,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9136,"byte_end":9167,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9168,"byte_end":9201,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9202,"byte_end":9205,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9206,"byte_end":9250,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9251,"byte_end":9313,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9314,"byte_end":9357,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9358,"byte_end":9361,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9362,"byte_end":9414,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     let mut stream = stream?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9415,"byte_end":9448,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/     stream.write_all(b\"hello\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9449,"byte_end":9491,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9492,"byte_end":9497,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9498,"byte_end":9531,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9532,"byte_end":9539,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11200,"byte_end":11204,"line_start":94,"line_end":94,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"async fn bind<A>(A) -> /*impl Trait*/ where A: AsyncToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`TcpListener`] bound to the given address.","sig":null,"attributes":[{"value":"/ Creates a new [`TcpListener`] bound to the given address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9768,"byte_end":9829,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9834,"byte_end":9837,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the operating system assigns an available","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9842,"byte_end":9937,"line_start":61,"line_end":61,"column_start":5,"column_end":100}},{"value":"/ port to this listener. The assigned port can be queried via the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9942,"byte_end":10009,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ [`local_addr()`][`TcpListener::local_addr()`] method.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10014,"byte_end":10071,"line_start":63,"line_end":63,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10076,"byte_end":10079,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, binding will be attempted with each of the addresses","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10084,"byte_end":10177,"line_start":65,"line_end":65,"column_start":5,"column_end":98}},{"value":"/ until one succeeds and returns the listener. If none of the addresses succeed in creating a","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10182,"byte_end":10277,"line_start":66,"line_end":66,"column_start":5,"column_end":100}},{"value":"/ listener, the error from the last attempt is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10282,"byte_end":10340,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10345,"byte_end":10348,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10353,"byte_end":10367,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10372,"byte_end":10375,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Create a TCP listener bound to `127.0.0.1:80`:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10380,"byte_end":10430,"line_start":71,"line_end":71,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10435,"byte_end":10438,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10443,"byte_end":10456,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10461,"byte_end":10492,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10497,"byte_end":10500,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10505,"byte_end":10549,"line_start":76,"line_end":76,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:80\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10554,"byte_end":10614,"line_start":77,"line_end":77,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10619,"byte_end":10652,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10657,"byte_end":10664,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10669,"byte_end":10672,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Create a TCP listener bound to `127.0.0.1:80`. If that address is unavailable, then try","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10677,"byte_end":10768,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ binding to `127.0.0.1:443`:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10773,"byte_end":10804,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10809,"byte_end":10812,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10817,"byte_end":10830,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/ use async_net::{SocketAddr, TcpListener};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10835,"byte_end":10880,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10885,"byte_end":10888,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10893,"byte_end":10937,"line_start":87,"line_end":87,"column_start":5,"column_end":49}},{"value":"/ let addrs = [","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10942,"byte_end":10959,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 80)),","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":10964,"byte_end":11011,"line_start":89,"line_end":89,"column_start":5,"column_end":52}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 443)),","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11016,"byte_end":11064,"line_start":90,"line_end":90,"column_start":5,"column_end":53}},{"value":"/ ];","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11069,"byte_end":11075,"line_start":91,"line_end":91,"column_start":5,"column_end":11}},{"value":"/ let listener = TcpListener::bind(&addrs[..]).await.unwrap();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11080,"byte_end":11144,"line_start":92,"line_end":92,"column_start":5,"column_end":69}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11149,"byte_end":11182,"line_start":93,"line_end":93,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12267,"byte_end":12277,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address this listener is bound to.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11783,"byte_end":11839,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11844,"byte_end":11847,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11852,"byte_end":11866,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11871,"byte_end":11874,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Bind to port 0 and then see which port was assigned by the operating system:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11879,"byte_end":11959,"line_start":116,"line_end":116,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11964,"byte_end":11967,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11972,"byte_end":11985,"line_start":118,"line_end":118,"column_start":5,"column_end":18}},{"value":"/ use async_net::{SocketAddr, TcpListener};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":11990,"byte_end":12035,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12040,"byte_end":12043,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12048,"byte_end":12092,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12097,"byte_end":12156,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ println!(\"Listening on {}\", listener.local_addr()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12161,"byte_end":12217,"line_start":123,"line_end":123,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12222,"byte_end":12255,"line_start":124,"line_end":124,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12813,"byte_end":12819,"line_start":143,"line_end":143,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12366,"byte_end":12404,"line_start":129,"line_end":129,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12409,"byte_end":12412,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Returns a TCP stream and the address it is connected to.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12417,"byte_end":12477,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12482,"byte_end":12485,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12490,"byte_end":12504,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12509,"byte_end":12512,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12517,"byte_end":12530,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12535,"byte_end":12566,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12571,"byte_end":12574,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12579,"byte_end":12623,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12628,"byte_end":12690,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12695,"byte_end":12745,"line_start":140,"line_end":140,"column_start":5,"column_end":55}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12750,"byte_end":12783,"line_start":141,"line_end":141,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12788,"byte_end":12795,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13788,"byte_end":13796,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":12989,"byte_end":13034,"line_start":148,"line_end":148,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13039,"byte_end":13042,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept()`][`TcpListener::accept()`]","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13047,"byte_end":13140,"line_start":150,"line_end":150,"column_start":5,"column_end":98}},{"value":"/ in a loop. The stream of connections is infinite, i.e awaiting the next connection will","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13145,"byte_end":13236,"line_start":151,"line_end":151,"column_start":5,"column_end":96}},{"value":"/ never result in [`None`].","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13241,"byte_end":13270,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13275,"byte_end":13278,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13283,"byte_end":13297,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13302,"byte_end":13305,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13310,"byte_end":13323,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13328,"byte_end":13359,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13364,"byte_end":13397,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13402,"byte_end":13405,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13410,"byte_end":13454,"line_start":160,"line_end":160,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13459,"byte_end":13518,"line_start":161,"line_end":161,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13523,"byte_end":13566,"line_start":162,"line_end":162,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13571,"byte_end":13574,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13579,"byte_end":13631,"line_start":164,"line_end":164,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13636,"byte_end":13669,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13674,"byte_end":13716,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13721,"byte_end":13726,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13731,"byte_end":13764,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13769,"byte_end":13776,"line_start":169,"line_end":169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14444,"byte_end":14447,"line_start":192,"line_end":192,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13917,"byte_end":13975,"line_start":176,"line_end":176,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13980,"byte_end":13983,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":13988,"byte_end":14081,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14086,"byte_end":14097,"line_start":179,"line_end":179,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14102,"byte_end":14105,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14110,"byte_end":14124,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14129,"byte_end":14132,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14137,"byte_end":14150,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14155,"byte_end":14186,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14191,"byte_end":14194,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14199,"byte_end":14243,"line_start":186,"line_end":186,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:80\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14248,"byte_end":14308,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/ listener.set_ttl(100)?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14313,"byte_end":14340,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(listener.ttl()?, 100);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14345,"byte_end":14382,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14387,"byte_end":14420,"line_start":190,"line_end":190,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14425,"byte_end":14432,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15007,"byte_end":15014,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14522,"byte_end":14580,"line_start":196,"line_end":196,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14585,"byte_end":14588,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14593,"byte_end":14686,"line_start":198,"line_end":198,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14691,"byte_end":14702,"line_start":199,"line_end":199,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14707,"byte_end":14710,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14715,"byte_end":14729,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14734,"byte_end":14737,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14742,"byte_end":14755,"line_start":203,"line_end":203,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14760,"byte_end":14791,"line_start":204,"line_end":204,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14796,"byte_end":14799,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14804,"byte_end":14848,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:80\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14853,"byte_end":14913,"line_start":207,"line_end":207,"column_start":5,"column_end":65}},{"value":"/ listener.set_ttl(100)?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14918,"byte_end":14945,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14950,"byte_end":14983,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":14988,"byte_end":14995,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15168,"byte_end":15172,"line_start":217,"line_end":217,"column_start":8,"column_end":12},"name":"from","qualname":"<TcpListener as std::convert::From>::from","value":"fn from(Async<std::net::TcpListener>) -> TcpListener","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15374,"byte_end":15382,"line_start":225,"line_end":225,"column_start":8,"column_end":16},"name":"try_from","qualname":"<TcpListener as std::convert::TryFrom>::try_from","value":"fn try_from(std::net::TcpListener) -> io::Result<TcpListener>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15586,"byte_end":15590,"line_start":231,"line_end":231,"column_start":8,"column_end":12},"name":"from","qualname":"<Arc<Async<std::net::TcpListener>> as std::convert::From>::from","value":"fn from(TcpListener) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15823,"byte_end":15836,"line_start":245,"line_end":245,"column_start":8,"column_end":21},"name":"as_raw_socket","qualname":"<TcpListener as std::os::windows::io::AsRawSocket>::as_raw_socket","value":"fn as_raw_socket(&Self) -> RawSocket","parent":{"krate":1,"index":5855},"children":[],"decl_id":{"krate":1,"index":5856},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16114,"byte_end":16122,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::tcp::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":219}],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15903,"byte_end":15944,"line_start":250,"line_end":250,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15945,"byte_end":15948,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15949,"byte_end":16047,"line_start":252,"line_end":252,"column_start":1,"column_end":99}},{"value":"/ created by the [`TcpListener::incoming()`] method.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16048,"byte_end":16102,"line_start":253,"line_end":253,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16320,"byte_end":16329,"line_start":262,"line_end":262,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Incoming as futures_lite::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":21,"index":96},"children":[],"decl_id":{"krate":21,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16616,"byte_end":16619,"line_start":269,"line_end":269,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Incoming as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10115},"children":[],"decl_id":{"krate":2,"index":10116},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17831,"byte_end":17840,"line_start":304,"line_end":304,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::tcp::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":" A TCP connection.","sig":null,"attributes":[{"value":"/ A TCP connection.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16721,"byte_end":16742,"line_start":274,"line_end":274,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16743,"byte_end":16746,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ A [`TcpStream`] can be created by [`connect`][`TcpStream::connect()`]ing to an endpoint or by","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16747,"byte_end":16844,"line_start":276,"line_end":276,"column_start":1,"column_end":98}},{"value":"/ [`accept`][`TcpListener::accept()`]ing an incoming connection.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16845,"byte_end":16911,"line_start":277,"line_end":277,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16912,"byte_end":16915,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`] is a bidirectional stream that implements traits [`AsyncRead`] and","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16916,"byte_end":17000,"line_start":279,"line_end":279,"column_start":1,"column_end":85}},{"value":"/ [`AsyncWrite`].","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17001,"byte_end":17020,"line_start":280,"line_end":280,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17021,"byte_end":17024,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ Cloning a [`TcpStream`] creates another handle to the same socket. The socket will be closed","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17025,"byte_end":17121,"line_start":282,"line_end":282,"column_start":1,"column_end":97}},{"value":"/ when all handles to it are dropped. The reading and writing portions of the connection can also","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17122,"byte_end":17221,"line_start":283,"line_end":283,"column_start":1,"column_end":100}},{"value":"/ be shut down individually with the [`shutdown()`][`TcpStream::shutdown()`] method.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17222,"byte_end":17308,"line_start":284,"line_end":284,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17309,"byte_end":17312,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17313,"byte_end":17382,"line_start":286,"line_end":286,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17383,"byte_end":17386,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17387,"byte_end":17441,"line_start":288,"line_end":288,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17442,"byte_end":17445,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17446,"byte_end":17460,"line_start":290,"line_end":290,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17461,"byte_end":17464,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17465,"byte_end":17478,"line_start":292,"line_end":292,"column_start":1,"column_end":14}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17479,"byte_end":17508,"line_start":293,"line_end":293,"column_start":1,"column_end":30}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17509,"byte_end":17542,"line_start":294,"line_end":294,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17543,"byte_end":17546,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17547,"byte_end":17591,"line_start":296,"line_end":296,"column_start":1,"column_end":45}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17592,"byte_end":17657,"line_start":297,"line_end":297,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17658,"byte_end":17696,"line_start":298,"line_end":298,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17697,"byte_end":17700,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17701,"byte_end":17735,"line_start":300,"line_end":300,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17736,"byte_end":17777,"line_start":301,"line_end":301,"column_start":1,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17778,"byte_end":17811,"line_start":302,"line_end":302,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":17812,"byte_end":17819,"line_start":303,"line_end":303,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19528,"byte_end":19535,"line_start":355,"line_end":355,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"async fn connect<A>(A) -> /*impl Trait*/ where A: AsyncToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP connection to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP connection to the specified address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18295,"byte_end":18349,"line_start":322,"line_end":322,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18354,"byte_end":18357,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the provided `addr`,","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18362,"byte_end":18456,"line_start":324,"line_end":324,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18461,"byte_end":18464,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connecting will be attempted with each of the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18469,"byte_end":18555,"line_start":326,"line_end":326,"column_start":5,"column_end":91}},{"value":"/ addresses until connecting to one succeeds. If none of the addresses result in a successful","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18560,"byte_end":18655,"line_start":327,"line_end":327,"column_start":5,"column_end":100}},{"value":"/ connection, the error from the last connect attempt is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18660,"byte_end":18728,"line_start":328,"line_end":328,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18733,"byte_end":18736,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18741,"byte_end":18755,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18760,"byte_end":18763,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Connect to `example.com:80`:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18768,"byte_end":18800,"line_start":332,"line_end":332,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18805,"byte_end":18808,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18813,"byte_end":18820,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18825,"byte_end":18854,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18859,"byte_end":18862,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18867,"byte_end":18911,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"example.com:80\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18916,"byte_end":18977,"line_start":338,"line_end":338,"column_start":5,"column_end":66}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18982,"byte_end":19015,"line_start":339,"line_end":339,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19020,"byte_end":19027,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19032,"byte_end":19035,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ Connect to `127.0.0.1:8080`. If that fails, then try connecting to `127.0.0.1:8081`:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19040,"byte_end":19128,"line_start":342,"line_end":342,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19133,"byte_end":19136,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19141,"byte_end":19154,"line_start":344,"line_end":344,"column_start":5,"column_end":18}},{"value":"/ use async_net::{SocketAddr, TcpStream};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19159,"byte_end":19202,"line_start":345,"line_end":345,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19207,"byte_end":19210,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19215,"byte_end":19259,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/ let addrs = [","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19264,"byte_end":19281,"line_start":348,"line_end":348,"column_start":5,"column_end":22}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 8080)),","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19286,"byte_end":19335,"line_start":349,"line_end":349,"column_start":5,"column_end":54}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 8081)),","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19340,"byte_end":19389,"line_start":350,"line_end":350,"column_start":5,"column_end":54}},{"value":"/ ];","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19394,"byte_end":19400,"line_start":351,"line_end":351,"column_start":5,"column_end":11}},{"value":"/ let stream = TcpStream::connect(&addrs[..]).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19405,"byte_end":19460,"line_start":352,"line_end":352,"column_start":5,"column_end":60}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19465,"byte_end":19498,"line_start":353,"line_end":353,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":19503,"byte_end":19510,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20492,"byte_end":20502,"line_start":385,"line_end":385,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address this stream is bound to.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20109,"byte_end":20163,"line_start":373,"line_end":373,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20168,"byte_end":20171,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20176,"byte_end":20190,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20195,"byte_end":20198,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20203,"byte_end":20210,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20215,"byte_end":20244,"line_start":378,"line_end":378,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20249,"byte_end":20252,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20257,"byte_end":20301,"line_start":380,"line_end":380,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"example.com:80\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20306,"byte_end":20367,"line_start":381,"line_end":381,"column_start":5,"column_end":66}},{"value":"/ println!(\"Local address is {}\", stream.local_addr()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20372,"byte_end":20430,"line_start":382,"line_end":382,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20435,"byte_end":20468,"line_start":383,"line_end":383,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20473,"byte_end":20480,"line_start":384,"line_end":384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20974,"byte_end":20983,"line_start":401,"line_end":401,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address this stream is connected to.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20591,"byte_end":20650,"line_start":389,"line_end":389,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20655,"byte_end":20658,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20663,"byte_end":20677,"line_start":391,"line_end":391,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20682,"byte_end":20685,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20690,"byte_end":20697,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20702,"byte_end":20731,"line_start":394,"line_end":394,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20736,"byte_end":20739,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20744,"byte_end":20788,"line_start":396,"line_end":396,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"example.com:80\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20793,"byte_end":20854,"line_start":397,"line_end":397,"column_start":5,"column_end":66}},{"value":"/ println!(\"Connected to {}\", stream.peer_addr()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20859,"byte_end":20912,"line_start":398,"line_end":398,"column_start":5,"column_end":58}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20917,"byte_end":20950,"line_start":399,"line_end":399,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":20955,"byte_end":20962,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21743,"byte_end":21751,"line_start":422,"line_end":422,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn shutdown(&Self, std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read half, write half, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read half, write half, or both halves of this connection.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21071,"byte_end":21147,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21152,"byte_end":21155,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O in the given directions to return","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21160,"byte_end":21247,"line_start":407,"line_end":407,"column_start":5,"column_end":92}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21252,"byte_end":21334,"line_start":408,"line_end":408,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21339,"byte_end":21342,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21347,"byte_end":21417,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21422,"byte_end":21425,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21430,"byte_end":21444,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21449,"byte_end":21452,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21457,"byte_end":21470,"line_start":414,"line_end":414,"column_start":5,"column_end":18}},{"value":"/ use async_net::{Shutdown, TcpStream};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21475,"byte_end":21516,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21521,"byte_end":21524,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21529,"byte_end":21573,"line_start":417,"line_end":417,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21578,"byte_end":21639,"line_start":418,"line_end":418,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21644,"byte_end":21681,"line_start":419,"line_end":419,"column_start":5,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21686,"byte_end":21719,"line_start":420,"line_end":420,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21724,"byte_end":21731,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22503,"byte_end":22507,"line_start":445,"line_end":445,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data without removing it from the queue.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21863,"byte_end":21916,"line_start":426,"line_end":426,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21921,"byte_end":21924,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21929,"byte_end":21980,"line_start":428,"line_end":428,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21985,"byte_end":21988,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":21993,"byte_end":22088,"line_start":430,"line_end":430,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22093,"byte_end":22134,"line_start":431,"line_end":431,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22139,"byte_end":22142,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22147,"byte_end":22161,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22166,"byte_end":22169,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22174,"byte_end":22187,"line_start":435,"line_end":435,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22192,"byte_end":22221,"line_start":436,"line_end":436,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22226,"byte_end":22229,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22234,"byte_end":22278,"line_start":438,"line_end":438,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22283,"byte_end":22344,"line_start":439,"line_end":439,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22349,"byte_end":22352,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22357,"byte_end":22389,"line_start":441,"line_end":441,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22394,"byte_end":22435,"line_start":442,"line_end":442,"column_start":5,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22440,"byte_end":22473,"line_start":443,"line_end":443,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22478,"byte_end":22485,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23466,"byte_end":23473,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22600,"byte_end":22663,"line_start":449,"line_end":449,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22668,"byte_end":22671,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, this option disables the [Nagle algorithm][nagle-wiki]. This means that","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22676,"byte_end":22769,"line_start":451,"line_end":451,"column_start":5,"column_end":98}},{"value":"/ written data is always sent as soon as possible, even if there is only a small amount of","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22774,"byte_end":22866,"line_start":452,"line_end":452,"column_start":5,"column_end":97}},{"value":"/ it.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22871,"byte_end":22878,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22883,"byte_end":22886,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ When set to `false`, written data is buffered until there is a certain amount to send out,","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22891,"byte_end":22985,"line_start":455,"line_end":455,"column_start":5,"column_end":99}},{"value":"/ thereby avoiding the frequent sending of small packets.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":22990,"byte_end":23049,"line_start":456,"line_end":456,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23054,"byte_end":23057,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [nagle-wiki]: https://en.wikipedia.org/wiki/Nagle%27s_algorithm","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23062,"byte_end":23129,"line_start":458,"line_end":458,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23134,"byte_end":23137,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23142,"byte_end":23156,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23161,"byte_end":23164,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23169,"byte_end":23182,"line_start":462,"line_end":462,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23187,"byte_end":23216,"line_start":463,"line_end":463,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23221,"byte_end":23224,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23229,"byte_end":23273,"line_start":465,"line_end":465,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23278,"byte_end":23339,"line_start":466,"line_end":466,"column_start":5,"column_end":66}},{"value":"/ println!(\"TCP_NODELAY is set to {}\", stream.nodelay()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23344,"byte_end":23404,"line_start":467,"line_end":467,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23409,"byte_end":23442,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23447,"byte_end":23454,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24390,"byte_end":24401,"line_start":495,"line_end":495,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23553,"byte_end":23616,"line_start":474,"line_end":474,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23621,"byte_end":23624,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, this option disables the [Nagle algorithm][nagle-wiki]. This means that","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23629,"byte_end":23722,"line_start":476,"line_end":476,"column_start":5,"column_end":98}},{"value":"/ written data is always sent as soon as possible, even if there is only a small amount of","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23727,"byte_end":23819,"line_start":477,"line_end":477,"column_start":5,"column_end":97}},{"value":"/ it.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23824,"byte_end":23831,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23836,"byte_end":23839,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When set to `false`, written data is buffered until there is a certain amount to send out,","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23844,"byte_end":23938,"line_start":480,"line_end":480,"column_start":5,"column_end":99}},{"value":"/ thereby avoiding the frequent sending of small packets.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":23943,"byte_end":24002,"line_start":481,"line_end":481,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24007,"byte_end":24010,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ [nagle-wiki]: https://en.wikipedia.org/wiki/Nagle%27s_algorithm","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24015,"byte_end":24082,"line_start":483,"line_end":483,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24087,"byte_end":24090,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24095,"byte_end":24109,"line_start":485,"line_end":485,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24114,"byte_end":24117,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24122,"byte_end":24135,"line_start":487,"line_end":487,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24140,"byte_end":24169,"line_start":488,"line_end":488,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24174,"byte_end":24177,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24182,"byte_end":24226,"line_start":490,"line_end":490,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24231,"byte_end":24292,"line_start":491,"line_end":491,"column_start":5,"column_end":66}},{"value":"/ stream.set_nodelay(false)?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24297,"byte_end":24328,"line_start":492,"line_end":492,"column_start":5,"column_end":36}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24333,"byte_end":24366,"line_start":493,"line_end":493,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24371,"byte_end":24378,"line_start":494,"line_end":494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25013,"byte_end":25016,"line_start":514,"line_end":514,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24505,"byte_end":24563,"line_start":499,"line_end":499,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24568,"byte_end":24571,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24576,"byte_end":24669,"line_start":501,"line_end":501,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24674,"byte_end":24685,"line_start":502,"line_end":502,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24690,"byte_end":24693,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24698,"byte_end":24712,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24717,"byte_end":24720,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24725,"byte_end":24738,"line_start":506,"line_end":506,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24743,"byte_end":24772,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24777,"byte_end":24780,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24785,"byte_end":24829,"line_start":509,"line_end":509,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24834,"byte_end":24895,"line_start":510,"line_end":510,"column_start":5,"column_end":66}},{"value":"/ println!(\"IP_TTL is set to {}\", stream.ttl()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24900,"byte_end":24951,"line_start":511,"line_end":511,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24956,"byte_end":24989,"line_start":512,"line_end":512,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":24994,"byte_end":25001,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25573,"byte_end":25580,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25091,"byte_end":25149,"line_start":518,"line_end":518,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25154,"byte_end":25157,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25162,"byte_end":25255,"line_start":520,"line_end":520,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25260,"byte_end":25271,"line_start":521,"line_end":521,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25276,"byte_end":25279,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25284,"byte_end":25298,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25303,"byte_end":25306,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25311,"byte_end":25324,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25329,"byte_end":25358,"line_start":526,"line_end":526,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25363,"byte_end":25366,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25371,"byte_end":25415,"line_start":528,"line_end":528,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25420,"byte_end":25481,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25486,"byte_end":25511,"line_start":530,"line_end":530,"column_start":5,"column_end":30}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25516,"byte_end":25549,"line_start":531,"line_end":531,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25554,"byte_end":25561,"line_start":532,"line_end":532,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25708,"byte_end":25711,"line_start":539,"line_end":539,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TcpStream as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10115},"children":[],"decl_id":{"krate":2,"index":10116},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25833,"byte_end":25838,"line_start":545,"line_end":545,"column_start":8,"column_end":13},"name":"clone","qualname":"<TcpStream as std::clone::Clone>::clone","value":"fn clone(&Self) -> TcpStream","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25974,"byte_end":25978,"line_start":551,"line_end":551,"column_start":8,"column_end":12},"name":"from","qualname":"<TcpStream as std::convert::From>::from","value":"fn from(Async<std::net::TcpStream>) -> TcpStream","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26146,"byte_end":26150,"line_start":557,"line_end":557,"column_start":8,"column_end":12},"name":"from","qualname":"<Arc<Async<std::net::TcpStream>> as std::convert::From>::from","value":"fn from(TcpStream) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26290,"byte_end":26298,"line_start":565,"line_end":565,"column_start":8,"column_end":16},"name":"try_from","qualname":"<TcpStream as std::convert::TryFrom>::try_from","value":"fn try_from(std::net::TcpStream) -> io::Result<TcpStream>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26595,"byte_end":26608,"line_start":579,"line_end":579,"column_start":8,"column_end":21},"name":"as_raw_socket","qualname":"<TcpStream as std::os::windows::io::AsRawSocket>::as_raw_socket","value":"fn as_raw_socket(&Self) -> RawSocket","parent":{"krate":1,"index":5855},"children":[],"decl_id":{"krate":1,"index":5856},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26713,"byte_end":26722,"line_start":585,"line_end":585,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<TcpStream as futures_lite::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":39},"children":[],"decl_id":{"krate":28,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":27658,"byte_end":27668,"line_start":616,"line_end":616,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<TcpStream as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":28567,"byte_end":28577,"line_start":645,"line_end":645,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<TcpStream as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":29427,"byte_end":29437,"line_start":670,"line_end":670,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<TcpStream as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":29589,"byte_end":29608,"line_start":674,"line_end":674,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<TcpStream as futures_lite::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":28,"index":42},"children":[],"decl_id":{"krate":28,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32504,"byte_end":32513,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":414}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":30813,"byte_end":30830,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":30831,"byte_end":30834,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a [`UdpSocket`] by [`bind`][`UdpSocket::bind()`]ing it to a socket address, data","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":30835,"byte_end":30934,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ can be [sent to] and [received from] any other socket address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":30935,"byte_end":31001,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31002,"byte_end":31005,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Cloning a [`UdpSocket`] creates another handle to the same socket. The socket will be closed","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31006,"byte_end":31102,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ when all handles to it are dropped.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31103,"byte_end":31142,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31143,"byte_end":31146,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Although UDP is a connectionless protocol, this implementation provides an interface to set an","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31147,"byte_end":31245,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ address where data should be sent and received from. After setting a remote address with","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31246,"byte_end":31338,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ [`connect()`][`UdpSocket::connect()`], data can be sent to and received from that address with","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31339,"byte_end":31437,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ [`send()`][`UdpSocket::send()`] and [`recv()`][`UdpSocket::recv()`].","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31438,"byte_end":31510,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31511,"byte_end":31514,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31515,"byte_end":31614,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`][`super::TcpListener`] and","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31615,"byte_end":31690,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ [`TcpStream`][`super::TcpStream`] for TCP primitives.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31691,"byte_end":31748,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31749,"byte_end":31752,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [received from]: UdpSocket::recv_from()","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31753,"byte_end":31796,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ [sent to]: UdpSocket::send_to()","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31797,"byte_end":31832,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31833,"byte_end":31887,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31888,"byte_end":31891,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31892,"byte_end":31906,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31907,"byte_end":31910,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31911,"byte_end":31924,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31925,"byte_end":31954,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31955,"byte_end":31958,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":31959,"byte_end":32003,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32004,"byte_end":32062,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 20];","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32063,"byte_end":32095,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32096,"byte_end":32099,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32100,"byte_end":32110,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/     // Receive a single datagram message.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32111,"byte_end":32156,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"/     // If `buf` is too small to hold the entire message, it will be cut off.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32157,"byte_end":32237,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/     let (n, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32238,"byte_end":32296,"line_start":47,"line_end":47,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32297,"byte_end":32300,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // Send the message back to the same address that has sent it.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32301,"byte_end":32371,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/     socket.send_to(&buf[..n], &addr).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32372,"byte_end":32420,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32421,"byte_end":32426,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32427,"byte_end":32460,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32461,"byte_end":32468,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34105,"byte_end":34109,"line_start":100,"line_end":100,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"async fn bind<A>(A) -> /*impl Trait*/ where A: AsyncToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`UdpSocket`] bound to the given address.","sig":null,"attributes":[{"value":"/ Creates a new [`UdpSocket`] bound to the given address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32685,"byte_end":32744,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32749,"byte_end":32752,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the operating system assigns an available","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32757,"byte_end":32852,"line_start":66,"line_end":66,"column_start":5,"column_end":100}},{"value":"/ port to this socket. The assigned port can be queried via the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32857,"byte_end":32922,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ [`local_addr()`][`UdpSocket::local_addr()`] method.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32927,"byte_end":32982,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32987,"byte_end":32990,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, binding will be attempted with each of the addresses","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32995,"byte_end":33088,"line_start":70,"line_end":70,"column_start":5,"column_end":98}},{"value":"/ until one succeeds and returns the socket. If none of the addresses succeed in creating a","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33093,"byte_end":33186,"line_start":71,"line_end":71,"column_start":5,"column_end":98}},{"value":"/ socket, the error from the last attempt is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33191,"byte_end":33247,"line_start":72,"line_end":72,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33252,"byte_end":33255,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33260,"byte_end":33274,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33279,"byte_end":33282,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Create a UDP socket bound to `127.0.0.1:3400`:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33287,"byte_end":33337,"line_start":76,"line_end":76,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33342,"byte_end":33345,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33350,"byte_end":33363,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33368,"byte_end":33397,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33402,"byte_end":33405,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33410,"byte_end":33454,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:3400\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33459,"byte_end":33517,"line_start":82,"line_end":82,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33522,"byte_end":33555,"line_start":83,"line_end":83,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33560,"byte_end":33567,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33572,"byte_end":33575,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Create a UDP socket bound to `127.0.0.1:3400`. If that address is unavailable, then try","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33580,"byte_end":33671,"line_start":86,"line_end":86,"column_start":5,"column_end":96}},{"value":"/ binding to `127.0.0.1:3401`:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33676,"byte_end":33708,"line_start":87,"line_end":87,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33713,"byte_end":33716,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33721,"byte_end":33734,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/ use async_net::{SocketAddr, UdpSocket};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33739,"byte_end":33782,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33787,"byte_end":33790,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33795,"byte_end":33839,"line_start":92,"line_end":92,"column_start":5,"column_end":49}},{"value":"/ let addrs = [","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33844,"byte_end":33861,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 3400)),","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33866,"byte_end":33915,"line_start":94,"line_end":94,"column_start":5,"column_end":54}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 3401)),","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33920,"byte_end":33969,"line_start":95,"line_end":95,"column_start":5,"column_end":54}},{"value":"/ ];","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33974,"byte_end":33980,"line_start":96,"line_end":96,"column_start":5,"column_end":11}},{"value":"/ let socket = UdpSocket::bind(&addrs[..]).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":33985,"byte_end":34037,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34042,"byte_end":34075,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34080,"byte_end":34087,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35282,"byte_end":35292,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address this socket is bound to.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34675,"byte_end":34729,"line_start":118,"line_end":118,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34734,"byte_end":34737,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34742,"byte_end":34830,"line_start":120,"line_end":120,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34835,"byte_end":34854,"line_start":121,"line_end":121,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34859,"byte_end":34862,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34867,"byte_end":34881,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34886,"byte_end":34889,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Bind to port 0 and then see which port was assigned by the operating system:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34894,"byte_end":34974,"line_start":125,"line_end":125,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34979,"byte_end":34982,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":34987,"byte_end":35000,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ use async_net::{SocketAddr, UdpSocket};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35005,"byte_end":35048,"line_start":128,"line_end":128,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35053,"byte_end":35056,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35061,"byte_end":35105,"line_start":130,"line_end":130,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35110,"byte_end":35165,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ println!(\"Bound to {}\", socket.local_addr()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35170,"byte_end":35220,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35225,"byte_end":35258,"line_start":133,"line_end":133,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35263,"byte_end":35270,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35820,"byte_end":35829,"line_start":152,"line_end":152,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address this socket is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address this socket is connected to.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35381,"byte_end":35440,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35445,"byte_end":35448,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35453,"byte_end":35467,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35472,"byte_end":35475,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35480,"byte_end":35493,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35498,"byte_end":35527,"line_start":144,"line_end":144,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35532,"byte_end":35535,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35540,"byte_end":35584,"line_start":146,"line_end":146,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35589,"byte_end":35648,"line_start":147,"line_end":147,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"192.168.0.1:41203\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35653,"byte_end":35700,"line_start":148,"line_end":148,"column_start":5,"column_end":52}},{"value":"/ println!(\"Connected to {}\", socket.peer_addr()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35705,"byte_end":35758,"line_start":149,"line_end":149,"column_start":5,"column_end":58}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35763,"byte_end":35796,"line_start":150,"line_end":150,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35801,"byte_end":35808,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36873,"byte_end":36880,"line_start":177,"line_end":177,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"async fn connect<A, '_>(&'_ Self, A) -> /*impl Trait*/ where\nA: AsyncToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to an address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to an address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35917,"byte_end":35959,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35964,"byte_end":35967,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send()`][`UdpSocket::send()`] and [`recv()`][`UdpSocket::recv()`]","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":35972,"byte_end":36067,"line_start":158,"line_end":158,"column_start":5,"column_end":100}},{"value":"/ will use the specified address for sending and receiving messages. Additionally, a filter","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36072,"byte_end":36165,"line_start":159,"line_end":159,"column_start":5,"column_end":98}},{"value":"/ will be applied to [`recv_from()`][`UdpSocket::recv_from()`] so that it only receives","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36170,"byte_end":36259,"line_start":160,"line_end":160,"column_start":5,"column_end":94}},{"value":"/ messages from that same address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36264,"byte_end":36300,"line_start":161,"line_end":161,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36305,"byte_end":36308,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connecting will be attempted with each of the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36313,"byte_end":36399,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/ addresses until the operating system accepts one. If none of the addresses are accepted,","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36404,"byte_end":36496,"line_start":164,"line_end":164,"column_start":5,"column_end":97}},{"value":"/ the error from the last attempt is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36501,"byte_end":36549,"line_start":165,"line_end":165,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36554,"byte_end":36557,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36562,"byte_end":36576,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36581,"byte_end":36584,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36589,"byte_end":36602,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36607,"byte_end":36636,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36641,"byte_end":36644,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36649,"byte_end":36693,"line_start":172,"line_end":172,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:3400\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36698,"byte_end":36756,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36761,"byte_end":36805,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36810,"byte_end":36843,"line_start":175,"line_end":175,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":36848,"byte_end":36855,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38181,"byte_end":38190,"line_start":215,"line_end":215,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message.","sig":null,"attributes":[{"value":"/ Receives a single datagram message.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37409,"byte_end":37448,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37453,"byte_end":37456,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes received and the address message came from.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37461,"byte_end":37548,"line_start":197,"line_end":197,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37553,"byte_end":37556,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte buffer of sufficient size to hold a message.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37561,"byte_end":37654,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ If the received message is too long to fit into the buffer, it may be truncated.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37659,"byte_end":37743,"line_start":200,"line_end":200,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37748,"byte_end":37751,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37756,"byte_end":37770,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37775,"byte_end":37778,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37783,"byte_end":37796,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37801,"byte_end":37830,"line_start":205,"line_end":205,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37835,"byte_end":37838,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37843,"byte_end":37887,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37892,"byte_end":37951,"line_start":208,"line_end":208,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37956,"byte_end":37959,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":37964,"byte_end":37998,"line_start":210,"line_end":210,"column_start":5,"column_end":39}},{"value":"/ let (n, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38003,"byte_end":38057,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, addr);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38062,"byte_end":38113,"line_start":212,"line_end":212,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38118,"byte_end":38151,"line_start":213,"line_end":213,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38156,"byte_end":38163,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39266,"byte_end":39275,"line_start":242,"line_end":242,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message without removing it from the queue.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38302,"byte_end":38376,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38381,"byte_end":38384,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the address message came from.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38389,"byte_end":38474,"line_start":221,"line_end":221,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38479,"byte_end":38482,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte buffer of sufficient size to hold a message.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38487,"byte_end":38580,"line_start":223,"line_end":223,"column_start":5,"column_end":98}},{"value":"/ If the received message is too long to fit into the buffer, it may be truncated.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38585,"byte_end":38669,"line_start":224,"line_end":224,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38674,"byte_end":38677,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same message. This is accomplished by passing `MSG_PEEK` as a","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38682,"byte_end":38775,"line_start":226,"line_end":226,"column_start":5,"column_end":98}},{"value":"/ flag to the underlying `recvfrom` system call.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38780,"byte_end":38830,"line_start":227,"line_end":227,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38835,"byte_end":38838,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38843,"byte_end":38857,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38862,"byte_end":38865,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38870,"byte_end":38883,"line_start":231,"line_end":231,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38888,"byte_end":38917,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38922,"byte_end":38925,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38930,"byte_end":38974,"line_start":234,"line_end":234,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":38979,"byte_end":39038,"line_start":235,"line_end":235,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39043,"byte_end":39046,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39051,"byte_end":39085,"line_start":237,"line_end":237,"column_start":5,"column_end":39}},{"value":"/ let (n, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39090,"byte_end":39144,"line_start":238,"line_end":238,"column_start":5,"column_end":59}},{"value":"/ println!(\"Peeked {} bytes from {}\", n, addr);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39149,"byte_end":39198,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39203,"byte_end":39236,"line_start":240,"line_end":240,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39241,"byte_end":39248,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39929,"byte_end":39936,"line_start":262,"line_end":262,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"async fn send_to<A, '_, '_>(&'_ Self, &'_ [u8], A) -> /*impl Trait*/ where\nA: AsyncToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the given address.","sig":null,"attributes":[{"value":"/ Sends data to the given address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39391,"byte_end":39427,"line_start":246,"line_end":246,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39432,"byte_end":39435,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes sent.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39440,"byte_end":39489,"line_start":248,"line_end":248,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39494,"byte_end":39497,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, the message will only be sent to the first address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39502,"byte_end":39594,"line_start":250,"line_end":250,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39599,"byte_end":39602,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39607,"byte_end":39621,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39626,"byte_end":39629,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39634,"byte_end":39647,"line_start":254,"line_end":254,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39652,"byte_end":39681,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39686,"byte_end":39689,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39694,"byte_end":39738,"line_start":257,"line_end":257,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39743,"byte_end":39802,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/ socket.send_to(b\"hello\", \"127.0.0.1:4242\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39807,"byte_end":39861,"line_start":259,"line_end":259,"column_start":5,"column_end":59}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39866,"byte_end":39899,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":39904,"byte_end":39911,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41323,"byte_end":41327,"line_start":300,"line_end":300,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected address.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40373,"byte_end":40439,"line_start":276,"line_end":276,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40444,"byte_end":40447,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes received.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40452,"byte_end":40505,"line_start":278,"line_end":278,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40510,"byte_end":40513,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte buffer of sufficient size to hold a message.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40518,"byte_end":40611,"line_start":280,"line_end":280,"column_start":5,"column_end":98}},{"value":"/ If the received message is too long to fit into the buffer, it may be truncated.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40616,"byte_end":40700,"line_start":281,"line_end":281,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40705,"byte_end":40708,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The [`connect()`][`UdpSocket::connect()`] method connects this socket to an address. This","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40713,"byte_end":40806,"line_start":283,"line_end":283,"column_start":5,"column_end":98}},{"value":"/ method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40811,"byte_end":40863,"line_start":284,"line_end":284,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40868,"byte_end":40871,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40876,"byte_end":40890,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40895,"byte_end":40898,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40903,"byte_end":40916,"line_start":288,"line_end":288,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40921,"byte_end":40950,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40955,"byte_end":40958,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":40963,"byte_end":41007,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41012,"byte_end":41071,"line_start":292,"line_end":292,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41076,"byte_end":41120,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41125,"byte_end":41128,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41133,"byte_end":41167,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41172,"byte_end":41213,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41218,"byte_end":41255,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41260,"byte_end":41293,"line_start":298,"line_end":298,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41298,"byte_end":41305,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42550,"byte_end":42554,"line_start":331,"line_end":331,"column_start":18,"column_end":22},"name":"peek","qualname":"<UdpSocket>::peek","value":"async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram from the connected address without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram from the connected address without removing it from the queue.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41420,"byte_end":41513,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41518,"byte_end":41521,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41526,"byte_end":41577,"line_start":306,"line_end":306,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41582,"byte_end":41585,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte buffer of sufficient size to hold a message.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41590,"byte_end":41683,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/ If the received message is too long to fit into the buffer, it may be truncated.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41688,"byte_end":41772,"line_start":309,"line_end":309,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41777,"byte_end":41780,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same message. This is accomplished by passing `MSG_PEEK` as a","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41785,"byte_end":41878,"line_start":311,"line_end":311,"column_start":5,"column_end":98}},{"value":"/ flag to the underlying `recv` system call.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41883,"byte_end":41929,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41934,"byte_end":41937,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The [`connect()`][`UdpSocket::connect()`] method connects this socket to an address. This","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":41942,"byte_end":42035,"line_start":314,"line_end":314,"column_start":5,"column_end":98}},{"value":"/ method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42040,"byte_end":42092,"line_start":315,"line_end":315,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42097,"byte_end":42100,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42105,"byte_end":42119,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42124,"byte_end":42127,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42132,"byte_end":42145,"line_start":319,"line_end":319,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42150,"byte_end":42179,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42184,"byte_end":42187,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42192,"byte_end":42236,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42241,"byte_end":42300,"line_start":323,"line_end":323,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42305,"byte_end":42349,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42354,"byte_end":42357,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42362,"byte_end":42396,"line_start":326,"line_end":326,"column_start":5,"column_end":39}},{"value":"/ let n = socket.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42401,"byte_end":42442,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ println!(\"Peeked {} bytes\", n);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42447,"byte_end":42482,"line_start":328,"line_end":328,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42487,"byte_end":42520,"line_start":329,"line_end":329,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42525,"byte_end":42532,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43213,"byte_end":43217,"line_start":351,"line_end":351,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected address.","sig":null,"attributes":[{"value":"/ Sends data to the connected address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42647,"byte_end":42687,"line_start":335,"line_end":335,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42692,"byte_end":42695,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ The [`connect()`][`UdpSocket::connect()`] method connects this socket to an address. This","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42700,"byte_end":42793,"line_start":337,"line_end":337,"column_start":5,"column_end":98}},{"value":"/ method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42798,"byte_end":42850,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42855,"byte_end":42858,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42863,"byte_end":42877,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42882,"byte_end":42885,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42890,"byte_end":42903,"line_start":342,"line_end":342,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42908,"byte_end":42937,"line_start":343,"line_end":343,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42942,"byte_end":42945,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42950,"byte_end":42994,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":42999,"byte_end":43058,"line_start":346,"line_end":346,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43063,"byte_end":43107,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/ socket.send(b\"hello\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43112,"byte_end":43145,"line_start":348,"line_end":348,"column_start":5,"column_end":38}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43150,"byte_end":43183,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43188,"byte_end":43195,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43805,"byte_end":43814,"line_start":369,"line_end":369,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43306,"byte_end":43370,"line_start":355,"line_end":355,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43375,"byte_end":43378,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43383,"byte_end":43467,"line_start":357,"line_end":357,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43472,"byte_end":43475,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43480,"byte_end":43494,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43499,"byte_end":43502,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43507,"byte_end":43520,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43525,"byte_end":43554,"line_start":362,"line_end":362,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43559,"byte_end":43562,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43567,"byte_end":43611,"line_start":364,"line_end":364,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43616,"byte_end":43675,"line_start":365,"line_end":365,"column_start":5,"column_end":64}},{"value":"/ println!(\"SO_BROADCAST is set to {}\", socket.broadcast()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43680,"byte_end":43743,"line_start":366,"line_end":366,"column_start":5,"column_end":68}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43748,"byte_end":43781,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43786,"byte_end":43793,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44364,"byte_end":44377,"line_start":387,"line_end":387,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43896,"byte_end":43960,"line_start":373,"line_end":373,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43965,"byte_end":43968,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":43973,"byte_end":44057,"line_start":375,"line_end":375,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44062,"byte_end":44065,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44070,"byte_end":44084,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44089,"byte_end":44092,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44097,"byte_end":44110,"line_start":379,"line_end":379,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44115,"byte_end":44144,"line_start":380,"line_end":380,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44149,"byte_end":44152,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44157,"byte_end":44201,"line_start":382,"line_end":382,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44206,"byte_end":44265,"line_start":383,"line_end":383,"column_start":5,"column_end":64}},{"value":"/ socket.set_broadcast(true)?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44270,"byte_end":44302,"line_start":384,"line_end":384,"column_start":5,"column_end":37}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44307,"byte_end":44340,"line_start":385,"line_end":385,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44345,"byte_end":44352,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45079,"byte_end":45096,"line_start":407,"line_end":407,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44487,"byte_end":44556,"line_start":391,"line_end":391,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44561,"byte_end":44564,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44569,"byte_end":44649,"line_start":393,"line_end":393,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44654,"byte_end":44657,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44662,"byte_end":44728,"line_start":395,"line_end":395,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44733,"byte_end":44736,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44741,"byte_end":44755,"line_start":397,"line_end":397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44760,"byte_end":44763,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44768,"byte_end":44781,"line_start":399,"line_end":399,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44786,"byte_end":44815,"line_start":400,"line_end":400,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44820,"byte_end":44823,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44828,"byte_end":44872,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44877,"byte_end":44936,"line_start":403,"line_end":403,"column_start":5,"column_end":64}},{"value":"/ println!(\"IP_MULTICAST_LOOP is set to {}\", socket.multicast_loop_v4()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":44941,"byte_end":45017,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45022,"byte_end":45055,"line_start":405,"line_end":405,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45060,"byte_end":45067,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45742,"byte_end":45763,"line_start":427,"line_end":427,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45186,"byte_end":45255,"line_start":411,"line_end":411,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45260,"byte_end":45263,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45268,"byte_end":45348,"line_start":413,"line_end":413,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45353,"byte_end":45356,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45361,"byte_end":45427,"line_start":415,"line_end":415,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45432,"byte_end":45435,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45440,"byte_end":45454,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45459,"byte_end":45462,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45467,"byte_end":45480,"line_start":419,"line_end":419,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45485,"byte_end":45514,"line_start":420,"line_end":420,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45519,"byte_end":45522,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45527,"byte_end":45571,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45576,"byte_end":45635,"line_start":423,"line_end":423,"column_start":5,"column_end":64}},{"value":"/ socket.set_multicast_loop_v4(true)?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45640,"byte_end":45680,"line_start":424,"line_end":424,"column_start":5,"column_end":45}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45685,"byte_end":45718,"line_start":425,"line_end":425,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45723,"byte_end":45730,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46650,"byte_end":46666,"line_start":451,"line_end":451,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45923,"byte_end":45991,"line_start":433,"line_end":433,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":45996,"byte_end":45999,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46004,"byte_end":46099,"line_start":435,"line_end":435,"column_start":5,"column_end":100}},{"value":"/ value is 1, which means that multicast packets don't leave the local network unless","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46104,"byte_end":46191,"line_start":436,"line_end":436,"column_start":5,"column_end":92}},{"value":"/ explicitly requested.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46196,"byte_end":46221,"line_start":437,"line_end":437,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46226,"byte_end":46229,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any effect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46234,"byte_end":46300,"line_start":439,"line_end":439,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46305,"byte_end":46308,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46313,"byte_end":46327,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46332,"byte_end":46335,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46340,"byte_end":46353,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46358,"byte_end":46387,"line_start":444,"line_end":444,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46392,"byte_end":46395,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46400,"byte_end":46444,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46449,"byte_end":46508,"line_start":447,"line_end":447,"column_start":5,"column_end":64}},{"value":"/ println!(\"IP_MULTICAST_TTL is set to {}\", socket.multicast_loop_v4()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46513,"byte_end":46588,"line_start":448,"line_end":448,"column_start":5,"column_end":80}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46593,"byte_end":46626,"line_start":449,"line_end":449,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46631,"byte_end":46638,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47443,"byte_end":47463,"line_start":473,"line_end":473,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46754,"byte_end":46822,"line_start":455,"line_end":455,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46827,"byte_end":46830,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46835,"byte_end":46930,"line_start":457,"line_end":457,"column_start":5,"column_end":100}},{"value":"/ value is 1, which means that multicast packets don't leave the local network unless","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":46935,"byte_end":47022,"line_start":458,"line_end":458,"column_start":5,"column_end":92}},{"value":"/ explicitly requested.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47027,"byte_end":47052,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47057,"byte_end":47060,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any effect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47065,"byte_end":47131,"line_start":461,"line_end":461,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47136,"byte_end":47139,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47144,"byte_end":47158,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47163,"byte_end":47166,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47171,"byte_end":47184,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47189,"byte_end":47218,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47223,"byte_end":47226,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47231,"byte_end":47275,"line_start":468,"line_end":468,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47280,"byte_end":47339,"line_start":469,"line_end":469,"column_start":5,"column_end":64}},{"value":"/ socket.set_multicast_ttl_v4(10)?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47344,"byte_end":47381,"line_start":470,"line_end":470,"column_start":5,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47386,"byte_end":47419,"line_start":471,"line_end":471,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47424,"byte_end":47431,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48159,"byte_end":48176,"line_start":493,"line_end":493,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47567,"byte_end":47638,"line_start":477,"line_end":477,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47643,"byte_end":47646,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47651,"byte_end":47727,"line_start":479,"line_end":479,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47732,"byte_end":47735,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any effect on IPv4 sockets.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47740,"byte_end":47806,"line_start":481,"line_end":481,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47811,"byte_end":47814,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47819,"byte_end":47833,"line_start":483,"line_end":483,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47838,"byte_end":47841,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47846,"byte_end":47859,"line_start":485,"line_end":485,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47864,"byte_end":47893,"line_start":486,"line_end":486,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47898,"byte_end":47901,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47906,"byte_end":47950,"line_start":488,"line_end":488,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":47955,"byte_end":48014,"line_start":489,"line_end":489,"column_start":5,"column_end":64}},{"value":"/ println!(\"IPV6_MULTICAST_LOOP is set to {}\", socket.multicast_loop_v6()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48019,"byte_end":48097,"line_start":490,"line_end":490,"column_start":5,"column_end":83}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48102,"byte_end":48135,"line_start":491,"line_end":491,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48140,"byte_end":48147,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48820,"byte_end":48841,"line_start":513,"line_end":513,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48266,"byte_end":48337,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48342,"byte_end":48345,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48350,"byte_end":48426,"line_start":499,"line_end":499,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48431,"byte_end":48434,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any effect on IPv4 sockets.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48439,"byte_end":48505,"line_start":501,"line_end":501,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48510,"byte_end":48513,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48518,"byte_end":48532,"line_start":503,"line_end":503,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48537,"byte_end":48540,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48545,"byte_end":48558,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48563,"byte_end":48592,"line_start":506,"line_end":506,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48597,"byte_end":48600,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48605,"byte_end":48649,"line_start":508,"line_end":508,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48654,"byte_end":48713,"line_start":509,"line_end":509,"column_start":5,"column_end":64}},{"value":"/ socket.set_multicast_loop_v6(true)?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48718,"byte_end":48758,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48763,"byte_end":48796,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":48801,"byte_end":48808,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49507,"byte_end":49510,"line_start":534,"line_end":534,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49001,"byte_end":49059,"line_start":519,"line_end":519,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49064,"byte_end":49067,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49072,"byte_end":49165,"line_start":521,"line_end":521,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49170,"byte_end":49181,"line_start":522,"line_end":522,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49186,"byte_end":49189,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49194,"byte_end":49208,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49213,"byte_end":49216,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49221,"byte_end":49234,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49239,"byte_end":49268,"line_start":527,"line_end":527,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49273,"byte_end":49276,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49281,"byte_end":49325,"line_start":529,"line_end":529,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49330,"byte_end":49389,"line_start":530,"line_end":530,"column_start":5,"column_end":64}},{"value":"/ println!(\"IP_TTL is set to {}\", socket.ttl()?);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49394,"byte_end":49445,"line_start":531,"line_end":531,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49450,"byte_end":49483,"line_start":532,"line_end":532,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49488,"byte_end":49495,"line_start":533,"line_end":533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50065,"byte_end":50072,"line_start":553,"line_end":553,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49585,"byte_end":49643,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49648,"byte_end":49651,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49656,"byte_end":49749,"line_start":540,"line_end":540,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49754,"byte_end":49765,"line_start":541,"line_end":541,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49770,"byte_end":49773,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49778,"byte_end":49792,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49797,"byte_end":49800,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49805,"byte_end":49818,"line_start":545,"line_end":545,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49823,"byte_end":49852,"line_start":546,"line_end":546,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49857,"byte_end":49860,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49865,"byte_end":49909,"line_start":548,"line_end":548,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49914,"byte_end":49973,"line_start":549,"line_end":549,"column_start":5,"column_end":64}},{"value":"/ socket.set_ttl(100)?;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":49978,"byte_end":50003,"line_start":550,"line_end":550,"column_start":5,"column_end":30}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50008,"byte_end":50041,"line_start":551,"line_end":551,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50046,"byte_end":50053,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50592,"byte_end":50609,"line_start":563,"line_end":563,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50163,"byte_end":50221,"line_start":557,"line_end":557,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50226,"byte_end":50229,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. Argument `multiaddr`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50234,"byte_end":50327,"line_start":559,"line_end":559,"column_start":5,"column_end":98}},{"value":"/ must be a valid multicast address, and `interface` is the address of the local interface","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50332,"byte_end":50424,"line_start":560,"line_end":560,"column_start":5,"column_end":97}},{"value":"/ with which the system should join the multicast group. If it's equal to `INADDR_ANY` then","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50429,"byte_end":50522,"line_start":561,"line_end":561,"column_start":5,"column_end":98}},{"value":"/ an appropriate interface is chosen by the system.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50527,"byte_end":50580,"line_start":562,"line_end":562,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51032,"byte_end":51050,"line_start":573,"line_end":573,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50787,"byte_end":50846,"line_start":569,"line_end":569,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50851,"byte_end":50854,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This method leaves a multicast group. Argument `multiaddr` must be a valid multicast","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50859,"byte_end":50947,"line_start":571,"line_end":571,"column_start":5,"column_end":93}},{"value":"/ address, and `interface` is the index of the interface to leave.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":50952,"byte_end":51020,"line_start":572,"line_end":572,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51546,"byte_end":51563,"line_start":584,"line_end":584,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51229,"byte_end":51289,"line_start":579,"line_end":579,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51294,"byte_end":51297,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. Argument `multiaddr`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51302,"byte_end":51395,"line_start":581,"line_end":581,"column_start":5,"column_end":98}},{"value":"/ must be a valid multicast address, and `interface` is the index of the interface to join","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51400,"byte_end":51492,"line_start":582,"line_end":582,"column_start":5,"column_end":97}},{"value":"/ (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51497,"byte_end":51534,"line_start":583,"line_end":583,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51956,"byte_end":51974,"line_start":592,"line_end":592,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51709,"byte_end":51770,"line_start":588,"line_end":588,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51775,"byte_end":51778,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ This method leaves a multicast group. Argument `multiaddr` must be a valid multicast","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51783,"byte_end":51871,"line_start":590,"line_end":590,"column_start":5,"column_end":93}},{"value":"/ address, and `interface` is the index of the interface to leave.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":51876,"byte_end":51944,"line_start":591,"line_end":591,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52206,"byte_end":52210,"line_start":600,"line_end":600,"column_start":8,"column_end":12},"name":"from","qualname":"<UdpSocket as std::convert::From>::from","value":"fn from(Async<std::net::UdpSocket>) -> UdpSocket","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52398,"byte_end":52406,"line_start":608,"line_end":608,"column_start":8,"column_end":16},"name":"try_from","qualname":"<UdpSocket as std::convert::TryFrom>::try_from","value":"fn try_from(std::net::UdpSocket) -> io::Result<UdpSocket>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52596,"byte_end":52600,"line_start":614,"line_end":614,"column_start":8,"column_end":12},"name":"from","qualname":"<Arc<Async<std::net::UdpSocket>> as std::convert::From>::from","value":"fn from(UdpSocket) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52827,"byte_end":52840,"line_start":628,"line_end":628,"column_start":8,"column_end":21},"name":"as_raw_socket","qualname":"<UdpSocket as std::os::windows::io::AsRawSocket>::as_raw_socket","value":"fn as_raw_socket(&Self) -> RawSocket","parent":{"krate":1,"index":5855},"children":[],"decl_id":{"krate":1,"index":5856},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1533,"byte_end":1540,"line_start":63,"line_end":63,"column_start":14,"column_end":21},"name":"resolve","qualname":"::resolve","value":"async fn resolve<A>(A) -> /*impl Trait*/ where A: AsyncToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1244,"byte_end":1304,"line_start":52,"line_end":52,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1305,"byte_end":1308,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1309,"byte_end":1323,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1324,"byte_end":1327,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1328,"byte_end":1335,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1336,"byte_end":1380,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ for addr in async_net::resolve(\"google.com:80\").await? {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1381,"byte_end":1441,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/     println!(\"{}\", addr);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1442,"byte_end":1471,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1472,"byte_end":1477,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1478,"byte_end":1511,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\lib.rs","byte_start":1512,"byte_end":1519,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2902,"byte_end":2921,"line_start":39,"line_end":39,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":3096,"byte_end":3115,"line_start":45,"line_end":45,"column_start":57,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":3798,"byte_end":3808,"line_start":65,"line_end":65,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":3829,"byte_end":3839,"line_start":67,"line_end":67,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":4062,"byte_end":4074,"line_start":75,"line_end":75,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":4095,"byte_end":4107,"line_start":77,"line_end":77,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":4322,"byte_end":4334,"line_start":85,"line_end":85,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":4355,"byte_end":4367,"line_start":87,"line_end":87,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":7792,"byte_end":7798,"line_start":204,"line_end":204,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":7819,"byte_end":7825,"line_start":206,"line_end":206,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9643,"byte_end":9654,"line_start":54,"line_end":54,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15147,"byte_end":15158,"line_start":216,"line_end":216,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15324,"byte_end":15335,"line_start":222,"line_end":222,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15543,"byte_end":15546,"line_start":230,"line_end":230,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15802,"byte_end":15813,"line_start":244,"line_end":244,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16258,"byte_end":16266,"line_start":259,"line_end":259,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16594,"byte_end":16602,"line_start":268,"line_end":268,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18046,"byte_end":18055,"line_start":310,"line_end":310,"column_start":21,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18082,"byte_end":18091,"line_start":311,"line_end":311,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18101,"byte_end":18110,"line_start":313,"line_end":313,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25689,"byte_end":25698,"line_start":538,"line_end":538,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25814,"byte_end":25823,"line_start":544,"line_end":544,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25955,"byte_end":25964,"line_start":550,"line_end":550,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26105,"byte_end":26108,"line_start":556,"line_end":556,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26242,"byte_end":26251,"line_start":562,"line_end":562,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26576,"byte_end":26585,"line_start":578,"line_end":578,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26694,"byte_end":26703,"line_start":584,"line_end":584,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":27639,"byte_end":27648,"line_start":615,"line_end":615,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32568,"byte_end":32577,"line_start":59,"line_end":59,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52187,"byte_end":52196,"line_start":599,"line_end":599,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52350,"byte_end":52359,"line_start":605,"line_end":605,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52555,"byte_end":52558,"line_start":613,"line_end":613,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52808,"byte_end":52817,"line_start":627,"line_end":627,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2223,"byte_end":2229,"line_start":18,"line_end":18,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":56},"to":{"krate":0,"index":55}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":2902,"byte_end":2921,"line_start":39,"line_end":39,"column_start":24,"column_end":43},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":10115}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":3096,"byte_end":3115,"line_start":45,"line_end":45,"column_start":57,"column_end":76},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":13546}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":3798,"byte_end":3808,"line_start":65,"line_end":65,"column_start":29,"column_end":39},"kind":{"Impl":{"id":2}},"from":{"krate":1,"index":10268},"to":{"krate":0,"index":55}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":3829,"byte_end":3839,"line_start":67,"line_end":67,"column_start":17,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":10268},"to":{"krate":0,"index":56}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":4062,"byte_end":4074,"line_start":75,"line_end":75,"column_start":29,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":10292},"to":{"krate":0,"index":55}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":4095,"byte_end":4107,"line_start":77,"line_end":77,"column_start":17,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":1,"index":10292},"to":{"krate":0,"index":56}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":4322,"byte_end":4334,"line_start":85,"line_end":85,"column_start":29,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":1,"index":10295},"to":{"krate":0,"index":55}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":4355,"byte_end":4367,"line_start":87,"line_end":87,"column_start":17,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":10295},"to":{"krate":0,"index":56}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":7792,"byte_end":7798,"line_start":204,"line_end":204,"column_start":29,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":8341},"to":{"krate":0,"index":55}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\addr.rs","byte_start":7819,"byte_end":7825,"line_start":206,"line_end":206,"column_start":17,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":8341},"to":{"krate":0,"index":56}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":9643,"byte_end":9654,"line_start":54,"line_end":54,"column_start":6,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15147,"byte_end":15158,"line_start":216,"line_end":216,"column_start":45,"column_end":56},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15324,"byte_end":15335,"line_start":222,"line_end":222,"column_start":41,"column_end":52},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":3092}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15543,"byte_end":15546,"line_start":230,"line_end":230,"column_start":28,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":6634},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":15802,"byte_end":15813,"line_start":244,"line_end":244,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":5855}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16258,"byte_end":16266,"line_start":259,"line_end":259,"column_start":17,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":217},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":16594,"byte_end":16602,"line_start":268,"line_end":268,"column_start":21,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":217},"to":{"krate":2,"index":10115}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18046,"byte_end":18055,"line_start":310,"line_end":310,"column_start":21,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":9135}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18082,"byte_end":18091,"line_start":311,"line_end":311,"column_start":24,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":9136}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":18101,"byte_end":18110,"line_start":313,"line_end":313,"column_start":6,"column_end":15},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25689,"byte_end":25698,"line_start":538,"line_end":538,"column_start":21,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":10115}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25814,"byte_end":25823,"line_start":544,"line_end":544,"column_start":16,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":2801}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":25955,"byte_end":25964,"line_start":550,"line_end":550,"column_start":43,"column_end":52},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26105,"byte_end":26108,"line_start":556,"line_end":556,"column_start":26,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":6634},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26242,"byte_end":26251,"line_start":562,"line_end":562,"column_start":39,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":3092}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26576,"byte_end":26585,"line_start":578,"line_end":578,"column_start":22,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":227},"to":{"krate":1,"index":5855}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":26694,"byte_end":26703,"line_start":584,"line_end":584,"column_start":20,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":227},"to":{"krate":28,"index":39}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\tcp.rs","byte_start":27639,"byte_end":27648,"line_start":615,"line_end":615,"column_start":21,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":227},"to":{"krate":28,"index":42}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":32568,"byte_end":32577,"line_start":59,"line_end":59,"column_start":6,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52187,"byte_end":52196,"line_start":599,"line_end":599,"column_start":43,"column_end":52},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":413},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52350,"byte_end":52359,"line_start":605,"line_end":605,"column_start":39,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":413},"to":{"krate":2,"index":3092}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52555,"byte_end":52558,"line_start":613,"line_end":613,"column_start":26,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":5,"index":6634},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-net-1.6.1\\src\\udp.rs","byte_start":52808,"byte_end":52817,"line_start":627,"line_end":627,"column_start":22,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":5855}}]}