{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8","program":"C:\\Users\\Vinay Konuru\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","num_traits","C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2b4088e107970ea8","-C","extra-filename=-2b4088e107970ea8","--out-dir","c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps","--cap-lints","allow","--cfg","has_i128","--error-format=json","--sysroot","C:\\Users\\Vinay Konuru\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Vinay Konuru\\Documents\\Class\\ECE470\\ECE470-fa22\\target\\rls\\debug\\deps\\libnum_traits-2b4088e107970ea8.rmeta"},"prelude":{"crate_id":{"name":"num_traits","disambiguator":[16868512955830972379,0]},"crate_root":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src","external_crates":[{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[16639894342417964460,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[1960661561601094031,0]}},{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4626707339213967717,0]}}],"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":472,"byte_end":16437,"line_start":11,"line_end":470,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":926,"byte_end":933,"line_start":28,"line_end":28,"column_start":17,"column_end":24},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":996,"byte_end":1006,"line_start":31,"line_end":31,"column_start":16,"column_end":26},"alias_span":null,"name":"FloatConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1115,"byte_end":1119,"line_start":33,"line_end":33,"column_start":16,"column_end":20},"alias_span":null,"name":"cast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1121,"byte_end":1132,"line_start":33,"line_end":33,"column_start":22,"column_end":33},"alias_span":null,"name":"AsPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1134,"byte_end":1147,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"alias_span":null,"name":"FromPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1149,"byte_end":1156,"line_start":33,"line_end":33,"column_start":50,"column_end":57},"alias_span":null,"name":"NumCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1158,"byte_end":1169,"line_start":33,"line_end":33,"column_start":59,"column_end":70},"alias_span":null,"name":"ToPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1193,"byte_end":1196,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"alias_span":null,"name":"one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1198,"byte_end":1202,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"alias_span":null,"name":"zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1204,"byte_end":1207,"line_start":34,"line_end":34,"column_start":33,"column_end":36},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1209,"byte_end":1213,"line_start":34,"line_end":34,"column_start":38,"column_end":42},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1229,"byte_end":1236,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"alias_span":null,"name":"PrimInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1266,"byte_end":1276,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1278,"byte_end":1288,"line_start":37,"line_end":37,"column_start":17,"column_end":27},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1290,"byte_end":1300,"line_start":37,"line_end":37,"column_start":29,"column_end":39},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1302,"byte_end":1312,"line_start":37,"line_end":37,"column_start":41,"column_end":51},"alias_span":null,"name":"CheckedNeg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1314,"byte_end":1324,"line_start":37,"line_end":37,"column_start":53,"column_end":63},"alias_span":null,"name":"CheckedRem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1326,"byte_end":1336,"line_start":37,"line_end":37,"column_start":65,"column_end":75},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1338,"byte_end":1348,"line_start":37,"line_end":37,"column_start":77,"column_end":87},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1350,"byte_end":1360,"line_start":37,"line_end":37,"column_start":89,"column_end":99},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1383,"byte_end":1386,"line_start":39,"line_end":39,"column_start":19,"column_end":22},"alias_span":null,"name":"Inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1411,"byte_end":1417,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"alias_span":null,"name":"MulAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1419,"byte_end":1431,"line_start":40,"line_end":40,"column_start":32,"column_end":44},"alias_span":null,"name":"MulAddAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1459,"byte_end":1469,"line_start":41,"line_end":41,"column_start":26,"column_end":36},"alias_span":null,"name":"Saturating","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1495,"byte_end":1506,"line_start":42,"line_end":42,"column_start":25,"column_end":36},"alias_span":null,"name":"WrappingAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1508,"byte_end":1519,"line_start":42,"line_end":42,"column_start":38,"column_end":49},"alias_span":null,"name":"WrappingMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1521,"byte_end":1532,"line_start":42,"line_end":42,"column_start":51,"column_end":62},"alias_span":null,"name":"WrappingShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1534,"byte_end":1545,"line_start":42,"line_end":42,"column_start":64,"column_end":75},"alias_span":null,"name":"WrappingShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1547,"byte_end":1558,"line_start":42,"line_end":42,"column_start":77,"column_end":88},"alias_span":null,"name":"WrappingSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1575,"byte_end":1586,"line_start":43,"line_end":43,"column_start":15,"column_end":26},"alias_span":null,"name":"checked_pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1588,"byte_end":1591,"line_start":43,"line_end":43,"column_start":28,"column_end":31},"alias_span":null,"name":"pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1593,"byte_end":1596,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"alias_span":null,"name":"Pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1614,"byte_end":1617,"line_start":44,"line_end":44,"column_start":16,"column_end":19},"alias_span":null,"name":"abs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1619,"byte_end":1626,"line_start":44,"line_end":44,"column_start":21,"column_end":28},"alias_span":null,"name":"abs_sub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1628,"byte_end":1634,"line_start":44,"line_end":44,"column_start":30,"column_end":36},"alias_span":null,"name":"signum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1636,"byte_end":1642,"line_start":44,"line_end":44,"column_start":38,"column_end":44},"alias_span":null,"name":"Signed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1644,"byte_end":1652,"line_start":44,"line_end":44,"column_start":46,"column_end":54},"alias_span":null,"name":"Unsigned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":472,"byte_end":16437,"line_start":11,"line_end":470,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":224},{"krate":0,"index":342},{"krate":0,"index":416},{"krate":0,"index":450},{"krate":0,"index":502},{"krate":0,"index":627},{"krate":0,"index":651},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":4024},{"krate":0,"index":4027},{"krate":0,"index":4030},{"krate":0,"index":4033},{"krate":0,"index":4036},{"krate":0,"index":4039},{"krate":0,"index":4042},{"krate":0,"index":4045},{"krate":0,"index":4048},{"krate":0,"index":4051},{"krate":0,"index":4054},{"krate":0,"index":4057},{"krate":0,"index":725},{"krate":0,"index":4060},{"krate":0,"index":4065},{"krate":0,"index":4067},{"krate":0,"index":4069},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":4071},{"krate":0,"index":4080},{"krate":0,"index":732}],"decl_id":null,"docs":" Numeric traits for generic mathematics","sig":null,"attributes":[{"value":"/ Numeric traits for generic mathematics","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":472,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":515,"byte_end":518,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Compatibility","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":519,"byte_end":539,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":540,"byte_end":543,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `num-traits` crate is tested for rustc 1.8 and greater.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":544,"byte_end":607,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"deny(unconditional_recursion)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":667,"byte_end":700,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":701,"byte_end":711,"line_start":19,"line_end":19,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounds","qualname":"::bounds","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":217},{"krate":0,"index":770},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":773},{"krate":0,"index":796},{"krate":0,"index":818},{"krate":0,"index":839},{"krate":0,"index":859},{"krate":0,"index":878},{"krate":0,"index":896},{"krate":0,"index":913},{"krate":0,"index":929},{"krate":0,"index":944},{"krate":0,"index":958},{"krate":0,"index":971},{"krate":0,"index":983},{"krate":0,"index":994},{"krate":0,"index":1004},{"krate":0,"index":1013},{"krate":0,"index":1021},{"krate":0,"index":1028},{"krate":0,"index":1034},{"krate":0,"index":1039},{"krate":0,"index":1043},{"krate":0,"index":1046}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":17918,"byte_end":17925,"line_start":9,"line_end":9,"column_start":11,"column_end":18},"name":"Bounded","qualname":"::bounds::Bounded","value":"Bounded","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[{"value":"/ Numbers which have upper and lower bounds","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":17862,"byte_end":17907,"line_start":8,"line_end":8,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":18061,"byte_end":18070,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"min_value","qualname":"::bounds::Bounded::min_value","value":"fn min_value() -> Self","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" returns the smallest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the smallest finite number this type can represent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":17991,"byte_end":18053,"line_start":11,"line_end":11,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":18155,"byte_end":18164,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"max_value","qualname":"::bounds::Bounded::max_value","value":"fn max_value() -> Self","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" returns the largest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the largest finite number this type can represent","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":18086,"byte_end":18147,"line_start":13,"line_end":13,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":19059,"byte_end":19068,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"min_value","qualname":"<Wrapping<T> as bounds::Bounded>::min_value","value":"fn min_value() -> Self","parent":{"krate":0,"index":213},"children":[],"decl_id":{"krate":0,"index":214},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":19127,"byte_end":19136,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"max_value","qualname":"<Wrapping<T> as bounds::Bounded>::max_value","value":"fn max_value() -> Self","parent":{"krate":0,"index":213},"children":[],"decl_id":{"krate":0,"index":215},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cast","qualname":"::cast","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":1049},{"krate":0,"index":1064},{"krate":0,"index":1079},{"krate":0,"index":1094},{"krate":0,"index":1109},{"krate":0,"index":1124},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":1139},{"krate":0,"index":1154},{"krate":0,"index":1169},{"krate":0,"index":1184},{"krate":0,"index":1199},{"krate":0,"index":1214},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":1229},{"krate":0,"index":1280},{"krate":0,"index":305},{"krate":0,"index":320},{"krate":0,"index":1331},{"krate":0,"index":1346},{"krate":0,"index":1361},{"krate":0,"index":1376},{"krate":0,"index":1391},{"krate":0,"index":1406},{"krate":0,"index":1421},{"krate":0,"index":1436},{"krate":0,"index":1451},{"krate":0,"index":1466},{"krate":0,"index":1481},{"krate":0,"index":1496},{"krate":0,"index":1511},{"krate":0,"index":1526},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1581},{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1608},{"krate":0,"index":334},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":1627},{"krate":0,"index":1629},{"krate":0,"index":1631},{"krate":0,"index":1633},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1669},{"krate":0,"index":1671},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1693},{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":1699},{"krate":0,"index":1701},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1711},{"krate":0,"index":1713},{"krate":0,"index":1715},{"krate":0,"index":1717},{"krate":0,"index":1719},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1741},{"krate":0,"index":1743},{"krate":0,"index":1745},{"krate":0,"index":1747},{"krate":0,"index":1749},{"krate":0,"index":1751},{"krate":0,"index":1753},{"krate":0,"index":1755},{"krate":0,"index":1757},{"krate":0,"index":1759},{"krate":0,"index":1761},{"krate":0,"index":1763},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1769},{"krate":0,"index":1771},{"krate":0,"index":1773},{"krate":0,"index":1775},{"krate":0,"index":1777},{"krate":0,"index":1779},{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1787},{"krate":0,"index":1789},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1799},{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":1805},{"krate":0,"index":1807},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1813},{"krate":0,"index":1815},{"krate":0,"index":1817},{"krate":0,"index":1819},{"krate":0,"index":1821},{"krate":0,"index":1823},{"krate":0,"index":1825},{"krate":0,"index":1827},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1865},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1887},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1929},{"krate":0,"index":1931},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1951},{"krate":0,"index":1953},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1969},{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2053}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21215,"byte_end":21226,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"ToPrimitive","qualname":"::cast::ToPrimitive","value":"ToPrimitive","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a value to a number.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21149,"byte_end":21204,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21302,"byte_end":21310,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"to_isize","qualname":"::cast::ToPrimitive::to_isize","value":"fn to_isize(&Self) -> Option<isize>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `isize`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `isize`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21233,"byte_end":21280,"line_start":13,"line_end":13,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21285,"byte_end":21294,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21477,"byte_end":21482,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"to_i8","qualname":"::cast::ToPrimitive::to_i8","value":"fn to_i8(&Self) -> Option<i8>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i8`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i8`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21411,"byte_end":21455,"line_start":19,"line_end":19,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21460,"byte_end":21469,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21644,"byte_end":21650,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"to_i16","qualname":"::cast::ToPrimitive::to_i16","value":"fn to_i16(&Self) -> Option<i16>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i16`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i16`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21577,"byte_end":21622,"line_start":25,"line_end":25,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21627,"byte_end":21636,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21814,"byte_end":21820,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"to_i32","qualname":"::cast::ToPrimitive::to_i32","value":"fn to_i32(&Self) -> Option<i32>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i32`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i32`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21747,"byte_end":21792,"line_start":31,"line_end":31,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21797,"byte_end":21806,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21970,"byte_end":21976,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"to_i64","qualname":"::cast::ToPrimitive::to_i64","value":"fn to_i64(&Self) -> Option<i64>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i64`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i64`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21917,"byte_end":21962,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22363,"byte_end":22370,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"to_i128","qualname":"::cast::ToPrimitive::to_i128","value":"fn to_i128(&Self) -> Option<i128>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i128`.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i128`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22005,"byte_end":22051,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22056,"byte_end":22059,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22064,"byte_end":22142,"line_start":42,"line_end":42,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22147,"byte_end":22150,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_i64()`.  Types implementing","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22155,"byte_end":22234,"line_start":44,"line_end":44,"column_start":5,"column_end":84}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22239,"byte_end":22320,"line_start":45,"line_end":45,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22325,"byte_end":22334,"line_start":46,"line_end":46,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22339,"byte_end":22355,"line_start":47,"line_end":47,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22513,"byte_end":22521,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"to_usize","qualname":"::cast::ToPrimitive::to_usize","value":"fn to_usize(&Self) -> Option<usize>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `usize`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `usize`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22445,"byte_end":22491,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22496,"byte_end":22505,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22688,"byte_end":22693,"line_start":60,"line_end":60,"column_start":8,"column_end":13},"name":"to_u8","qualname":"::cast::ToPrimitive::to_u8","value":"fn to_u8(&Self) -> Option<u8>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u8`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u8`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22622,"byte_end":22666,"line_start":58,"line_end":58,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22671,"byte_end":22680,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22855,"byte_end":22861,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"to_u16","qualname":"::cast::ToPrimitive::to_u16","value":"fn to_u16(&Self) -> Option<u16>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u16`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u16`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22788,"byte_end":22833,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22838,"byte_end":22847,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23025,"byte_end":23031,"line_start":72,"line_end":72,"column_start":8,"column_end":14},"name":"to_u32","qualname":"::cast::ToPrimitive::to_u32","value":"fn to_u32(&Self) -> Option<u32>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u32`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u32`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22958,"byte_end":23003,"line_start":70,"line_end":70,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23008,"byte_end":23017,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23195,"byte_end":23201,"line_start":78,"line_end":78,"column_start":8,"column_end":14},"name":"to_u64","qualname":"::cast::ToPrimitive::to_u64","value":"fn to_u64(&Self) -> Option<u64>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u64`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u64`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23128,"byte_end":23173,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23178,"byte_end":23187,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23588,"byte_end":23595,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"to_u128","qualname":"::cast::ToPrimitive::to_u128","value":"fn to_u128(&Self) -> Option<u128>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u128`.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u128`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23230,"byte_end":23276,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23281,"byte_end":23284,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23289,"byte_end":23367,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23372,"byte_end":23375,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_u64()`.  Types implementing","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23380,"byte_end":23459,"line_start":84,"line_end":84,"column_start":5,"column_end":84}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23464,"byte_end":23545,"line_start":85,"line_end":85,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23550,"byte_end":23559,"line_start":86,"line_end":86,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23564,"byte_end":23580,"line_start":87,"line_end":87,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23737,"byte_end":23743,"line_start":94,"line_end":94,"column_start":8,"column_end":14},"name":"to_f32","qualname":"::cast::ToPrimitive::to_f32","value":"fn to_f32(&Self) -> Option<f32>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f32`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f32`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23670,"byte_end":23715,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23720,"byte_end":23729,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23907,"byte_end":23913,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::cast::ToPrimitive::to_f64","value":"fn to_f64(&Self) -> Option<f64>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f64`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f64`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23840,"byte_end":23885,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23890,"byte_end":23899,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32311,"byte_end":32324,"line_start":364,"line_end":364,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::cast::FromPrimitive","value":"FromPrimitive: Sized","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a number to a value.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32245,"byte_end":32300,"line_start":363,"line_end":363,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32507,"byte_end":32517,"line_start":368,"line_end":368,"column_start":8,"column_end":18},"name":"from_isize","qualname":"::cast::FromPrimitive::from_isize","value":"fn from_isize(isize) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert an `isize` to return an optional value of this type. If the\n value cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `isize` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32338,"byte_end":32409,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32414,"byte_end":32485,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32490,"byte_end":32499,"line_start":367,"line_end":367,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32775,"byte_end":32782,"line_start":375,"line_end":375,"column_start":8,"column_end":15},"name":"from_i8","qualname":"::cast::FromPrimitive::from_i8","value":"fn from_i8(i8) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert an `i8` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i8` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32610,"byte_end":32678,"line_start":372,"line_end":372,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32683,"byte_end":32753,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32758,"byte_end":32767,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33032,"byte_end":33040,"line_start":382,"line_end":382,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::cast::FromPrimitive::from_i16","value":"fn from_i16(i16) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert an `i16` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i16` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32866,"byte_end":32935,"line_start":379,"line_end":379,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32940,"byte_end":33010,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33015,"byte_end":33024,"line_start":381,"line_end":381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33291,"byte_end":33299,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"from_i32","qualname":"::cast::FromPrimitive::from_i32","value":"fn from_i32(i32) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert an `i32` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i32` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33125,"byte_end":33194,"line_start":386,"line_end":386,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33199,"byte_end":33269,"line_start":387,"line_end":387,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33274,"byte_end":33283,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33536,"byte_end":33544,"line_start":395,"line_end":395,"column_start":8,"column_end":16},"name":"from_i64","qualname":"::cast::FromPrimitive::from_i64","value":"fn from_i64(i64) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert an `i64` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i64` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33384,"byte_end":33453,"line_start":393,"line_end":393,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33458,"byte_end":33528,"line_start":394,"line_end":394,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34034,"byte_end":34043,"line_start":406,"line_end":406,"column_start":8,"column_end":17},"name":"from_i128","qualname":"::cast::FromPrimitive::from_i128","value":"fn from_i128(i128) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert an `i128` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.","sig":null,"attributes":[{"value":"/ Convert an `i128` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33575,"byte_end":33645,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33650,"byte_end":33720,"line_start":398,"line_end":398,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33725,"byte_end":33728,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33733,"byte_end":33811,"line_start":400,"line_end":400,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33816,"byte_end":33819,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_i64()`.  Types implementing","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33824,"byte_end":33905,"line_start":402,"line_end":402,"column_start":5,"column_end":86}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33910,"byte_end":33991,"line_start":403,"line_end":403,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33996,"byte_end":34005,"line_start":404,"line_end":404,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34010,"byte_end":34026,"line_start":405,"line_end":405,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34302,"byte_end":34312,"line_start":413,"line_end":413,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::cast::FromPrimitive::from_usize","value":"fn from_usize(usize) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert a `usize` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert a `usize` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34135,"byte_end":34205,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34210,"byte_end":34280,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34285,"byte_end":34294,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34570,"byte_end":34577,"line_start":420,"line_end":420,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::cast::FromPrimitive::from_u8","value":"fn from_u8(u8) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert an `u8` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u8` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34405,"byte_end":34473,"line_start":417,"line_end":417,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34478,"byte_end":34548,"line_start":418,"line_end":418,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34553,"byte_end":34562,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34827,"byte_end":34835,"line_start":427,"line_end":427,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::cast::FromPrimitive::from_u16","value":"fn from_u16(u16) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert an `u16` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u16` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34661,"byte_end":34730,"line_start":424,"line_end":424,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34735,"byte_end":34805,"line_start":425,"line_end":425,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34810,"byte_end":34819,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35086,"byte_end":35094,"line_start":434,"line_end":434,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::cast::FromPrimitive::from_u32","value":"fn from_u32(u32) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert an `u32` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u32` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34920,"byte_end":34989,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34994,"byte_end":35064,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35069,"byte_end":35078,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35331,"byte_end":35339,"line_start":440,"line_end":440,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::cast::FromPrimitive::from_u64","value":"fn from_u64(u64) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert an `u64` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u64` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35179,"byte_end":35248,"line_start":438,"line_end":438,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35253,"byte_end":35323,"line_start":439,"line_end":439,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35829,"byte_end":35838,"line_start":451,"line_end":451,"column_start":8,"column_end":17},"name":"from_u128","qualname":"::cast::FromPrimitive::from_u128","value":"fn from_u128(u128) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert an `u128` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.","sig":null,"attributes":[{"value":"/ Convert an `u128` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35370,"byte_end":35440,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35445,"byte_end":35515,"line_start":443,"line_end":443,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35520,"byte_end":35523,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35528,"byte_end":35606,"line_start":445,"line_end":445,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35611,"byte_end":35614,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_u64()`.  Types implementing","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35619,"byte_end":35700,"line_start":447,"line_end":447,"column_start":5,"column_end":86}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35705,"byte_end":35786,"line_start":448,"line_end":448,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35791,"byte_end":35800,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35805,"byte_end":35821,"line_start":450,"line_end":450,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36095,"byte_end":36103,"line_start":458,"line_end":458,"column_start":8,"column_end":16},"name":"from_f32","qualname":"::cast::FromPrimitive::from_f32","value":"fn from_f32(f32) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert a `f32` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert a `f32` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35930,"byte_end":35998,"line_start":455,"line_end":455,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36003,"byte_end":36073,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36078,"byte_end":36087,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36353,"byte_end":36361,"line_start":465,"line_end":465,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::cast::FromPrimitive::from_f64","value":"fn from_f64(f64) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" Convert a `f64` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert a `f64` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36188,"byte_end":36256,"line_start":462,"line_end":462,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36261,"byte_end":36331,"line_start":463,"line_end":463,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36336,"byte_end":36345,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39194,"byte_end":39202,"line_start":570,"line_end":570,"column_start":12,"column_end":20},"name":"to_isize","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_isize","value":"fn to_isize(&Self) -> Option<isize>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":281},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39224,"byte_end":39229,"line_start":571,"line_end":571,"column_start":12,"column_end":17},"name":"to_i8","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_i8","value":"fn to_i8(&Self) -> Option<i8>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":282},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39248,"byte_end":39254,"line_start":572,"line_end":572,"column_start":12,"column_end":18},"name":"to_i16","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_i16","value":"fn to_i16(&Self) -> Option<i16>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":283},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39274,"byte_end":39280,"line_start":573,"line_end":573,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_i32","value":"fn to_i32(&Self) -> Option<i32>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":284},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39300,"byte_end":39306,"line_start":574,"line_end":574,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_i64","value":"fn to_i64(&Self) -> Option<i64>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":285},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39351,"byte_end":39358,"line_start":576,"line_end":576,"column_start":12,"column_end":19},"name":"to_i128","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_i128","value":"fn to_i128(&Self) -> Option<i128>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":286},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38994,"byte_end":39001,"line_start":561,"line_end":561,"column_start":11,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39380,"byte_end":39388,"line_start":578,"line_end":578,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_usize","value":"fn to_usize(&Self) -> Option<usize>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":287},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39410,"byte_end":39415,"line_start":579,"line_end":579,"column_start":12,"column_end":17},"name":"to_u8","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_u8","value":"fn to_u8(&Self) -> Option<u8>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":288},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39434,"byte_end":39440,"line_start":580,"line_end":580,"column_start":12,"column_end":18},"name":"to_u16","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_u16","value":"fn to_u16(&Self) -> Option<u16>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":289},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39460,"byte_end":39466,"line_start":581,"line_end":581,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_u32","value":"fn to_u32(&Self) -> Option<u32>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":290},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39486,"byte_end":39492,"line_start":582,"line_end":582,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_u64","value":"fn to_u64(&Self) -> Option<u64>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":291},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39537,"byte_end":39544,"line_start":584,"line_end":584,"column_start":12,"column_end":19},"name":"to_u128","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_u128","value":"fn to_u128(&Self) -> Option<u128>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":292},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38994,"byte_end":39001,"line_start":561,"line_end":561,"column_start":11,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39566,"byte_end":39572,"line_start":586,"line_end":586,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_f32","value":"fn to_f32(&Self) -> Option<f32>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":293},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39592,"byte_end":39598,"line_start":587,"line_end":587,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Wrapping<T> as cast::ToPrimitive>::to_f64","value":"fn to_f64(&Self) -> Option<f64>","parent":{"krate":0,"index":280},"children":[],"decl_id":{"krate":0,"index":294},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":38974,"byte_end":38983,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39972,"byte_end":39982,"line_start":603,"line_end":603,"column_start":12,"column_end":22},"name":"from_isize","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_isize","value":"fn from_isize(isize) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":306},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40002,"byte_end":40009,"line_start":604,"line_end":604,"column_start":12,"column_end":19},"name":"from_i8","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_i8","value":"fn from_i8(i8) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":307},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40026,"byte_end":40034,"line_start":605,"line_end":605,"column_start":12,"column_end":20},"name":"from_i16","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_i16","value":"fn from_i16(i16) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":308},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40052,"byte_end":40060,"line_start":606,"line_end":606,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_i32","value":"fn from_i32(i32) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":309},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40078,"byte_end":40086,"line_start":607,"line_end":607,"column_start":12,"column_end":20},"name":"from_i64","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_i64","value":"fn from_i64(i64) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":310},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40129,"byte_end":40138,"line_start":609,"line_end":609,"column_start":12,"column_end":21},"name":"from_i128","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_i128","value":"fn from_i128(i128) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":311},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39755,"byte_end":39762,"line_start":594,"line_end":594,"column_start":11,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40158,"byte_end":40168,"line_start":611,"line_end":611,"column_start":12,"column_end":22},"name":"from_usize","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_usize","value":"fn from_usize(usize) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":312},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40188,"byte_end":40195,"line_start":612,"line_end":612,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_u8","value":"fn from_u8(u8) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":313},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40212,"byte_end":40220,"line_start":613,"line_end":613,"column_start":12,"column_end":20},"name":"from_u16","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_u16","value":"fn from_u16(u16) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":314},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40238,"byte_end":40246,"line_start":614,"line_end":614,"column_start":12,"column_end":20},"name":"from_u32","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_u32","value":"fn from_u32(u32) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":315},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40264,"byte_end":40272,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_u64","value":"fn from_u64(u64) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":316},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40315,"byte_end":40324,"line_start":617,"line_end":617,"column_start":12,"column_end":21},"name":"from_u128","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_u128","value":"fn from_u128(u128) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":317},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39755,"byte_end":39762,"line_start":594,"line_end":594,"column_start":11,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40344,"byte_end":40352,"line_start":619,"line_end":619,"column_start":12,"column_end":20},"name":"from_f32","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_f32","value":"fn from_f32(f32) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":318},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40370,"byte_end":40378,"line_start":620,"line_end":620,"column_start":12,"column_end":20},"name":"from_f64","qualname":"<Wrapping<T> as cast::FromPrimitive>::from_f64","value":"fn from_f64(f64) -> Option<Self>","parent":{"krate":0,"index":305},"children":[],"decl_id":{"krate":0,"index":319},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39735,"byte_end":39744,"line_start":593,"line_end":593,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40607,"byte_end":40611,"line_start":635,"line_end":635,"column_start":8,"column_end":12},"name":"cast","qualname":"::cast::cast","value":"fn cast<T, U>(T) -> Option<U> where T: NumCast, U: NumCast","parent":null,"children":[],"decl_id":null,"docs":" Cast from one machine scalar to another.","sig":null,"attributes":[{"value":"/ Cast from one machine scalar to another.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40394,"byte_end":40438,"line_start":624,"line_end":624,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40439,"byte_end":40442,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40443,"byte_end":40457,"line_start":626,"line_end":626,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40458,"byte_end":40461,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40462,"byte_end":40469,"line_start":628,"line_end":628,"column_start":1,"column_end":8}},{"value":"/ # use num_traits as num;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40470,"byte_end":40498,"line_start":629,"line_end":629,"column_start":1,"column_end":29}},{"value":"/ let twenty: f32 = num::cast(0x14).unwrap();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40499,"byte_end":40546,"line_start":630,"line_end":630,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(twenty, 20f32);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40547,"byte_end":40577,"line_start":631,"line_end":631,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40578,"byte_end":40585,"line_start":632,"line_end":632,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40586,"byte_end":40589,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40590,"byte_end":40599,"line_start":634,"line_end":634,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40745,"byte_end":40752,"line_start":640,"line_end":640,"column_start":11,"column_end":18},"name":"NumCast","qualname":"::cast::NumCast","value":"NumCast: Sized + ToPrimitive","parent":null,"children":[{"krate":0,"index":331}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[{"value":"/ An interface for casting between machine scalars.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40681,"byte_end":40734,"line_start":639,"line_end":639,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40903,"byte_end":40907,"line_start":643,"line_end":643,"column_start":8,"column_end":12},"name":"from","qualname":"::cast::NumCast::from","value":"fn from<T>(T) -> Option<Self> where T: ToPrimitive","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Creates a number from another value that can be converted into\n a primitive via the `ToPrimitive` trait.\n","sig":null,"attributes":[{"value":"/ Creates a number from another value that can be converted into","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40780,"byte_end":40846,"line_start":641,"line_end":641,"column_start":5,"column_end":71}},{"value":"/ a primitive via the `ToPrimitive` trait.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40851,"byte_end":40895,"line_start":642,"line_end":642,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":41848,"byte_end":41852,"line_start":678,"line_end":678,"column_start":8,"column_end":12},"name":"from","qualname":"<Wrapping<T> as cast::NumCast>::from","value":"fn from<U>(U) -> Option<Self> where U: ToPrimitive","parent":{"krate":0,"index":330},"children":[],"decl_id":{"krate":0,"index":331},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43041,"byte_end":43052,"line_start":718,"line_end":718,"column_start":11,"column_end":22},"name":"AsPrimitive","qualname":"::cast::AsPrimitive","value":"AsPrimitive<T>: 'static + Copy","parent":null,"children":[{"krate":0,"index":340}],"decl_id":null,"docs":" A generic interface for casting between machine scalars with the\n `as` operator, which admits narrowing and precision loss.\n Implementers of this trait AsPrimitive should behave like a primitive\n numeric type (e.g. a newtype around another primitive), and the\n intended conversion must never fail.","sig":null,"attributes":[{"value":"/ A generic interface for casting between machine scalars with the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":41935,"byte_end":42003,"line_start":683,"line_end":683,"column_start":1,"column_end":69}},{"value":"/ `as` operator, which admits narrowing and precision loss.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42004,"byte_end":42065,"line_start":684,"line_end":684,"column_start":1,"column_end":62}},{"value":"/ Implementers of this trait AsPrimitive should behave like a primitive","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42066,"byte_end":42139,"line_start":685,"line_end":685,"column_start":1,"column_end":74}},{"value":"/ numeric type (e.g. a newtype around another primitive), and the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42140,"byte_end":42207,"line_start":686,"line_end":686,"column_start":1,"column_end":68}},{"value":"/ intended conversion must never fail.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42208,"byte_end":42248,"line_start":687,"line_end":687,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42249,"byte_end":42252,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42253,"byte_end":42267,"line_start":689,"line_end":689,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42268,"byte_end":42271,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42272,"byte_end":42279,"line_start":691,"line_end":691,"column_start":1,"column_end":8}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42280,"byte_end":42314,"line_start":692,"line_end":692,"column_start":1,"column_end":35}},{"value":"/ let three: i32 = (3.14159265f32).as_();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42315,"byte_end":42358,"line_start":693,"line_end":693,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(three, 3);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42359,"byte_end":42384,"line_start":694,"line_end":694,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42385,"byte_end":42392,"line_start":695,"line_end":695,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42393,"byte_end":42396,"line_start":696,"line_end":696,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42397,"byte_end":42409,"line_start":697,"line_end":697,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42410,"byte_end":42413,"line_start":698,"line_end":698,"column_start":1,"column_end":4}},{"value":"/ Currently, some uses of the `as` operator are not entirely safe.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42414,"byte_end":42482,"line_start":699,"line_end":699,"column_start":1,"column_end":69}},{"value":"/ In particular, it is undefined behavior if:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42483,"byte_end":42530,"line_start":700,"line_end":700,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42531,"byte_end":42534,"line_start":701,"line_end":701,"column_start":1,"column_end":4}},{"value":"/ - A truncated floating point value cannot fit in the target integer","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42535,"byte_end":42606,"line_start":702,"line_end":702,"column_start":1,"column_end":72}},{"value":"/   type ([#10184](https://github.com/rust-lang/rust/issues/10184));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42607,"byte_end":42677,"line_start":703,"line_end":703,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42678,"byte_end":42681,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42682,"byte_end":42695,"line_start":705,"line_end":705,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42696,"byte_end":42730,"line_start":706,"line_end":706,"column_start":1,"column_end":35}},{"value":"/ let x: u8 = (1.04E+17).as_(); // UB","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42731,"byte_end":42770,"line_start":707,"line_end":707,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42771,"byte_end":42778,"line_start":708,"line_end":708,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42779,"byte_end":42782,"line_start":709,"line_end":709,"column_start":1,"column_end":4}},{"value":"/ - Or a floating point value does not fit in another floating","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42783,"byte_end":42847,"line_start":710,"line_end":710,"column_start":1,"column_end":65}},{"value":"/   point type ([#15536](https://github.com/rust-lang/rust/issues/15536)).","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42848,"byte_end":42924,"line_start":711,"line_end":711,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42925,"byte_end":42928,"line_start":712,"line_end":712,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42929,"byte_end":42942,"line_start":713,"line_end":713,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42943,"byte_end":42977,"line_start":714,"line_end":714,"column_start":1,"column_end":35}},{"value":"/ let x: f32 = (1e300f64).as_(); // UB","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42978,"byte_end":43018,"line_start":715,"line_end":715,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43019,"byte_end":43026,"line_start":716,"line_end":716,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43027,"byte_end":43030,"line_start":717,"line_end":717,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43171,"byte_end":43174,"line_start":723,"line_end":723,"column_start":8,"column_end":11},"name":"as_","qualname":"::cast::AsPrimitive::as_","value":"fn as_(Self) -> T","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Convert a value to another, using the `as` operator.\n","sig":null,"attributes":[{"value":"/ Convert a value to another, using the `as` operator.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43107,"byte_end":43163,"line_start":722,"line_end":722,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":398},{"krate":0,"index":406},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":2071},{"krate":0,"index":2088},{"krate":0,"index":2105}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44825,"byte_end":44834,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"name":"FloatCore","qualname":"::float::FloatCore","value":"FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397}],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers that works with `no_std`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44683,"byte_end":44753,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44754,"byte_end":44757,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait implements a subset of the `Float` trait.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44758,"byte_end":44814,"line_start":12,"line_end":12,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45231,"byte_end":45239,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::FloatCore::infinity","value":"fn infinity() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns positive infinity.","sig":null,"attributes":[{"value":"/ Returns positive infinity.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44897,"byte_end":44927,"line_start":14,"line_end":14,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44932,"byte_end":44935,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44940,"byte_end":44954,"line_start":16,"line_end":16,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44959,"byte_end":44962,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44967,"byte_end":44974,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44979,"byte_end":45016,"line_start":19,"line_end":19,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45021,"byte_end":45045,"line_start":20,"line_end":20,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45050,"byte_end":45053,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45058,"byte_end":45092,"line_start":22,"line_end":22,"column_start":5,"column_end":39}},{"value":"/     assert!(T::infinity() == x);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45097,"byte_end":45133,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45138,"byte_end":45143,"line_start":24,"line_end":24,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45148,"byte_end":45151,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45156,"byte_end":45181,"line_start":26,"line_end":26,"column_start":5,"column_end":30}},{"value":"/ check(f64::INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45186,"byte_end":45211,"line_start":27,"line_end":27,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45216,"byte_end":45223,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45602,"byte_end":45614,"line_start":46,"line_end":46,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::FloatCore::neg_infinity","value":"fn neg_infinity() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns negative infinity.","sig":null,"attributes":[{"value":"/ Returns negative infinity.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45256,"byte_end":45286,"line_start":31,"line_end":31,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45291,"byte_end":45294,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45299,"byte_end":45313,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45318,"byte_end":45321,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45326,"byte_end":45333,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45338,"byte_end":45375,"line_start":36,"line_end":36,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45380,"byte_end":45404,"line_start":37,"line_end":37,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45409,"byte_end":45412,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45417,"byte_end":45451,"line_start":39,"line_end":39,"column_start":5,"column_end":39}},{"value":"/     assert!(T::neg_infinity() == x);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45456,"byte_end":45496,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45501,"byte_end":45506,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45511,"byte_end":45514,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45519,"byte_end":45548,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45553,"byte_end":45582,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45587,"byte_end":45594,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45924,"byte_end":45927,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::FloatCore::nan","value":"fn nan() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns NaN.","sig":null,"attributes":[{"value":"/ Returns NaN.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45631,"byte_end":45647,"line_start":48,"line_end":48,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45652,"byte_end":45655,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45660,"byte_end":45674,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45679,"byte_end":45682,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45687,"byte_end":45694,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45699,"byte_end":45736,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45741,"byte_end":45744,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>() {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45749,"byte_end":45779,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/     let n = T::nan();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45784,"byte_end":45809,"line_start":56,"line_end":56,"column_start":5,"column_end":30}},{"value":"/     assert!(n != n);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45814,"byte_end":45838,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45843,"byte_end":45848,"line_start":58,"line_end":58,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45853,"byte_end":45856,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ check::<f32>();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45861,"byte_end":45880,"line_start":60,"line_end":60,"column_start":5,"column_end":24}},{"value":"/ check::<f64>();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45885,"byte_end":45904,"line_start":61,"line_end":61,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45909,"byte_end":45916,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46343,"byte_end":46351,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::FloatCore::neg_zero","value":"fn neg_zero() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45944,"byte_end":45963,"line_start":65,"line_end":65,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45968,"byte_end":45971,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45976,"byte_end":45990,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45995,"byte_end":45998,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46003,"byte_end":46010,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46015,"byte_end":46052,"line_start":70,"line_end":70,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46057,"byte_end":46081,"line_start":71,"line_end":71,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46086,"byte_end":46089,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(n: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46094,"byte_end":46128,"line_start":73,"line_end":73,"column_start":5,"column_end":39}},{"value":"/     let z = T::neg_zero();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46133,"byte_end":46163,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     assert!(z.is_zero());","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46168,"byte_end":46197,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/     assert!(T::one() / z == n);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46202,"byte_end":46237,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46242,"byte_end":46247,"line_start":77,"line_end":77,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46252,"byte_end":46255,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46260,"byte_end":46289,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46294,"byte_end":46323,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46328,"byte_end":46335,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46730,"byte_end":46739,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::FloatCore::min_value","value":"fn min_value() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46368,"byte_end":46435,"line_start":84,"line_end":84,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46440,"byte_end":46443,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46448,"byte_end":46462,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46467,"byte_end":46470,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46475,"byte_end":46482,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46487,"byte_end":46524,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46529,"byte_end":46553,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46558,"byte_end":46561,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46566,"byte_end":46600,"line_start":92,"line_end":92,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_value() == x);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46605,"byte_end":46642,"line_start":93,"line_end":93,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46647,"byte_end":46652,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46657,"byte_end":46660,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46665,"byte_end":46685,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ check(f64::MIN);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46690,"byte_end":46710,"line_start":97,"line_end":97,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46715,"byte_end":46722,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47159,"byte_end":47177,"line_start":116,"line_end":116,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::FloatCore::min_positive_value","value":"fn min_positive_value() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46756,"byte_end":46837,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46842,"byte_end":46845,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46850,"byte_end":46864,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46869,"byte_end":46872,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46877,"byte_end":46884,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46889,"byte_end":46926,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46931,"byte_end":46955,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46960,"byte_end":46963,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46968,"byte_end":47002,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_positive_value() == x);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47007,"byte_end":47053,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47058,"byte_end":47063,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47068,"byte_end":47071,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN_POSITIVE);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47076,"byte_end":47105,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ check(f64::MIN_POSITIVE);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47110,"byte_end":47139,"line_start":114,"line_end":114,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47144,"byte_end":47151,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47539,"byte_end":47546,"line_start":133,"line_end":133,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::FloatCore::epsilon","value":"fn epsilon() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47194,"byte_end":47238,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47243,"byte_end":47246,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47251,"byte_end":47265,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47270,"byte_end":47273,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47278,"byte_end":47285,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47290,"byte_end":47327,"line_start":123,"line_end":123,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47332,"byte_end":47356,"line_start":124,"line_end":124,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47361,"byte_end":47364,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47369,"byte_end":47403,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/     assert!(T::epsilon() == x);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47408,"byte_end":47443,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47448,"byte_end":47453,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47458,"byte_end":47461,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ check(f32::EPSILON);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47466,"byte_end":47490,"line_start":130,"line_end":130,"column_start":5,"column_end":29}},{"value":"/ check(f64::EPSILON);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47495,"byte_end":47519,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47524,"byte_end":47531,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47924,"byte_end":47933,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::FloatCore::max_value","value":"fn max_value() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47563,"byte_end":47629,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47634,"byte_end":47637,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47642,"byte_end":47656,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47661,"byte_end":47664,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47669,"byte_end":47676,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47681,"byte_end":47718,"line_start":140,"line_end":140,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47723,"byte_end":47747,"line_start":141,"line_end":141,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47752,"byte_end":47755,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47760,"byte_end":47794,"line_start":143,"line_end":143,"column_start":5,"column_end":39}},{"value":"/     assert!(T::max_value() == x);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47799,"byte_end":47836,"line_start":144,"line_end":144,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47841,"byte_end":47846,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47851,"byte_end":47854,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47859,"byte_end":47879,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/ check(f64::MAX);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47884,"byte_end":47904,"line_start":148,"line_end":148,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47909,"byte_end":47916,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48383,"byte_end":48389,"line_start":170,"line_end":170,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::FloatCore::is_nan","value":"fn is_nan(Self) -> bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns `true` if the number is NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is NaN.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47950,"byte_end":47990,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47995,"byte_end":47998,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48003,"byte_end":48017,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48022,"byte_end":48025,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48030,"byte_end":48037,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48042,"byte_end":48079,"line_start":157,"line_end":157,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48084,"byte_end":48108,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48113,"byte_end":48116,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48121,"byte_end":48164,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_nan() == p);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48169,"byte_end":48202,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48207,"byte_end":48212,"line_start":162,"line_end":162,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48217,"byte_end":48220,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ check(f32::NAN, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48225,"byte_end":48251,"line_start":164,"line_end":164,"column_start":5,"column_end":31}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48256,"byte_end":48288,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/ check(f64::NAN, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48293,"byte_end":48319,"line_start":166,"line_end":166,"column_start":5,"column_end":31}},{"value":"/ check(0.0f64, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48324,"byte_end":48349,"line_start":167,"line_end":167,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48354,"byte_end":48361,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48366,"byte_end":48375,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48966,"byte_end":48977,"line_start":194,"line_end":194,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::FloatCore::is_infinite","value":"fn is_infinite(Self) -> bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns `true` if the number is infinite.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is infinite.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48438,"byte_end":48483,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48488,"byte_end":48491,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48496,"byte_end":48510,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48515,"byte_end":48518,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48523,"byte_end":48530,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48535,"byte_end":48572,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48577,"byte_end":48601,"line_start":180,"line_end":180,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48606,"byte_end":48609,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48614,"byte_end":48657,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_infinite() == p);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48662,"byte_end":48700,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48705,"byte_end":48710,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48715,"byte_end":48718,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48723,"byte_end":48754,"line_start":186,"line_end":186,"column_start":5,"column_end":36}},{"value":"/ check(f32::NEG_INFINITY, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48759,"byte_end":48794,"line_start":187,"line_end":187,"column_start":5,"column_end":40}},{"value":"/ check(f32::NAN, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48799,"byte_end":48826,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ check(f64::INFINITY, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48831,"byte_end":48862,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48867,"byte_end":48902,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48907,"byte_end":48932,"line_start":191,"line_end":191,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48937,"byte_end":48944,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48949,"byte_end":48958,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49578,"byte_end":49587,"line_start":217,"line_end":217,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::FloatCore::is_finite","value":"fn is_finite(Self) -> bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither infinite or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither infinite or NaN.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49070,"byte_end":49130,"line_start":198,"line_end":198,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49135,"byte_end":49138,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49143,"byte_end":49157,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49162,"byte_end":49165,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49170,"byte_end":49177,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49182,"byte_end":49219,"line_start":203,"line_end":203,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49224,"byte_end":49248,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49253,"byte_end":49256,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49261,"byte_end":49304,"line_start":206,"line_end":206,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_finite() == p);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49309,"byte_end":49345,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49350,"byte_end":49355,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49360,"byte_end":49363,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49368,"byte_end":49400,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49405,"byte_end":49431,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49436,"byte_end":49472,"line_start":212,"line_end":212,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49477,"byte_end":49512,"line_start":213,"line_end":213,"column_start":5,"column_end":40}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49517,"byte_end":49544,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49549,"byte_end":49556,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49561,"byte_end":49570,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50185,"byte_end":50194,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::FloatCore::is_normal","value":"fn is_normal(Self) -> bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite, subnormal or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite, subnormal or NaN.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49662,"byte_end":49739,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49744,"byte_end":49747,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49752,"byte_end":49766,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49771,"byte_end":49774,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49779,"byte_end":49786,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49791,"byte_end":49828,"line_start":226,"line_end":226,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49833,"byte_end":49857,"line_start":227,"line_end":227,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49862,"byte_end":49865,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49870,"byte_end":49913,"line_start":229,"line_end":229,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_normal() == p);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49918,"byte_end":49954,"line_start":230,"line_end":230,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49959,"byte_end":49964,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49969,"byte_end":49972,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49977,"byte_end":50009,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50014,"byte_end":50040,"line_start":234,"line_end":234,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50045,"byte_end":50081,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50086,"byte_end":50121,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50126,"byte_end":50151,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50156,"byte_end":50163,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50168,"byte_end":50177,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51033,"byte_end":51041,"line_start":266,"line_end":266,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::FloatCore::classify","value":"fn classify(Self) -> FpCategory","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50268,"byte_end":50343,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50348,"byte_end":50417,"line_start":245,"line_end":245,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50422,"byte_end":50444,"line_start":246,"line_end":246,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50449,"byte_end":50452,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50457,"byte_end":50471,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50476,"byte_end":50479,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50484,"byte_end":50491,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50496,"byte_end":50533,"line_start":251,"line_end":251,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50538,"byte_end":50562,"line_start":252,"line_end":252,"column_start":5,"column_end":29}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50567,"byte_end":50596,"line_start":253,"line_end":253,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50601,"byte_end":50604,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, c: FpCategory) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50609,"byte_end":50658,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/     assert!(x.classify() == c);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50663,"byte_end":50698,"line_start":256,"line_end":256,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50703,"byte_end":50708,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50713,"byte_end":50716,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, FpCategory::Infinite);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50721,"byte_end":50768,"line_start":259,"line_end":259,"column_start":5,"column_end":52}},{"value":"/ check(f32::MAX, FpCategory::Normal);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50773,"byte_end":50813,"line_start":260,"line_end":260,"column_start":5,"column_end":45}},{"value":"/ check(f64::NAN, FpCategory::Nan);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50818,"byte_end":50855,"line_start":261,"line_end":261,"column_start":5,"column_end":42}},{"value":"/ check(f64::MIN_POSITIVE, FpCategory::Normal);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50860,"byte_end":50909,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/ check(f64::MIN_POSITIVE / 2.0, FpCategory::Subnormal);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50914,"byte_end":50972,"line_start":263,"line_end":263,"column_start":5,"column_end":63}},{"value":"/ check(0.0f64, FpCategory::Zero);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50977,"byte_end":51013,"line_start":264,"line_end":264,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51018,"byte_end":51025,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51674,"byte_end":51679,"line_start":291,"line_end":291,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::FloatCore::floor","value":"fn floor(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51068,"byte_end":51131,"line_start":268,"line_end":268,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51136,"byte_end":51139,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51144,"byte_end":51158,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51163,"byte_end":51166,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51171,"byte_end":51178,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51183,"byte_end":51220,"line_start":273,"line_end":273,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51225,"byte_end":51249,"line_start":274,"line_end":274,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51254,"byte_end":51257,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51262,"byte_end":51302,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/     assert!(x.floor() == y);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51307,"byte_end":51339,"line_start":277,"line_end":277,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51344,"byte_end":51349,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51354,"byte_end":51357,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51362,"byte_end":51402,"line_start":280,"line_end":280,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51407,"byte_end":51430,"line_start":281,"line_end":281,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51435,"byte_end":51458,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51463,"byte_end":51486,"line_start":283,"line_end":283,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51491,"byte_end":51515,"line_start":284,"line_end":284,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51520,"byte_end":51545,"line_start":285,"line_end":285,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51550,"byte_end":51575,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -2.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51580,"byte_end":51605,"line_start":287,"line_end":287,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51610,"byte_end":51640,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51645,"byte_end":51652,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51657,"byte_end":51666,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52525,"byte_end":52529,"line_start":325,"line_end":325,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::FloatCore::ceil","value":"fn ceil(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51916,"byte_end":51983,"line_start":302,"line_end":302,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51988,"byte_end":51991,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51996,"byte_end":52010,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52015,"byte_end":52018,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52023,"byte_end":52030,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52035,"byte_end":52072,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52077,"byte_end":52101,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52106,"byte_end":52109,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52114,"byte_end":52154,"line_start":310,"line_end":310,"column_start":5,"column_end":45}},{"value":"/     assert!(x.ceil() == y);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52159,"byte_end":52190,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52195,"byte_end":52200,"line_start":312,"line_end":312,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52205,"byte_end":52208,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52213,"byte_end":52253,"line_start":314,"line_end":314,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52258,"byte_end":52281,"line_start":315,"line_end":315,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52286,"byte_end":52309,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 2.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52314,"byte_end":52337,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52342,"byte_end":52366,"line_start":318,"line_end":318,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52371,"byte_end":52396,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52401,"byte_end":52426,"line_start":320,"line_end":320,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52431,"byte_end":52456,"line_start":321,"line_end":321,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52461,"byte_end":52491,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52496,"byte_end":52503,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52508,"byte_end":52517,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53361,"byte_end":53366,"line_start":358,"line_end":358,"column_start":8,"column_end":13},"name":"round","qualname":"::float::FloatCore::round","value":"fn round(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from `0.0`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52766,"byte_end":52848,"line_start":336,"line_end":336,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52853,"byte_end":52856,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52861,"byte_end":52875,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52880,"byte_end":52883,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52888,"byte_end":52895,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52900,"byte_end":52937,"line_start":341,"line_end":341,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52942,"byte_end":52966,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52971,"byte_end":52974,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52979,"byte_end":53019,"line_start":344,"line_end":344,"column_start":5,"column_end":45}},{"value":"/     assert!(x.round() == y);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53024,"byte_end":53056,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53061,"byte_end":53066,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53071,"byte_end":53074,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53079,"byte_end":53119,"line_start":348,"line_end":348,"column_start":5,"column_end":45}},{"value":"/ check(0.4f32, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53124,"byte_end":53147,"line_start":349,"line_end":349,"column_start":5,"column_end":28}},{"value":"/ check(0.5f32, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53152,"byte_end":53175,"line_start":350,"line_end":350,"column_start":5,"column_end":28}},{"value":"/ check(0.6f32, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53180,"byte_end":53203,"line_start":351,"line_end":351,"column_start":5,"column_end":28}},{"value":"/ check(-0.4f64, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53208,"byte_end":53232,"line_start":352,"line_end":352,"column_start":5,"column_end":29}},{"value":"/ check(-0.5f64, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53237,"byte_end":53262,"line_start":353,"line_end":353,"column_start":5,"column_end":30}},{"value":"/ check(-0.6f64, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53267,"byte_end":53292,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53297,"byte_end":53327,"line_start":355,"line_end":355,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53332,"byte_end":53339,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53344,"byte_end":53353,"line_start":357,"line_end":357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54457,"byte_end":54462,"line_start":402,"line_end":402,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::FloatCore::trunc","value":"fn trunc(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53874,"byte_end":53914,"line_start":379,"line_end":379,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53919,"byte_end":53922,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53927,"byte_end":53941,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53946,"byte_end":53949,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53954,"byte_end":53961,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53966,"byte_end":54003,"line_start":384,"line_end":384,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54008,"byte_end":54032,"line_start":385,"line_end":385,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54037,"byte_end":54040,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54045,"byte_end":54085,"line_start":387,"line_end":387,"column_start":5,"column_end":45}},{"value":"/     assert!(x.trunc() == y);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54090,"byte_end":54122,"line_start":388,"line_end":388,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54127,"byte_end":54132,"line_start":389,"line_end":389,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54137,"byte_end":54140,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54145,"byte_end":54185,"line_start":391,"line_end":391,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54190,"byte_end":54213,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54218,"byte_end":54241,"line_start":393,"line_end":393,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54246,"byte_end":54269,"line_start":394,"line_end":394,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54274,"byte_end":54298,"line_start":395,"line_end":395,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54303,"byte_end":54328,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54333,"byte_end":54358,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54363,"byte_end":54388,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54393,"byte_end":54423,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54428,"byte_end":54435,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54440,"byte_end":54449,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55183,"byte_end":55188,"line_start":434,"line_end":434,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::FloatCore::fract","value":"fn fract(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54609,"byte_end":54653,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54658,"byte_end":54661,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54666,"byte_end":54680,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54685,"byte_end":54688,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54693,"byte_end":54700,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54705,"byte_end":54742,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54747,"byte_end":54771,"line_start":417,"line_end":417,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54776,"byte_end":54779,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54784,"byte_end":54824,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/     assert!(x.fract() == y);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54829,"byte_end":54861,"line_start":420,"line_end":420,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54866,"byte_end":54871,"line_start":421,"line_end":421,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54876,"byte_end":54879,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54884,"byte_end":54909,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/ check(0.75f32, 0.75);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54914,"byte_end":54939,"line_start":424,"line_end":424,"column_start":5,"column_end":30}},{"value":"/ check(1.0f32, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54944,"byte_end":54967,"line_start":425,"line_end":425,"column_start":5,"column_end":28}},{"value":"/ check(1.25f32, 0.25);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54972,"byte_end":54997,"line_start":426,"line_end":426,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55002,"byte_end":55026,"line_start":427,"line_end":427,"column_start":5,"column_end":29}},{"value":"/ check(-0.75f64, -0.75);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55031,"byte_end":55058,"line_start":428,"line_end":428,"column_start":5,"column_end":32}},{"value":"/ check(-1.0f64, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55063,"byte_end":55087,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/ check(-1.25f64, -0.25);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55092,"byte_end":55119,"line_start":430,"line_end":430,"column_start":5,"column_end":32}},{"value":"/ check(f64::MIN, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55124,"byte_end":55149,"line_start":431,"line_end":431,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55154,"byte_end":55161,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55166,"byte_end":55175,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55893,"byte_end":55896,"line_start":463,"line_end":463,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::FloatCore::abs","value":"fn abs(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `FloatCore::nan()` if the\n number is `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `FloatCore::nan()` if the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55327,"byte_end":55403,"line_start":442,"line_end":442,"column_start":5,"column_end":81}},{"value":"/ number is `FloatCore::nan()`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55408,"byte_end":55441,"line_start":443,"line_end":443,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55446,"byte_end":55449,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55454,"byte_end":55468,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55473,"byte_end":55476,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55481,"byte_end":55488,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55493,"byte_end":55530,"line_start":448,"line_end":448,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55535,"byte_end":55559,"line_start":449,"line_end":449,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55564,"byte_end":55567,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55572,"byte_end":55612,"line_start":451,"line_end":451,"column_start":5,"column_end":45}},{"value":"/     assert!(x.abs() == y);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55617,"byte_end":55647,"line_start":452,"line_end":452,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55652,"byte_end":55657,"line_start":453,"line_end":453,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55662,"byte_end":55665,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55670,"byte_end":55710,"line_start":455,"line_end":455,"column_start":5,"column_end":45}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55715,"byte_end":55738,"line_start":456,"line_end":456,"column_start":5,"column_end":28}},{"value":"/ check(0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55743,"byte_end":55766,"line_start":457,"line_end":457,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55771,"byte_end":55795,"line_start":458,"line_end":458,"column_start":5,"column_end":29}},{"value":"/ check(-1.0f64, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55800,"byte_end":55824,"line_start":459,"line_end":459,"column_start":5,"column_end":29}},{"value":"/ check(f64::MIN, f64::MAX);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55829,"byte_end":55859,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55864,"byte_end":55871,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55876,"byte_end":55885,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56820,"byte_end":56826,"line_start":497,"line_end":497,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::FloatCore::signum","value":"fn signum(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56089,"byte_end":56145,"line_start":473,"line_end":473,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56150,"byte_end":56153,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `FloatCore::infinity()`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56158,"byte_end":56230,"line_start":475,"line_end":475,"column_start":5,"column_end":77}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `FloatCore::neg_infinity()`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56235,"byte_end":56312,"line_start":476,"line_end":476,"column_start":5,"column_end":82}},{"value":"/ - `FloatCore::nan()` if the number is `FloatCore::nan()`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56317,"byte_end":56377,"line_start":477,"line_end":477,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56382,"byte_end":56385,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56390,"byte_end":56404,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56409,"byte_end":56412,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56417,"byte_end":56424,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56429,"byte_end":56466,"line_start":482,"line_end":482,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56471,"byte_end":56495,"line_start":483,"line_end":483,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56500,"byte_end":56503,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56508,"byte_end":56548,"line_start":485,"line_end":485,"column_start":5,"column_end":45}},{"value":"/     assert!(x.signum() == y);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56553,"byte_end":56586,"line_start":486,"line_end":486,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56591,"byte_end":56596,"line_start":487,"line_end":487,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56601,"byte_end":56604,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56609,"byte_end":56639,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/ check(3.0f32, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56644,"byte_end":56667,"line_start":490,"line_end":490,"column_start":5,"column_end":28}},{"value":"/ check(0.0f32, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56672,"byte_end":56695,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56700,"byte_end":56725,"line_start":492,"line_end":492,"column_start":5,"column_end":30}},{"value":"/ check(-3.0f64, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56730,"byte_end":56755,"line_start":493,"line_end":493,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56760,"byte_end":56786,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56791,"byte_end":56798,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56803,"byte_end":56812,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57688,"byte_end":57704,"line_start":530,"line_end":530,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::FloatCore::is_sign_positive","value":"fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0` and\n `FloatCore::infinity()`, and since Rust 1.20 also\n `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0` and","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57025,"byte_end":57087,"line_start":507,"line_end":507,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::infinity()`, and since Rust 1.20 also","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57092,"byte_end":57145,"line_start":508,"line_end":508,"column_start":5,"column_end":58}},{"value":"/ `FloatCore::nan()`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57150,"byte_end":57173,"line_start":509,"line_end":509,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57178,"byte_end":57181,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57186,"byte_end":57200,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57205,"byte_end":57208,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57213,"byte_end":57220,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57225,"byte_end":57262,"line_start":514,"line_end":514,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57267,"byte_end":57291,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57296,"byte_end":57299,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57304,"byte_end":57347,"line_start":517,"line_end":517,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_positive() == p);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57352,"byte_end":57395,"line_start":518,"line_end":518,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57400,"byte_end":57405,"line_start":519,"line_end":519,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57410,"byte_end":57413,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57418,"byte_end":57449,"line_start":521,"line_end":521,"column_start":5,"column_end":36}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57454,"byte_end":57480,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ check(0.0f32, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57485,"byte_end":57509,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/ check(-0.0f64, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57514,"byte_end":57540,"line_start":524,"line_end":524,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57545,"byte_end":57581,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57586,"byte_end":57621,"line_start":526,"line_end":526,"column_start":5,"column_end":40}},{"value":"/ check(-f64::NAN, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57626,"byte_end":57654,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57659,"byte_end":57666,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57671,"byte_end":57680,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58434,"byte_end":58450,"line_start":557,"line_end":557,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::FloatCore::is_sign_negative","value":"fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0` and\n `FloatCore::neg_infinity()`, and since Rust 1.20 also\n `-FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0` and","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57765,"byte_end":57827,"line_start":534,"line_end":534,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::neg_infinity()`, and since Rust 1.20 also","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57832,"byte_end":57889,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/ `-FloatCore::nan()`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57894,"byte_end":57918,"line_start":536,"line_end":536,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57923,"byte_end":57926,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57931,"byte_end":57945,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57950,"byte_end":57953,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57958,"byte_end":57965,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57970,"byte_end":58007,"line_start":541,"line_end":541,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58012,"byte_end":58036,"line_start":542,"line_end":542,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58041,"byte_end":58044,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58049,"byte_end":58092,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_negative() == p);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58097,"byte_end":58140,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58145,"byte_end":58150,"line_start":546,"line_end":546,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58155,"byte_end":58158,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58163,"byte_end":58195,"line_start":548,"line_end":548,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58200,"byte_end":58227,"line_start":549,"line_end":549,"column_start":5,"column_end":32}},{"value":"/ check(0.0f32, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58232,"byte_end":58257,"line_start":550,"line_end":550,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58262,"byte_end":58287,"line_start":551,"line_end":551,"column_start":5,"column_end":30}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58292,"byte_end":58327,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/ check(f64::MIN_POSITIVE, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58332,"byte_end":58368,"line_start":553,"line_end":553,"column_start":5,"column_end":41}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58373,"byte_end":58400,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58405,"byte_end":58412,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58417,"byte_end":58426,"line_start":556,"line_end":556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59083,"byte_end":59086,"line_start":582,"line_end":582,"column_start":8,"column_end":11},"name":"min","qualname":"::float::FloatCore::min","value":"fn min(Self, Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58545,"byte_end":58588,"line_start":562,"line_end":562,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58593,"byte_end":58596,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58601,"byte_end":58673,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58678,"byte_end":58681,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58686,"byte_end":58700,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58705,"byte_end":58708,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58713,"byte_end":58720,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58725,"byte_end":58762,"line_start":569,"line_end":569,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58767,"byte_end":58791,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58796,"byte_end":58799,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58804,"byte_end":58852,"line_start":572,"line_end":572,"column_start":5,"column_end":53}},{"value":"/     assert!(x.min(y) == min);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58857,"byte_end":58890,"line_start":573,"line_end":573,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58895,"byte_end":58900,"line_start":574,"line_end":574,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58905,"byte_end":58908,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58913,"byte_end":58941,"line_start":576,"line_end":576,"column_start":5,"column_end":33}},{"value":"/ check(f32::NAN, 2.0, 2.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58946,"byte_end":58976,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, -2.0, -2.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58981,"byte_end":59011,"line_start":578,"line_end":578,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, f64::NAN, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59016,"byte_end":59049,"line_start":579,"line_end":579,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59054,"byte_end":59061,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59066,"byte_end":59075,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59883,"byte_end":59886,"line_start":616,"line_end":616,"column_start":8,"column_end":11},"name":"max","qualname":"::float::FloatCore::max","value":"fn max(Self, Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59341,"byte_end":59384,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59389,"byte_end":59392,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59397,"byte_end":59469,"line_start":598,"line_end":598,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59474,"byte_end":59477,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59482,"byte_end":59496,"line_start":600,"line_end":600,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59501,"byte_end":59504,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59509,"byte_end":59516,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59521,"byte_end":59558,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59563,"byte_end":59587,"line_start":604,"line_end":604,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59592,"byte_end":59595,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59600,"byte_end":59648,"line_start":606,"line_end":606,"column_start":5,"column_end":53}},{"value":"/     assert!(x.max(y) == min);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59653,"byte_end":59686,"line_start":607,"line_end":607,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59691,"byte_end":59696,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59701,"byte_end":59704,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 2.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59709,"byte_end":59737,"line_start":610,"line_end":610,"column_start":5,"column_end":33}},{"value":"/ check(1.0f32, f32::NAN, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59742,"byte_end":59775,"line_start":611,"line_end":611,"column_start":5,"column_end":38}},{"value":"/ check(-1.0f64, 2.0, 2.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59780,"byte_end":59809,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/ check(-1.0f64, f64::NAN, -1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59814,"byte_end":59849,"line_start":613,"line_end":613,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59854,"byte_end":59861,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59866,"byte_end":59875,"line_start":615,"line_end":615,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60641,"byte_end":60646,"line_start":649,"line_end":649,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::FloatCore::recip","value":"fn recip(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the reciprocal (multiplicative inverse) of the number.","sig":null,"attributes":[{"value":"/ Returns the reciprocal (multiplicative inverse) of the number.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60141,"byte_end":60207,"line_start":630,"line_end":630,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60212,"byte_end":60215,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60220,"byte_end":60234,"line_start":632,"line_end":632,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60239,"byte_end":60242,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60247,"byte_end":60254,"line_start":634,"line_end":634,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60259,"byte_end":60296,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60301,"byte_end":60325,"line_start":636,"line_end":636,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60330,"byte_end":60333,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60338,"byte_end":60378,"line_start":638,"line_end":638,"column_start":5,"column_end":45}},{"value":"/     assert!(x.recip() == y);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60383,"byte_end":60415,"line_start":639,"line_end":639,"column_start":5,"column_end":37}},{"value":"/     assert!(y.recip() == x);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60420,"byte_end":60452,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60457,"byte_end":60462,"line_start":641,"line_end":641,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60467,"byte_end":60470,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60475,"byte_end":60505,"line_start":643,"line_end":643,"column_start":5,"column_end":35}},{"value":"/ check(2.0f32, 0.5);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60510,"byte_end":60533,"line_start":644,"line_end":644,"column_start":5,"column_end":28}},{"value":"/ check(-0.25f64, -4.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60538,"byte_end":60564,"line_start":645,"line_end":645,"column_start":5,"column_end":31}},{"value":"/ check(-0.0f64, f64::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60569,"byte_end":60607,"line_start":646,"line_end":646,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60612,"byte_end":60619,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60624,"byte_end":60633,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61240,"byte_end":61244,"line_start":673,"line_end":673,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::FloatCore::powi","value":"fn powi(Self, i32) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60701,"byte_end":60740,"line_start":653,"line_end":653,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60745,"byte_end":60748,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60753,"byte_end":60814,"line_start":655,"line_end":655,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60819,"byte_end":60822,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60827,"byte_end":60841,"line_start":657,"line_end":657,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60846,"byte_end":60849,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60854,"byte_end":60861,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60866,"byte_end":60903,"line_start":660,"line_end":660,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60908,"byte_end":60911,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, exp: i32, powi: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60916,"byte_end":60969,"line_start":662,"line_end":662,"column_start":5,"column_end":58}},{"value":"/     assert!(x.powi(exp) == powi);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60974,"byte_end":61011,"line_start":663,"line_end":663,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61016,"byte_end":61021,"line_start":664,"line_end":664,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61026,"byte_end":61029,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ check(9.0f32, 2, 81.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61034,"byte_end":61061,"line_start":666,"line_end":666,"column_start":5,"column_end":32}},{"value":"/ check(1.0f32, -2, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61066,"byte_end":61093,"line_start":667,"line_end":667,"column_start":5,"column_end":32}},{"value":"/ check(10.0f64, 20, 1e20);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61098,"byte_end":61127,"line_start":668,"line_end":668,"column_start":5,"column_end":34}},{"value":"/ check(4.0f64, -2, 0.0625);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61132,"byte_end":61162,"line_start":669,"line_end":669,"column_start":5,"column_end":35}},{"value":"/ check(-1.0f64, std::i32::MIN, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61167,"byte_end":61206,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61211,"byte_end":61218,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61223,"byte_end":61232,"line_start":672,"line_end":672,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62161,"byte_end":62171,"line_start":701,"line_end":701,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::FloatCore::to_degrees","value":"fn to_degrees(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Converts to degrees, assuming the number is in radians.","sig":null,"attributes":[{"value":"/ Converts to degrees, assuming the number is in radians.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61686,"byte_end":61745,"line_start":684,"line_end":684,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61750,"byte_end":61753,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61758,"byte_end":61772,"line_start":686,"line_end":686,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61777,"byte_end":61780,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61785,"byte_end":61792,"line_start":688,"line_end":688,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61797,"byte_end":61834,"line_start":689,"line_end":689,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61839,"byte_end":61863,"line_start":690,"line_end":690,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61868,"byte_end":61871,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(rad: T, deg: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61876,"byte_end":61920,"line_start":692,"line_end":692,"column_start":5,"column_end":49}},{"value":"/     assert!(rad.to_degrees() == deg);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61925,"byte_end":61966,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61971,"byte_end":61976,"line_start":694,"line_end":694,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61981,"byte_end":61984,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61989,"byte_end":62012,"line_start":696,"line_end":696,"column_start":5,"column_end":28}},{"value":"/ check(f32::consts::PI, 180.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62017,"byte_end":62051,"line_start":697,"line_end":697,"column_start":5,"column_end":39}},{"value":"/ check(f64::consts::FRAC_PI_4, 45.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62056,"byte_end":62096,"line_start":698,"line_end":698,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62101,"byte_end":62141,"line_start":699,"line_end":699,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62146,"byte_end":62153,"line_start":700,"line_end":700,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62667,"byte_end":62677,"line_start":720,"line_end":720,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::FloatCore::to_radians","value":"fn to_radians(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Converts to radians, assuming the number is in degrees.","sig":null,"attributes":[{"value":"/ Converts to radians, assuming the number is in degrees.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62192,"byte_end":62251,"line_start":703,"line_end":703,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62256,"byte_end":62259,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62264,"byte_end":62278,"line_start":705,"line_end":705,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62283,"byte_end":62286,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62291,"byte_end":62298,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62303,"byte_end":62340,"line_start":708,"line_end":708,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62345,"byte_end":62369,"line_start":709,"line_end":709,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62374,"byte_end":62377,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(deg: T, rad: T) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62382,"byte_end":62426,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/     assert!(deg.to_radians() == rad);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62431,"byte_end":62472,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62477,"byte_end":62482,"line_start":713,"line_end":713,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62487,"byte_end":62490,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62495,"byte_end":62518,"line_start":715,"line_end":715,"column_start":5,"column_end":28}},{"value":"/ check(180.0, f32::consts::PI);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62523,"byte_end":62557,"line_start":716,"line_end":716,"column_start":5,"column_end":39}},{"value":"/ check(45.0, f64::consts::FRAC_PI_4);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62562,"byte_end":62602,"line_start":717,"line_end":717,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62607,"byte_end":62647,"line_start":718,"line_end":718,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62652,"byte_end":62659,"line_start":719,"line_end":719,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63436,"byte_end":63450,"line_start":743,"line_end":743,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::FloatCore::integer_decode","value":"fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62698,"byte_end":62776,"line_start":722,"line_end":722,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62781,"byte_end":62858,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62863,"byte_end":62866,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62871,"byte_end":62885,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62890,"byte_end":62893,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62898,"byte_end":62905,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62910,"byte_end":62947,"line_start":728,"line_end":728,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62952,"byte_end":62976,"line_start":729,"line_end":729,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62981,"byte_end":62984,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, m: u64, e: i16, s:i8) {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62989,"byte_end":63045,"line_start":731,"line_end":731,"column_start":5,"column_end":61}},{"value":"/     let (mantissa, exponent, sign) = x.integer_decode();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63050,"byte_end":63110,"line_start":732,"line_end":732,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(mantissa, m);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63115,"byte_end":63147,"line_start":733,"line_end":733,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(exponent, e);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63152,"byte_end":63184,"line_start":734,"line_end":734,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(sign, s);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63189,"byte_end":63217,"line_start":735,"line_end":735,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63222,"byte_end":63227,"line_start":736,"line_end":736,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63232,"byte_end":63235,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ check(2.0f32, 1 << 23, -22, 1);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63240,"byte_end":63275,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/ check(-2.0f32, 1 << 23, -22, -1);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63280,"byte_end":63317,"line_start":739,"line_end":739,"column_start":5,"column_end":42}},{"value":"/ check(f32::INFINITY, 1 << 23, 105, 1);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63322,"byte_end":63364,"line_start":740,"line_end":740,"column_start":5,"column_end":47}},{"value":"/ check(f64::NEG_INFINITY, 1 << 52, 972, -1);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63369,"byte_end":63416,"line_start":741,"line_end":741,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63421,"byte_end":63428,"line_start":742,"line_end":742,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63528,"byte_end":63536,"line_start":748,"line_end":748,"column_start":9,"column_end":17},"name":"infinity","qualname":"<f32 as float::FloatCore>::infinity","value":"fn infinity() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":369},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63565,"byte_end":63577,"line_start":749,"line_end":749,"column_start":9,"column_end":21},"name":"neg_infinity","qualname":"<f32 as float::FloatCore>::neg_infinity","value":"fn neg_infinity() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":370},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63610,"byte_end":63613,"line_start":750,"line_end":750,"column_start":9,"column_end":12},"name":"nan","qualname":"<f32 as float::FloatCore>::nan","value":"fn nan() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":371},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63637,"byte_end":63645,"line_start":751,"line_end":751,"column_start":9,"column_end":17},"name":"neg_zero","qualname":"<f32 as float::FloatCore>::neg_zero","value":"fn neg_zero() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":372},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63665,"byte_end":63674,"line_start":752,"line_end":752,"column_start":9,"column_end":18},"name":"min_value","qualname":"<f32 as float::FloatCore>::min_value","value":"fn min_value() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":373},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63698,"byte_end":63716,"line_start":753,"line_end":753,"column_start":9,"column_end":27},"name":"min_positive_value","qualname":"<f32 as float::FloatCore>::min_positive_value","value":"fn min_positive_value() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":374},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63749,"byte_end":63756,"line_start":754,"line_end":754,"column_start":9,"column_end":16},"name":"epsilon","qualname":"<f32 as float::FloatCore>::epsilon","value":"fn epsilon() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":375},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63784,"byte_end":63793,"line_start":755,"line_end":755,"column_start":9,"column_end":18},"name":"max_value","qualname":"<f32 as float::FloatCore>::max_value","value":"fn max_value() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":376},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63837,"byte_end":63851,"line_start":759,"line_end":759,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"<f32 as float::FloatCore>::integer_decode","value":"fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":397},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63820,"byte_end":63829,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63972,"byte_end":63980,"line_start":765,"line_end":765,"column_start":8,"column_end":16},"name":"classify","qualname":"<f32 as float::FloatCore>::classify","value":"fn classify(Self) -> FpCategory","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":381},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63922,"byte_end":63931,"line_start":763,"line_end":763,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"std\"))","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63936,"byte_end":63964,"line_start":764,"line_end":764,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":64486,"byte_end":64496,"line_start":781,"line_end":781,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"<f32 as float::FloatCore>::to_degrees","value":"fn to_degrees(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":395},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":64436,"byte_end":64445,"line_start":779,"line_end":779,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"std\"))","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":64450,"byte_end":64478,"line_start":780,"line_end":780,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":64723,"byte_end":64733,"line_start":789,"line_end":789,"column_start":8,"column_end":18},"name":"to_radians","qualname":"<f32 as float::FloatCore>::to_radians","value":"fn to_radians(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":396},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":64673,"byte_end":64682,"line_start":787,"line_end":787,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"std\"))","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":64687,"byte_end":64715,"line_start":788,"line_end":788,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":65682,"byte_end":65690,"line_start":820,"line_end":820,"column_start":9,"column_end":17},"name":"infinity","qualname":"<f64 as float::FloatCore>::infinity","value":"fn infinity() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":369},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":65719,"byte_end":65731,"line_start":821,"line_end":821,"column_start":9,"column_end":21},"name":"neg_infinity","qualname":"<f64 as float::FloatCore>::neg_infinity","value":"fn neg_infinity() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":370},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":65764,"byte_end":65767,"line_start":822,"line_end":822,"column_start":9,"column_end":12},"name":"nan","qualname":"<f64 as float::FloatCore>::nan","value":"fn nan() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":371},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":65791,"byte_end":65799,"line_start":823,"line_end":823,"column_start":9,"column_end":17},"name":"neg_zero","qualname":"<f64 as float::FloatCore>::neg_zero","value":"fn neg_zero() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":372},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":65819,"byte_end":65828,"line_start":824,"line_end":824,"column_start":9,"column_end":18},"name":"min_value","qualname":"<f64 as float::FloatCore>::min_value","value":"fn min_value() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":373},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":65852,"byte_end":65870,"line_start":825,"line_end":825,"column_start":9,"column_end":27},"name":"min_positive_value","qualname":"<f64 as float::FloatCore>::min_positive_value","value":"fn min_positive_value() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":374},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":65903,"byte_end":65910,"line_start":826,"line_end":826,"column_start":9,"column_end":16},"name":"epsilon","qualname":"<f64 as float::FloatCore>::epsilon","value":"fn epsilon() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":375},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":65938,"byte_end":65947,"line_start":827,"line_end":827,"column_start":9,"column_end":18},"name":"max_value","qualname":"<f64 as float::FloatCore>::max_value","value":"fn max_value() -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":376},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":65991,"byte_end":66005,"line_start":831,"line_end":831,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"<f64 as float::FloatCore>::integer_decode","value":"fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":397},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":65974,"byte_end":65983,"line_start":830,"line_end":830,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":66126,"byte_end":66134,"line_start":837,"line_end":837,"column_start":8,"column_end":16},"name":"classify","qualname":"<f64 as float::FloatCore>::classify","value":"fn classify(Self) -> FpCategory","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":381},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":66076,"byte_end":66085,"line_start":835,"line_end":835,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"std\"))","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":66090,"byte_end":66118,"line_start":836,"line_end":836,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":66656,"byte_end":66666,"line_start":853,"line_end":853,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"<f64 as float::FloatCore>::to_degrees","value":"fn to_degrees(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":395},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":66606,"byte_end":66615,"line_start":851,"line_end":851,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"std\"))","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":66620,"byte_end":66648,"line_start":852,"line_end":852,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":66992,"byte_end":67002,"line_start":862,"line_end":862,"column_start":8,"column_end":18},"name":"to_radians","qualname":"<f64 as float::FloatCore>::to_radians","value":"fn to_radians(Self) -> Self","parent":{"krate":0,"index":368},"children":[],"decl_id":{"krate":0,"index":396},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":66942,"byte_end":66951,"line_start":860,"line_end":860,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"std\"))","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":66956,"byte_end":66984,"line_start":861,"line_end":861,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":95960,"byte_end":95961,"line_start":1936,"line_end":1936,"column_start":5,"column_end":6},"name":"E","qualname":"::float::FloatConst::E","value":"fn E() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return Euler’s number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96001,"byte_end":96010,"line_start":1938,"line_end":1938,"column_start":5,"column_end":14},"name":"FRAC_1_PI","qualname":"::float::FloatConst::FRAC_1_PI","value":"fn FRAC_1_PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `1.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96057,"byte_end":96070,"line_start":1940,"line_end":1940,"column_start":5,"column_end":18},"name":"FRAC_1_SQRT_2","qualname":"::float::FloatConst::FRAC_1_SQRT_2","value":"fn FRAC_1_SQRT_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `1.0 / sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96110,"byte_end":96119,"line_start":1942,"line_end":1942,"column_start":5,"column_end":14},"name":"FRAC_2_PI","qualname":"::float::FloatConst::FRAC_2_PI","value":"fn FRAC_2_PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `2.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96165,"byte_end":96179,"line_start":1944,"line_end":1944,"column_start":5,"column_end":19},"name":"FRAC_2_SQRT_PI","qualname":"::float::FloatConst::FRAC_2_SQRT_PI","value":"fn FRAC_2_SQRT_PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `2.0 / sqrt(π)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96219,"byte_end":96228,"line_start":1946,"line_end":1946,"column_start":5,"column_end":14},"name":"FRAC_PI_2","qualname":"::float::FloatConst::FRAC_PI_2","value":"fn FRAC_PI_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `π / 2.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96268,"byte_end":96277,"line_start":1948,"line_end":1948,"column_start":5,"column_end":14},"name":"FRAC_PI_3","qualname":"::float::FloatConst::FRAC_PI_3","value":"fn FRAC_PI_3() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `π / 3.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96317,"byte_end":96326,"line_start":1950,"line_end":1950,"column_start":5,"column_end":14},"name":"FRAC_PI_4","qualname":"::float::FloatConst::FRAC_PI_4","value":"fn FRAC_PI_4() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `π / 4.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96366,"byte_end":96375,"line_start":1952,"line_end":1952,"column_start":5,"column_end":14},"name":"FRAC_PI_6","qualname":"::float::FloatConst::FRAC_PI_6","value":"fn FRAC_PI_6() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `π / 6.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96415,"byte_end":96424,"line_start":1954,"line_end":1954,"column_start":5,"column_end":14},"name":"FRAC_PI_8","qualname":"::float::FloatConst::FRAC_PI_8","value":"fn FRAC_PI_8() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `π / 8.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96464,"byte_end":96469,"line_start":1956,"line_end":1956,"column_start":5,"column_end":10},"name":"LN_10","qualname":"::float::FloatConst::LN_10","value":"fn LN_10() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `ln(10.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96508,"byte_end":96512,"line_start":1958,"line_end":1958,"column_start":5,"column_end":9},"name":"LN_2","qualname":"::float::FloatConst::LN_2","value":"fn LN_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `ln(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96552,"byte_end":96559,"line_start":1960,"line_end":1960,"column_start":5,"column_end":12},"name":"LOG10_E","qualname":"::float::FloatConst::LOG10_E","value":"fn LOG10_E() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `log10(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96598,"byte_end":96604,"line_start":1962,"line_end":1962,"column_start":5,"column_end":11},"name":"LOG2_E","qualname":"::float::FloatConst::LOG2_E","value":"fn LOG2_E() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `log2(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96656,"byte_end":96658,"line_start":1964,"line_end":1964,"column_start":5,"column_end":7},"name":"PI","qualname":"::float::FloatConst::PI","value":"fn PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return Archimedes’ constant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96699,"byte_end":96705,"line_start":1966,"line_end":1966,"column_start":5,"column_end":11},"name":"SQRT_2","qualname":"::float::FloatConst::SQRT_2","value":"fn SQRT_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"Return `sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":95960,"byte_end":95961,"line_start":1936,"line_end":1936,"column_start":5,"column_end":6},"name":"E","qualname":"<f32 as float::FloatConst>::E","value":"fn E() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2072},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96001,"byte_end":96010,"line_start":1938,"line_end":1938,"column_start":5,"column_end":14},"name":"FRAC_1_PI","qualname":"<f32 as float::FloatConst>::FRAC_1_PI","value":"fn FRAC_1_PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2073},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96057,"byte_end":96070,"line_start":1940,"line_end":1940,"column_start":5,"column_end":18},"name":"FRAC_1_SQRT_2","qualname":"<f32 as float::FloatConst>::FRAC_1_SQRT_2","value":"fn FRAC_1_SQRT_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2074},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96110,"byte_end":96119,"line_start":1942,"line_end":1942,"column_start":5,"column_end":14},"name":"FRAC_2_PI","qualname":"<f32 as float::FloatConst>::FRAC_2_PI","value":"fn FRAC_2_PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2075},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96165,"byte_end":96179,"line_start":1944,"line_end":1944,"column_start":5,"column_end":19},"name":"FRAC_2_SQRT_PI","qualname":"<f32 as float::FloatConst>::FRAC_2_SQRT_PI","value":"fn FRAC_2_SQRT_PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2076},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96219,"byte_end":96228,"line_start":1946,"line_end":1946,"column_start":5,"column_end":14},"name":"FRAC_PI_2","qualname":"<f32 as float::FloatConst>::FRAC_PI_2","value":"fn FRAC_PI_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2077},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96268,"byte_end":96277,"line_start":1948,"line_end":1948,"column_start":5,"column_end":14},"name":"FRAC_PI_3","qualname":"<f32 as float::FloatConst>::FRAC_PI_3","value":"fn FRAC_PI_3() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2078},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96317,"byte_end":96326,"line_start":1950,"line_end":1950,"column_start":5,"column_end":14},"name":"FRAC_PI_4","qualname":"<f32 as float::FloatConst>::FRAC_PI_4","value":"fn FRAC_PI_4() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2079},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96366,"byte_end":96375,"line_start":1952,"line_end":1952,"column_start":5,"column_end":14},"name":"FRAC_PI_6","qualname":"<f32 as float::FloatConst>::FRAC_PI_6","value":"fn FRAC_PI_6() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2080},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96415,"byte_end":96424,"line_start":1954,"line_end":1954,"column_start":5,"column_end":14},"name":"FRAC_PI_8","qualname":"<f32 as float::FloatConst>::FRAC_PI_8","value":"fn FRAC_PI_8() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2081},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96464,"byte_end":96469,"line_start":1956,"line_end":1956,"column_start":5,"column_end":10},"name":"LN_10","qualname":"<f32 as float::FloatConst>::LN_10","value":"fn LN_10() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2082},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96508,"byte_end":96512,"line_start":1958,"line_end":1958,"column_start":5,"column_end":9},"name":"LN_2","qualname":"<f32 as float::FloatConst>::LN_2","value":"fn LN_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2083},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96552,"byte_end":96559,"line_start":1960,"line_end":1960,"column_start":5,"column_end":12},"name":"LOG10_E","qualname":"<f32 as float::FloatConst>::LOG10_E","value":"fn LOG10_E() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2084},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96598,"byte_end":96604,"line_start":1962,"line_end":1962,"column_start":5,"column_end":11},"name":"LOG2_E","qualname":"<f32 as float::FloatConst>::LOG2_E","value":"fn LOG2_E() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2085},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96656,"byte_end":96658,"line_start":1964,"line_end":1964,"column_start":5,"column_end":7},"name":"PI","qualname":"<f32 as float::FloatConst>::PI","value":"fn PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2086},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96699,"byte_end":96705,"line_start":1966,"line_end":1966,"column_start":5,"column_end":11},"name":"SQRT_2","qualname":"<f32 as float::FloatConst>::SQRT_2","value":"fn SQRT_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":95960,"byte_end":95961,"line_start":1936,"line_end":1936,"column_start":5,"column_end":6},"name":"E","qualname":"<f64 as float::FloatConst>::E","value":"fn E() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2072},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96001,"byte_end":96010,"line_start":1938,"line_end":1938,"column_start":5,"column_end":14},"name":"FRAC_1_PI","qualname":"<f64 as float::FloatConst>::FRAC_1_PI","value":"fn FRAC_1_PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2073},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96057,"byte_end":96070,"line_start":1940,"line_end":1940,"column_start":5,"column_end":18},"name":"FRAC_1_SQRT_2","qualname":"<f64 as float::FloatConst>::FRAC_1_SQRT_2","value":"fn FRAC_1_SQRT_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2074},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96110,"byte_end":96119,"line_start":1942,"line_end":1942,"column_start":5,"column_end":14},"name":"FRAC_2_PI","qualname":"<f64 as float::FloatConst>::FRAC_2_PI","value":"fn FRAC_2_PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2075},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96165,"byte_end":96179,"line_start":1944,"line_end":1944,"column_start":5,"column_end":19},"name":"FRAC_2_SQRT_PI","qualname":"<f64 as float::FloatConst>::FRAC_2_SQRT_PI","value":"fn FRAC_2_SQRT_PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2076},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96219,"byte_end":96228,"line_start":1946,"line_end":1946,"column_start":5,"column_end":14},"name":"FRAC_PI_2","qualname":"<f64 as float::FloatConst>::FRAC_PI_2","value":"fn FRAC_PI_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2077},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96268,"byte_end":96277,"line_start":1948,"line_end":1948,"column_start":5,"column_end":14},"name":"FRAC_PI_3","qualname":"<f64 as float::FloatConst>::FRAC_PI_3","value":"fn FRAC_PI_3() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2078},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96317,"byte_end":96326,"line_start":1950,"line_end":1950,"column_start":5,"column_end":14},"name":"FRAC_PI_4","qualname":"<f64 as float::FloatConst>::FRAC_PI_4","value":"fn FRAC_PI_4() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2079},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96366,"byte_end":96375,"line_start":1952,"line_end":1952,"column_start":5,"column_end":14},"name":"FRAC_PI_6","qualname":"<f64 as float::FloatConst>::FRAC_PI_6","value":"fn FRAC_PI_6() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2080},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96415,"byte_end":96424,"line_start":1954,"line_end":1954,"column_start":5,"column_end":14},"name":"FRAC_PI_8","qualname":"<f64 as float::FloatConst>::FRAC_PI_8","value":"fn FRAC_PI_8() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2081},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96464,"byte_end":96469,"line_start":1956,"line_end":1956,"column_start":5,"column_end":10},"name":"LN_10","qualname":"<f64 as float::FloatConst>::LN_10","value":"fn LN_10() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2082},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96508,"byte_end":96512,"line_start":1958,"line_end":1958,"column_start":5,"column_end":9},"name":"LN_2","qualname":"<f64 as float::FloatConst>::LN_2","value":"fn LN_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2083},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96552,"byte_end":96559,"line_start":1960,"line_end":1960,"column_start":5,"column_end":12},"name":"LOG10_E","qualname":"<f64 as float::FloatConst>::LOG10_E","value":"fn LOG10_E() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2084},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96598,"byte_end":96604,"line_start":1962,"line_end":1962,"column_start":5,"column_end":11},"name":"LOG2_E","qualname":"<f64 as float::FloatConst>::LOG2_E","value":"fn LOG2_E() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2085},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96656,"byte_end":96658,"line_start":1964,"line_end":1964,"column_start":5,"column_end":7},"name":"PI","qualname":"<f64 as float::FloatConst>::PI","value":"fn PI() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2086},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96699,"byte_end":96705,"line_start":1966,"line_end":1966,"column_start":5,"column_end":11},"name":"SQRT_2","qualname":"<f64 as float::FloatConst>::SQRT_2","value":"fn SQRT_2() -> Self","parent":{"krate":0,"index":2071},"children":[],"decl_id":{"krate":0,"index":2087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\macros.rs","byte_start":17601,"byte_end":17610,"line_start":32,"line_end":32,"column_start":13,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"identities","qualname":"::identities","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":431},{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2143},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":432},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2170},{"krate":0,"index":2173},{"krate":0,"index":2176},{"krate":0,"index":2179},{"krate":0,"index":2182},{"krate":0,"index":2185},{"krate":0,"index":2188},{"krate":0,"index":2191},{"krate":0,"index":2194},{"krate":0,"index":2197},{"krate":0,"index":2200},{"krate":0,"index":2203},{"krate":0,"index":442},{"krate":0,"index":446},{"krate":0,"index":448}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98589,"byte_end":98593,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"Zero","qualname":"::identities::Zero","value":"Zero: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"decl_id":null,"docs":" Defines an additive identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines an additive identity element for `Self`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98414,"byte_end":98466,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98467,"byte_end":98470,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98471,"byte_end":98481,"line_start":6,"line_end":6,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98482,"byte_end":98485,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98486,"byte_end":98500,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/ a + 0 = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98501,"byte_end":98535,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ 0 + a = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98536,"byte_end":98570,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98571,"byte_end":98578,"line_start":11,"line_end":11,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98963,"byte_end":98967,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::Zero::zero","value":"fn zero() -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the additive identity element of `Self`, `0`.\n # Purity","sig":null,"attributes":[{"value":"/ Returns the additive identity element of `Self`, `0`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98634,"byte_end":98691,"line_start":13,"line_end":13,"column_start":5,"column_end":62}},{"value":"/ # Purity","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98696,"byte_end":98708,"line_start":14,"line_end":14,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98713,"byte_end":98716,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98721,"byte_end":98795,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98800,"byte_end":98866,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98871,"byte_end":98889,"line_start":18,"line_end":18,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99056,"byte_end":99064,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"set_zero","qualname":"::identities::Zero::set_zero","value":"fn set_zero(&mut Self)","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Sets `self` to the additive identity element of `Self`, `0`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the additive identity element of `Self`, `0`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98984,"byte_end":99048,"line_start":22,"line_end":22,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99204,"byte_end":99211,"line_start":29,"line_end":29,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::identities::Zero::is_zero","value":"fn is_zero(&Self) -> bool","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the additive identity.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99119,"byte_end":99182,"line_start":27,"line_end":27,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99187,"byte_end":99196,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99937,"byte_end":99944,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"is_zero","qualname":"<Wrapping<T> as identities::Zero>::is_zero","value":"fn is_zero(&Self) -> bool","parent":{"krate":0,"index":427},"children":[],"decl_id":{"krate":0,"index":430},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100001,"byte_end":100009,"line_start":74,"line_end":74,"column_start":8,"column_end":16},"name":"set_zero","qualname":"<Wrapping<T> as identities::Zero>::set_zero","value":"fn set_zero(&mut Self)","parent":{"krate":0,"index":427},"children":[],"decl_id":{"krate":0,"index":429},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100064,"byte_end":100068,"line_start":78,"line_end":78,"column_start":8,"column_end":12},"name":"zero","qualname":"<Wrapping<T> as identities::Zero>::zero","value":"fn zero() -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":{"krate":0,"index":428},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100298,"byte_end":100301,"line_start":91,"line_end":91,"column_start":11,"column_end":14},"name":"One","qualname":"::identities::One","value":"One: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines a multiplicative identity element for `Self`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100118,"byte_end":100175,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100176,"byte_end":100179,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100180,"byte_end":100190,"line_start":85,"line_end":85,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100191,"byte_end":100194,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100195,"byte_end":100209,"line_start":87,"line_end":87,"column_start":1,"column_end":15}},{"value":"/ a * 1 = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100210,"byte_end":100244,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/ 1 * a = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100245,"byte_end":100279,"line_start":89,"line_end":89,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100280,"byte_end":100287,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100685,"byte_end":100688,"line_start":100,"line_end":100,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::One::one","value":"fn one() -> Self","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Returns the multiplicative identity element of `Self`, `1`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity element of `Self`, `1`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100342,"byte_end":100405,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100410,"byte_end":100413,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Purity","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100418,"byte_end":100430,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100435,"byte_end":100438,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100443,"byte_end":100517,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100522,"byte_end":100588,"line_start":97,"line_end":97,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100593,"byte_end":100611,"line_start":98,"line_end":98,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100783,"byte_end":100790,"line_start":103,"line_end":103,"column_start":8,"column_end":15},"name":"set_one","qualname":"::identities::One::set_one","value":"fn set_one(&mut Self)","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Sets `self` to the multiplicative identity element of `Self`, `1`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the multiplicative identity element of `Self`, `1`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100705,"byte_end":100775,"line_start":102,"line_end":102,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101135,"byte_end":101141,"line_start":113,"line_end":113,"column_start":8,"column_end":14},"name":"is_one","qualname":"::identities::One::is_one","value":"fn is_one(&Self) -> bool where Self: PartialEq","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the multiplicative identity.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the multiplicative identity.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100843,"byte_end":100912,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100917,"byte_end":100920,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ For performance reasons, it's best to implement this manually.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100925,"byte_end":100991,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ After a semver bump, this method will be required, and the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100996,"byte_end":101058,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/ `where Self: PartialEq` bound will be removed.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101063,"byte_end":101113,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101118,"byte_end":101127,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101922,"byte_end":101929,"line_start":159,"line_end":159,"column_start":8,"column_end":15},"name":"set_one","qualname":"<Wrapping<T> as identities::One>::set_one","value":"fn set_one(&mut Self)","parent":{"krate":0,"index":437},"children":[],"decl_id":{"krate":0,"index":439},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101983,"byte_end":101986,"line_start":163,"line_end":163,"column_start":8,"column_end":11},"name":"one","qualname":"<Wrapping<T> as identities::One>::one","value":"fn one() -> Self","parent":{"krate":0,"index":437},"children":[],"decl_id":{"krate":0,"index":438},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102164,"byte_end":102168,"line_start":172,"line_end":172,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::zero","value":"fn zero<T>() -> T where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity, `0`.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity, `0`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102099,"byte_end":102138,"line_start":170,"line_end":170,"column_start":1,"column_end":40}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102139,"byte_end":102156,"line_start":171,"line_end":171,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102278,"byte_end":102281,"line_start":178,"line_end":178,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::one","value":"fn one<T>() -> T where T: One","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity, `1`.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity, `1`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102207,"byte_end":102252,"line_start":176,"line_end":176,"column_start":1,"column_end":46}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102253,"byte_end":102270,"line_start":177,"line_end":177,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"int","qualname":"::int","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":501},{"krate":0,"index":2206},{"krate":0,"index":2223},{"krate":0,"index":2240},{"krate":0,"index":2257},{"krate":0,"index":2274},{"krate":0,"index":2291},{"krate":0,"index":2308},{"krate":0,"index":2325},{"krate":0,"index":2342},{"krate":0,"index":2359},{"krate":0,"index":2376},{"krate":0,"index":2393}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104853,"byte_end":104860,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"PrimInt","qualname":"::int::PrimInt","value":"PrimInt: Sized + Copy + Num + NumCast + Bounded + PartialOrd + Ord + Eq + Not<Output =\nSelf> + BitAnd<Output = Self> + BitOr<Output = Self> + BitXor<Output = Self> +\nShl<usize, Output = Self> + Shr<usize, Output = Self> + CheckedAdd<Output =\nSelf> + CheckedSub<Output = Self> + CheckedMul<Output = Self> +\nCheckedDiv<Output = Self> + Saturating","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"decl_id":null,"docs":" Generic trait for primitive integers.","sig":null,"attributes":[{"value":"/ Generic trait for primitive integers.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103197,"byte_end":103238,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103239,"byte_end":103242,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The `PrimInt` trait is an abstraction over the builtin primitive integer types (e.g., `u8`,","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103243,"byte_end":103338,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ `u32`, `isize`, `i128`, ...). It inherits the basic numeric traits and extends them with","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103339,"byte_end":103431,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ bitwise operators and non-wrapping arithmetic.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103432,"byte_end":103482,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103483,"byte_end":103486,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The trait explicitly inherits `Copy`, `Eq`, `Ord`, and `Sized`. The intention is that all","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103487,"byte_end":103580,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ types implementing this trait behave like primitive types that are passed by value by default","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103581,"byte_end":103678,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ and behave like builtin integers. Furthermore, the types are expected to expose the integer","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103679,"byte_end":103774,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/ value in binary representation and support bitwise operators. The standard bitwise operations","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103775,"byte_end":103872,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ (e.g., bitwise-and, bitwise-or, right-shift, left-shift) are inherited and the trait extends","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103873,"byte_end":103969,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ these with introspective queries (e.g., `PrimInt::count_ones()`, `PrimInt::leading_zeros()`),","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103970,"byte_end":104067,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ bitwise combinators (e.g., `PrimInt::rotate_left()`), and endianness converters (e.g.,","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104068,"byte_end":104158,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ `PrimInt::to_be()`).","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104159,"byte_end":104183,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104184,"byte_end":104187,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All `PrimInt` types are expected to be fixed-width binary integers. The width can be queried","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104188,"byte_end":104284,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ via `T::zero().count_zeros()`. The trait currently lacks a way to query the width at","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104285,"byte_end":104373,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ compile-time.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104374,"byte_end":104391,"line_start":25,"line_end":25,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104392,"byte_end":104395,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ While a default implementation for all builtin primitive integers is provided, the trait is in","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104396,"byte_end":104494,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ no way restricted to these. Other integer types that fulfil the requirements are free to","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104495,"byte_end":104587,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ implement the trait was well.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104588,"byte_end":104621,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104622,"byte_end":104625,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This trait and many of the method names originate in the unstable `core::num::Int` trait from","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104626,"byte_end":104723,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ the rust standard library. The original trait was never stabilized and thus removed from the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104724,"byte_end":104820,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104821,"byte_end":104842,"line_start":33,"line_end":33,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105535,"byte_end":105545,"line_start":66,"line_end":66,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::int::PrimInt::count_ones","value":"fn count_ones(Self) -> u32","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Returns the number of ones in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of ones in the binary representation of `self`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105280,"byte_end":105350,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105355,"byte_end":105358,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105363,"byte_end":105377,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105382,"byte_end":105385,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105390,"byte_end":105397,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105402,"byte_end":105430,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105435,"byte_end":105438,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105443,"byte_end":105468,"line_start":62,"line_end":62,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105473,"byte_end":105476,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_ones(), 3);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105481,"byte_end":105515,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105520,"byte_end":105527,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105822,"byte_end":105833,"line_start":79,"line_end":79,"column_start":8,"column_end":19},"name":"count_zeros","qualname":"::int::PrimInt::count_zeros","value":"fn count_zeros(Self) -> u32","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Returns the number of zeros in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of zeros in the binary representation of `self`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105565,"byte_end":105636,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105641,"byte_end":105644,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105649,"byte_end":105663,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105668,"byte_end":105671,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105676,"byte_end":105683,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105688,"byte_end":105716,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105721,"byte_end":105724,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105729,"byte_end":105754,"line_start":75,"line_end":75,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105759,"byte_end":105762,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_zeros(), 5);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105767,"byte_end":105802,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105807,"byte_end":105814,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106129,"byte_end":106142,"line_start":93,"line_end":93,"column_start":8,"column_end":21},"name":"leading_zeros","qualname":"::int::PrimInt::leading_zeros","value":"fn leading_zeros(Self) -> u32","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Returns the number of leading zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of leading zeros in the binary representation","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105853,"byte_end":105921,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ of `self`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105926,"byte_end":105940,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105945,"byte_end":105948,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105953,"byte_end":105967,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105972,"byte_end":105975,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105980,"byte_end":105987,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105992,"byte_end":106020,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106025,"byte_end":106028,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106033,"byte_end":106058,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106063,"byte_end":106066,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.leading_zeros(), 10);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106071,"byte_end":106109,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106114,"byte_end":106121,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106439,"byte_end":106453,"line_start":107,"line_end":107,"column_start":8,"column_end":22},"name":"trailing_zeros","qualname":"::int::PrimInt::trailing_zeros","value":"fn trailing_zeros(Self) -> u32","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Returns the number of trailing zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of trailing zeros in the binary representation","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106162,"byte_end":106231,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ of `self`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106236,"byte_end":106250,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106255,"byte_end":106258,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106263,"byte_end":106277,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106282,"byte_end":106285,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106290,"byte_end":106297,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106302,"byte_end":106330,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106335,"byte_end":106338,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106343,"byte_end":106368,"line_start":103,"line_end":103,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106373,"byte_end":106376,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.trailing_zeros(), 3);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106381,"byte_end":106419,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106424,"byte_end":106431,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106848,"byte_end":106859,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"rotate_left","qualname":"::int::PrimInt::rotate_left","value":"fn rotate_left(Self, u32) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, wrapping\n the truncated bits to the end of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, wrapping","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106473,"byte_end":106548,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ the truncated bits to the end of the resulting integer.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106553,"byte_end":106612,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106617,"byte_end":106620,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106625,"byte_end":106639,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106644,"byte_end":106647,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106652,"byte_end":106659,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106664,"byte_end":106692,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106697,"byte_end":106700,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106705,"byte_end":106739,"line_start":117,"line_end":117,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF012u64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106744,"byte_end":106778,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106783,"byte_end":106786,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_left(12), m);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106791,"byte_end":106828,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106833,"byte_end":106840,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107271,"byte_end":107283,"line_start":137,"line_end":137,"column_start":8,"column_end":20},"name":"rotate_right","qualname":"::int::PrimInt::rotate_right","value":"fn rotate_right(Self, u32) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, wrapping\n the truncated bits to the beginning of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, wrapping","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106888,"byte_end":106964,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ the truncated bits to the beginning of the resulting integer.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106969,"byte_end":107034,"line_start":125,"line_end":125,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107039,"byte_end":107042,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107047,"byte_end":107061,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107066,"byte_end":107069,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107074,"byte_end":107081,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107086,"byte_end":107114,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107119,"byte_end":107122,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107127,"byte_end":107161,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/ let m = 0xDEF0123456789ABCu64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107166,"byte_end":107200,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107205,"byte_end":107208,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_right(12), m);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107213,"byte_end":107251,"line_start":135,"line_end":135,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107256,"byte_end":107263,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107726,"byte_end":107736,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"signed_shl","qualname":"::int::PrimInt::signed_shl","value":"fn signed_shl(Self, u32) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, filling","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107312,"byte_end":107386,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107391,"byte_end":107431,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107436,"byte_end":107439,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shl`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107444,"byte_end":107491,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107496,"byte_end":107499,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107504,"byte_end":107518,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107523,"byte_end":107526,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107531,"byte_end":107538,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107543,"byte_end":107571,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107576,"byte_end":107579,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107584,"byte_end":107618,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000u64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107623,"byte_end":107657,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107662,"byte_end":107665,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shl(12), m);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107670,"byte_end":107706,"line_start":152,"line_end":152,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107711,"byte_end":107718,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108212,"byte_end":108222,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"signed_shr","qualname":"::int::PrimInt::signed_shr","value":"fn signed_shr(Self, u32) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, copying\n the \"sign bit\" in the most significant bits even for unsigned types.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, copying","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107765,"byte_end":107840,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ the \"sign bit\" in the most significant bits even for unsigned types.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107845,"byte_end":107917,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107922,"byte_end":107925,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shr`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107930,"byte_end":107977,"line_start":159,"line_end":159,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107982,"byte_end":107985,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107990,"byte_end":108004,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108009,"byte_end":108012,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108017,"byte_end":108024,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108029,"byte_end":108057,"line_start":164,"line_end":164,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108062,"byte_end":108065,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let n = 0xFEDCBA9876543210u64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108070,"byte_end":108104,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ let m = 0xFFFFEDCBA9876543u64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108109,"byte_end":108143,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108148,"byte_end":108151,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shr(12), m);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108156,"byte_end":108192,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108197,"byte_end":108204,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108669,"byte_end":108681,"line_start":188,"line_end":188,"column_start":8,"column_end":20},"name":"unsigned_shl","qualname":"::int::PrimInt::unsigned_shl","value":"fn unsigned_shl(Self, u32) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, filling","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108251,"byte_end":108325,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108330,"byte_end":108370,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108375,"byte_end":108378,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shl`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108383,"byte_end":108432,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108437,"byte_end":108440,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108445,"byte_end":108459,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108464,"byte_end":108467,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108472,"byte_end":108479,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108484,"byte_end":108512,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108517,"byte_end":108520,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFi64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108525,"byte_end":108559,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000i64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108564,"byte_end":108598,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108603,"byte_end":108606,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shl(12), m);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108611,"byte_end":108649,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108654,"byte_end":108661,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109121,"byte_end":109133,"line_start":205,"line_end":205,"column_start":8,"column_end":20},"name":"unsigned_shr","qualname":"::int::PrimInt::unsigned_shr","value":"fn unsigned_shr(Self, u32) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, filling\n zeros in the most significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, filling","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108710,"byte_end":108785,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ zeros in the most significant bits.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108790,"byte_end":108829,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108834,"byte_end":108837,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shr`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108842,"byte_end":108891,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108896,"byte_end":108899,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108904,"byte_end":108918,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108923,"byte_end":108926,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108931,"byte_end":108938,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108943,"byte_end":108971,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108976,"byte_end":108979,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let n = -8i8; // 0b11111000","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108984,"byte_end":109015,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ let m = 62i8; // 0b00111110","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109020,"byte_end":109051,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109056,"byte_end":109059,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shr(2), m);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109064,"byte_end":109101,"line_start":203,"line_end":203,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109106,"byte_end":109113,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109438,"byte_end":109448,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"swap_bytes","qualname":"::int::PrimInt::swap_bytes","value":"fn swap_bytes(Self) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Reverses the byte order of the integer.","sig":null,"attributes":[{"value":"/ Reverses the byte order of the integer.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109162,"byte_end":109205,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109210,"byte_end":109213,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109218,"byte_end":109232,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109237,"byte_end":109240,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109245,"byte_end":109252,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109257,"byte_end":109285,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109290,"byte_end":109293,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109298,"byte_end":109332,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ let m = 0xEFCDAB8967452301u64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109337,"byte_end":109371,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109376,"byte_end":109379,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.swap_bytes(), m);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109384,"byte_end":109418,"line_start":217,"line_end":217,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109423,"byte_end":109430,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109944,"byte_end":109951,"line_start":238,"line_end":238,"column_start":8,"column_end":15},"name":"from_be","qualname":"::int::PrimInt::from_be","value":"fn from_be(Self) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Convert an integer from big endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from big endian to the target's endianness.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109469,"byte_end":109535,"line_start":221,"line_end":221,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109540,"byte_end":109543,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109548,"byte_end":109622,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109627,"byte_end":109630,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109635,"byte_end":109649,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109654,"byte_end":109657,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109662,"byte_end":109669,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109674,"byte_end":109702,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109707,"byte_end":109710,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109715,"byte_end":109749,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109754,"byte_end":109757,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109762,"byte_end":109798,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(u64::from_be(n), n)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109803,"byte_end":109841,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109846,"byte_end":109858,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_be(n), n.swap_bytes())","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109863,"byte_end":109914,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109919,"byte_end":109924,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109929,"byte_end":109936,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110456,"byte_end":110463,"line_start":257,"line_end":257,"column_start":8,"column_end":15},"name":"from_le","qualname":"::int::PrimInt::from_le","value":"fn from_le(Self) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Convert an integer from little endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from little endian to the target's endianness.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109975,"byte_end":110044,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110049,"byte_end":110052,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110057,"byte_end":110131,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110136,"byte_end":110139,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110144,"byte_end":110158,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110163,"byte_end":110166,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110171,"byte_end":110178,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110183,"byte_end":110211,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110216,"byte_end":110219,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110224,"byte_end":110258,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110263,"byte_end":110266,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110271,"byte_end":110310,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(u64::from_le(n), n)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110315,"byte_end":110353,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110358,"byte_end":110370,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_le(n), n.swap_bytes())","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110375,"byte_end":110426,"line_start":254,"line_end":254,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110431,"byte_end":110436,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110441,"byte_end":110448,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110946,"byte_end":110951,"line_start":276,"line_end":276,"column_start":8,"column_end":13},"name":"to_be","qualname":"::int::PrimInt::to_be","value":"fn to_be(Self) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Convert `self` to big endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to big endian from the target's endianness.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110487,"byte_end":110549,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110554,"byte_end":110557,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110562,"byte_end":110636,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110641,"byte_end":110644,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110649,"byte_end":110663,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110668,"byte_end":110671,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110676,"byte_end":110683,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110688,"byte_end":110716,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110721,"byte_end":110724,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110729,"byte_end":110763,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110768,"byte_end":110771,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110776,"byte_end":110812,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(n.to_be(), n)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110817,"byte_end":110849,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110854,"byte_end":110866,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_be(), n.swap_bytes())","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110871,"byte_end":110916,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110921,"byte_end":110926,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110931,"byte_end":110938,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111437,"byte_end":111442,"line_start":295,"line_end":295,"column_start":8,"column_end":13},"name":"to_le","qualname":"::int::PrimInt::to_le","value":"fn to_le(Self) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Convert `self` to little endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to little endian from the target's endianness.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110972,"byte_end":111037,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111042,"byte_end":111045,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111050,"byte_end":111124,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111129,"byte_end":111132,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111137,"byte_end":111151,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111156,"byte_end":111159,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111164,"byte_end":111171,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111176,"byte_end":111204,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111209,"byte_end":111212,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111217,"byte_end":111251,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111256,"byte_end":111259,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111264,"byte_end":111303,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(n.to_le(), n)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111308,"byte_end":111340,"line_start":290,"line_end":290,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111345,"byte_end":111357,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_le(), n.swap_bytes())","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111362,"byte_end":111407,"line_start":292,"line_end":292,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111412,"byte_end":111417,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111422,"byte_end":111429,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111680,"byte_end":111683,"line_start":306,"line_end":306,"column_start":8,"column_end":11},"name":"pow","qualname":"::int::PrimInt::pow","value":"fn pow(Self, u32) -> Self","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Raises self to the power of `exp`, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises self to the power of `exp`, using exponentiation by squaring.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111463,"byte_end":111535,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111540,"byte_end":111543,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111548,"byte_end":111562,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111567,"byte_end":111570,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111575,"byte_end":111582,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111587,"byte_end":111615,"line_start":302,"line_end":302,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111620,"byte_end":111623,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2i32.pow(4), 16);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111628,"byte_end":111660,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111665,"byte_end":111672,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":545},{"krate":0,"index":563},{"krate":0,"index":575},{"krate":0,"index":580}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"checked","qualname":"::ops::checked","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":2410},{"krate":0,"index":2412},{"krate":0,"index":2414},{"krate":0,"index":2416},{"krate":0,"index":2418},{"krate":0,"index":2420},{"krate":0,"index":2422},{"krate":0,"index":2424},{"krate":0,"index":2426},{"krate":0,"index":2428},{"krate":0,"index":2430},{"krate":0,"index":2432},{"krate":0,"index":529},{"krate":0,"index":2434},{"krate":0,"index":2436},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2442},{"krate":0,"index":2444},{"krate":0,"index":2446},{"krate":0,"index":2448},{"krate":0,"index":2450},{"krate":0,"index":2452},{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":531},{"krate":0,"index":2458},{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":533},{"krate":0,"index":2482},{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2488},{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2498},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2504},{"krate":0,"index":535},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2514},{"krate":0,"index":2516},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2522},{"krate":0,"index":2524},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2540},{"krate":0,"index":2542},{"krate":0,"index":2544},{"krate":0,"index":2546},{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2552},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":543},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2590},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":2598},{"krate":0,"index":2600}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114463,"byte_end":114473,"line_start":5,"line_end":5,"column_start":11,"column_end":21},"name":"CheckedAdd","qualname":"::ops::checked::CheckedAdd","value":"CheckedAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":527}],"decl_id":null,"docs":" Performs addition that returns `None` instead of wrapping around on\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that returns `None` instead of wrapping around on","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114367,"byte_end":114438,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ overflow.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114439,"byte_end":114452,"line_start":4,"line_end":4,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114615,"byte_end":114626,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::ops::checked::CheckedAdd::checked_add","value":"fn checked_add(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Adds two numbers, checking for overflow. If overflow happens, `None` is\n returned.\n","sig":null,"attributes":[{"value":"/ Adds two numbers, checking for overflow. If overflow happens, `None` is","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114514,"byte_end":114589,"line_start":6,"line_end":6,"column_start":5,"column_end":80}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114594,"byte_end":114607,"line_start":7,"line_end":7,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114954,"byte_end":114965,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<u8 as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &u8) -> Option<u8>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114998,"byte_end":115009,"line_start":23,"line_end":23,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<u16 as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &u16) -> Option<u16>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115043,"byte_end":115054,"line_start":24,"line_end":24,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<u32 as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &u32) -> Option<u32>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115088,"byte_end":115099,"line_start":25,"line_end":25,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<u64 as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &u64) -> Option<u64>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115133,"byte_end":115144,"line_start":26,"line_end":26,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<usize as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &usize) -> Option<usize>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115197,"byte_end":115208,"line_start":28,"line_end":28,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<u128 as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &u128) -> Option<u128>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115244,"byte_end":115255,"line_start":30,"line_end":30,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<i8 as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &i8) -> Option<i8>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115288,"byte_end":115299,"line_start":31,"line_end":31,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<i16 as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &i16) -> Option<i16>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115333,"byte_end":115344,"line_start":32,"line_end":32,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<i32 as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &i32) -> Option<i32>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115378,"byte_end":115389,"line_start":33,"line_end":33,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<i64 as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &i64) -> Option<i64>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115423,"byte_end":115434,"line_start":34,"line_end":34,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<isize as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &isize) -> Option<isize>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115487,"byte_end":115498,"line_start":36,"line_end":36,"column_start":27,"column_end":38},"name":"checked_add","qualname":"<i128 as ops::checked::CheckedAdd>::checked_add","value":"fn checked_add(&Self, &i128) -> Option<i128>","parent":{"krate":0,"index":526},"children":[],"decl_id":{"krate":0,"index":527},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115604,"byte_end":115614,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"CheckedSub","qualname":"::ops::checked::CheckedSub","value":"CheckedSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":530}],"decl_id":null,"docs":" Performs subtraction that returns `None` instead of wrapping around on underflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that returns `None` instead of wrapping around on underflow.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115508,"byte_end":115593,"line_start":38,"line_end":38,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115763,"byte_end":115774,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::ops::checked::CheckedSub::checked_sub","value":"fn checked_sub(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Subtracts two numbers, checking for underflow. If underflow happens,\n `None` is returned.\n","sig":null,"attributes":[{"value":"/ Subtracts two numbers, checking for underflow. If underflow happens,","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115655,"byte_end":115727,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115732,"byte_end":115755,"line_start":41,"line_end":41,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115838,"byte_end":115849,"line_start":45,"line_end":45,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<u8 as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &u8) -> Option<u8>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115882,"byte_end":115893,"line_start":46,"line_end":46,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<u16 as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &u16) -> Option<u16>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115927,"byte_end":115938,"line_start":47,"line_end":47,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<u32 as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &u32) -> Option<u32>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115972,"byte_end":115983,"line_start":48,"line_end":48,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<u64 as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &u64) -> Option<u64>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116017,"byte_end":116028,"line_start":49,"line_end":49,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<usize as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &usize) -> Option<usize>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2445},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116081,"byte_end":116092,"line_start":51,"line_end":51,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<u128 as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &u128) -> Option<u128>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116128,"byte_end":116139,"line_start":53,"line_end":53,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<i8 as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &i8) -> Option<i8>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116172,"byte_end":116183,"line_start":54,"line_end":54,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<i16 as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &i16) -> Option<i16>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2451},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116217,"byte_end":116228,"line_start":55,"line_end":55,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<i32 as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &i32) -> Option<i32>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116262,"byte_end":116273,"line_start":56,"line_end":56,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<i64 as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &i64) -> Option<i64>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116307,"byte_end":116318,"line_start":57,"line_end":57,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<isize as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &isize) -> Option<isize>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116371,"byte_end":116382,"line_start":59,"line_end":59,"column_start":27,"column_end":38},"name":"checked_sub","qualname":"<i128 as ops::checked::CheckedSub>::checked_sub","value":"fn checked_sub(&Self, &i128) -> Option<i128>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":530},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116507,"byte_end":116517,"line_start":63,"line_end":63,"column_start":11,"column_end":21},"name":"CheckedMul","qualname":"::ops::checked::CheckedMul","value":"CheckedMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":532}],"decl_id":null,"docs":" Performs multiplication that returns `None` instead of wrapping around on underflow or\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that returns `None` instead of wrapping around on underflow or","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116392,"byte_end":116482,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/ overflow.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116483,"byte_end":116496,"line_start":62,"line_end":62,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116691,"byte_end":116702,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::ops::checked::CheckedMul::checked_mul","value":"fn checked_mul(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Multiplies two numbers, checking for underflow or overflow. If underflow\n or overflow happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Multiplies two numbers, checking for underflow or overflow. If underflow","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116558,"byte_end":116634,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ or overflow happens, `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116639,"byte_end":116683,"line_start":65,"line_end":65,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116766,"byte_end":116777,"line_start":69,"line_end":69,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<u8 as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &u8) -> Option<u8>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116810,"byte_end":116821,"line_start":70,"line_end":70,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<u16 as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &u16) -> Option<u16>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116855,"byte_end":116866,"line_start":71,"line_end":71,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<u32 as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &u32) -> Option<u32>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116900,"byte_end":116911,"line_start":72,"line_end":72,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<u64 as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &u64) -> Option<u64>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116945,"byte_end":116956,"line_start":73,"line_end":73,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<usize as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &usize) -> Option<usize>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117009,"byte_end":117020,"line_start":75,"line_end":75,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<u128 as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &u128) -> Option<u128>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117056,"byte_end":117067,"line_start":77,"line_end":77,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<i8 as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &i8) -> Option<i8>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117100,"byte_end":117111,"line_start":78,"line_end":78,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<i16 as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &i16) -> Option<i16>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117145,"byte_end":117156,"line_start":79,"line_end":79,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<i32 as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &i32) -> Option<i32>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2477},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117190,"byte_end":117201,"line_start":80,"line_end":80,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<i64 as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &i64) -> Option<i64>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117235,"byte_end":117246,"line_start":81,"line_end":81,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<isize as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &isize) -> Option<isize>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117299,"byte_end":117310,"line_start":83,"line_end":83,"column_start":27,"column_end":38},"name":"checked_mul","qualname":"<i128 as ops::checked::CheckedMul>::checked_mul","value":"fn checked_mul(&Self, &i128) -> Option<i128>","parent":{"krate":0,"index":531},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117475,"byte_end":117485,"line_start":87,"line_end":87,"column_start":11,"column_end":21},"name":"CheckedDiv","qualname":"::ops::checked::CheckedDiv","value":"CheckedDiv: Sized + Div<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":534}],"decl_id":null,"docs":" Performs division that returns `None` instead of panicking on division by zero and instead of\n wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs division that returns `None` instead of panicking on division by zero and instead of","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117320,"byte_end":117417,"line_start":85,"line_end":85,"column_start":1,"column_end":98}},{"value":"/ wrapping around on underflow and overflow.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117418,"byte_end":117464,"line_start":86,"line_end":86,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117665,"byte_end":117676,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::ops::checked::CheckedDiv::checked_div","value":"fn checked_div(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":533},"children":[],"decl_id":null,"docs":" Divides two numbers, checking for underflow, overflow and division by\n zero. If any of that happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Divides two numbers, checking for underflow, overflow and division by","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117526,"byte_end":117599,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ zero. If any of that happens, `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117604,"byte_end":117657,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117740,"byte_end":117751,"line_start":93,"line_end":93,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<u8 as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &u8) -> Option<u8>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117784,"byte_end":117795,"line_start":94,"line_end":94,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<u16 as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &u16) -> Option<u16>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117829,"byte_end":117840,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<u32 as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &u32) -> Option<u32>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117874,"byte_end":117885,"line_start":96,"line_end":96,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<u64 as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &u64) -> Option<u64>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117919,"byte_end":117930,"line_start":97,"line_end":97,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<usize as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &usize) -> Option<usize>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117983,"byte_end":117994,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<u128 as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &u128) -> Option<u128>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118030,"byte_end":118041,"line_start":101,"line_end":101,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<i8 as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &i8) -> Option<i8>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118074,"byte_end":118085,"line_start":102,"line_end":102,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<i16 as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &i16) -> Option<i16>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118119,"byte_end":118130,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<i32 as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &i32) -> Option<i32>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118164,"byte_end":118175,"line_start":104,"line_end":104,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<i64 as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &i64) -> Option<i64>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118209,"byte_end":118220,"line_start":105,"line_end":105,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<isize as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &isize) -> Option<isize>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118273,"byte_end":118284,"line_start":107,"line_end":107,"column_start":27,"column_end":38},"name":"checked_div","qualname":"<i128 as ops::checked::CheckedDiv>::checked_div","value":"fn checked_div(&Self, &i128) -> Option<i128>","parent":{"krate":0,"index":533},"children":[],"decl_id":{"krate":0,"index":534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118462,"byte_end":118472,"line_start":111,"line_end":111,"column_start":11,"column_end":21},"name":"CheckedRem","qualname":"::ops::checked::CheckedRem","value":"CheckedRem: Sized + Rem<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":536}],"decl_id":null,"docs":" Performs an integral remainder that returns `None` instead of panicking on division by zero and\n instead of wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs an integral remainder that returns `None` instead of panicking on division by zero and","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118294,"byte_end":118393,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"/ instead of wrapping around on underflow and overflow.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118394,"byte_end":118451,"line_start":110,"line_end":110,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119266,"byte_end":119277,"line_start":131,"line_end":131,"column_start":8,"column_end":19},"name":"checked_rem","qualname":"::ops::checked::CheckedRem::checked_rem","value":"fn checked_rem(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Finds the remainder of dividing two numbers, checking for underflow, overflow and division\n by zero. If any of that happens, `None` is returned.","sig":null,"attributes":[{"value":"/ Finds the remainder of dividing two numbers, checking for underflow, overflow and division","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118513,"byte_end":118607,"line_start":112,"line_end":112,"column_start":5,"column_end":99}},{"value":"/ by zero. If any of that happens, `None` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118612,"byte_end":118668,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118673,"byte_end":118676,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118681,"byte_end":118695,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118700,"byte_end":118703,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118708,"byte_end":118715,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedRem;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118720,"byte_end":118751,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118756,"byte_end":118778,"line_start":119,"line_end":119,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118783,"byte_end":118786,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &7), Some(3));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118791,"byte_end":118849,"line_start":121,"line_end":121,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &-7), Some(3));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118854,"byte_end":118913,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &7), Some(-3));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118918,"byte_end":118978,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &-7), Some(-3));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118983,"byte_end":119044,"line_start":124,"line_end":124,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119049,"byte_end":119052,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &0), None);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119057,"byte_end":119112,"line_start":126,"line_end":126,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119117,"byte_end":119120,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &1), Some(0));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119125,"byte_end":119184,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &-1), None);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119189,"byte_end":119246,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119251,"byte_end":119258,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119341,"byte_end":119352,"line_start":134,"line_end":134,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<u8 as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &u8) -> Option<u8>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119385,"byte_end":119396,"line_start":135,"line_end":135,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<u16 as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &u16) -> Option<u16>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119430,"byte_end":119441,"line_start":136,"line_end":136,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<u32 as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &u32) -> Option<u32>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119475,"byte_end":119486,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<u64 as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &u64) -> Option<u64>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119520,"byte_end":119531,"line_start":138,"line_end":138,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<usize as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &usize) -> Option<usize>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119584,"byte_end":119595,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<u128 as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &u128) -> Option<u128>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119631,"byte_end":119642,"line_start":142,"line_end":142,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<i8 as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &i8) -> Option<i8>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119675,"byte_end":119686,"line_start":143,"line_end":143,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<i16 as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &i16) -> Option<i16>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119720,"byte_end":119731,"line_start":144,"line_end":144,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<i32 as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &i32) -> Option<i32>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119765,"byte_end":119776,"line_start":145,"line_end":145,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<i64 as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &i64) -> Option<i64>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119810,"byte_end":119821,"line_start":146,"line_end":146,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<isize as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &isize) -> Option<isize>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119874,"byte_end":119885,"line_start":148,"line_end":148,"column_start":27,"column_end":38},"name":"checked_rem","qualname":"<i128 as ops::checked::CheckedRem>::checked_rem","value":"fn checked_rem(&Self, &i128) -> Option<i128>","parent":{"krate":0,"index":535},"children":[],"decl_id":{"krate":0,"index":536},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114789,"byte_end":114798,"line_start":14,"line_end":14,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120241,"byte_end":120251,"line_start":162,"line_end":162,"column_start":11,"column_end":21},"name":"CheckedNeg","qualname":"::ops::checked::CheckedNeg","value":"CheckedNeg: Sized","parent":null,"children":[{"krate":0,"index":539}],"decl_id":null,"docs":" Performs negation that returns `None` if the result can't be represented.\n","sig":null,"attributes":[{"value":"/ Performs negation that returns `None` if the result can't be represented.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120153,"byte_end":120230,"line_start":161,"line_end":161,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120901,"byte_end":120912,"line_start":179,"line_end":179,"column_start":8,"column_end":19},"name":"checked_neg","qualname":"::ops::checked::CheckedNeg::checked_neg","value":"fn checked_neg(&Self) -> Option<Self>","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":" Negates a number, returning `None` for results that can't be represented, like signed `MIN`\n values that can't be positive, or non-zero unsigned values that can't be negative.","sig":null,"attributes":[{"value":"/ Negates a number, returning `None` for results that can't be represented, like signed `MIN`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120265,"byte_end":120360,"line_start":163,"line_end":163,"column_start":5,"column_end":100}},{"value":"/ values that can't be positive, or non-zero unsigned values that can't be negative.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120365,"byte_end":120451,"line_start":164,"line_end":164,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120456,"byte_end":120459,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120464,"byte_end":120478,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120483,"byte_end":120486,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120491,"byte_end":120498,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedNeg;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120503,"byte_end":120534,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120539,"byte_end":120561,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120566,"byte_end":120569,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_i32), Some(-1));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120574,"byte_end":120632,"line_start":172,"line_end":172,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&-1_i32), Some(1));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120637,"byte_end":120695,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&MIN), None);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120700,"byte_end":120752,"line_start":174,"line_end":174,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120757,"byte_end":120760,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&0_u32), Some(0));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120765,"byte_end":120822,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_u32), None);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120827,"byte_end":120881,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120886,"byte_end":120893,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120972,"byte_end":120983,"line_start":182,"line_end":182,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<u8 as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<u8>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121022,"byte_end":121033,"line_start":183,"line_end":183,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<u16 as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<u16>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121073,"byte_end":121084,"line_start":184,"line_end":184,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<u32 as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<u32>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121124,"byte_end":121135,"line_start":185,"line_end":185,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<u64 as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<u64>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121175,"byte_end":121186,"line_start":186,"line_end":186,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<usize as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<usize>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121245,"byte_end":121256,"line_start":188,"line_end":188,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<u128 as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<u128>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121298,"byte_end":121309,"line_start":190,"line_end":190,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<i8 as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<i8>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121348,"byte_end":121359,"line_start":191,"line_end":191,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<i16 as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<i16>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121399,"byte_end":121410,"line_start":192,"line_end":192,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<i32 as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<i32>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121450,"byte_end":121461,"line_start":193,"line_end":193,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<i64 as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<i64>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121501,"byte_end":121512,"line_start":194,"line_end":194,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<isize as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<isize>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121571,"byte_end":121582,"line_start":196,"line_end":196,"column_start":33,"column_end":44},"name":"checked_neg","qualname":"<i128 as ops::checked::CheckedNeg>::checked_neg","value":"fn checked_neg(&Self) -> Option<i128>","parent":{"krate":0,"index":538},"children":[],"decl_id":{"krate":0,"index":539},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120026,"byte_end":120035,"line_start":153,"line_end":153,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121690,"byte_end":121700,"line_start":200,"line_end":200,"column_start":11,"column_end":21},"name":"CheckedShl","qualname":"::ops::checked::CheckedShl","value":"CheckedShl: Sized + Shl<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":541}],"decl_id":null,"docs":" Performs a left shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that returns `None` on shifts larger than","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121592,"byte_end":121659,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ the type width.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121660,"byte_end":121679,"line_start":199,"line_end":199,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122259,"byte_end":122270,"line_start":214,"line_end":214,"column_start":8,"column_end":19},"name":"checked_shl","qualname":"::ops::checked::CheckedShl::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" Checked shift left. Computes `self << rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift left. Computes `self << rhs`, returning `None`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121740,"byte_end":121804,"line_start":201,"line_end":201,"column_start":5,"column_end":69}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121809,"byte_end":121878,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121883,"byte_end":121886,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121891,"byte_end":121898,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShl;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121903,"byte_end":121934,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121939,"byte_end":121942,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121947,"byte_end":121971,"line_start":207,"line_end":207,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121976,"byte_end":121979,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 0),  Some(0x0001));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121984,"byte_end":122046,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 1),  Some(0x0002));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122051,"byte_end":122113,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 15), Some(0x8000));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122118,"byte_end":122180,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 16), None);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122185,"byte_end":122239,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122244,"byte_end":122251,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122613,"byte_end":122624,"line_start":228,"line_end":228,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<u8 as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<u8>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122663,"byte_end":122674,"line_start":229,"line_end":229,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<u16 as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<u16>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122714,"byte_end":122725,"line_start":230,"line_end":230,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<u32 as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<u32>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122765,"byte_end":122776,"line_start":231,"line_end":231,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<u64 as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<u64>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122816,"byte_end":122827,"line_start":232,"line_end":232,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<usize as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<usize>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122886,"byte_end":122897,"line_start":234,"line_end":234,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<u128 as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<u128>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122939,"byte_end":122950,"line_start":236,"line_end":236,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<i8 as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<i8>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122989,"byte_end":123000,"line_start":237,"line_end":237,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<i16 as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<i16>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123040,"byte_end":123051,"line_start":238,"line_end":238,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<i32 as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<i32>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123091,"byte_end":123102,"line_start":239,"line_end":239,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<i64 as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<i64>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123142,"byte_end":123153,"line_start":240,"line_end":240,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<isize as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<isize>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123212,"byte_end":123223,"line_start":242,"line_end":242,"column_start":33,"column_end":44},"name":"checked_shl","qualname":"<i128 as ops::checked::CheckedShl>::checked_shl","value":"fn checked_shl(&Self, u32) -> Option<i128>","parent":{"krate":0,"index":540},"children":[],"decl_id":{"krate":0,"index":541},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123332,"byte_end":123342,"line_start":246,"line_end":246,"column_start":11,"column_end":21},"name":"CheckedShr","qualname":"::ops::checked::CheckedShr","value":"CheckedShr: Sized + Shr<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":544}],"decl_id":null,"docs":" Performs a right shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that returns `None` on shifts larger than","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123233,"byte_end":123301,"line_start":244,"line_end":244,"column_start":1,"column_end":69}},{"value":"/ the type width.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123302,"byte_end":123321,"line_start":245,"line_end":245,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123902,"byte_end":123913,"line_start":260,"line_end":260,"column_start":8,"column_end":19},"name":"checked_shr","qualname":"::ops::checked::CheckedShr::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":" Checked shift right. Computes `self >> rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift right. Computes `self >> rhs`, returning `None`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123382,"byte_end":123447,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123452,"byte_end":123521,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123526,"byte_end":123529,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123534,"byte_end":123541,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShr;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123546,"byte_end":123577,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123582,"byte_end":123585,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123590,"byte_end":123614,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123619,"byte_end":123622,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 0),  Some(0x8000));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123627,"byte_end":123689,"line_start":255,"line_end":255,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 1),  Some(0x4000));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123694,"byte_end":123756,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 15), Some(0x0001));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123761,"byte_end":123823,"line_start":257,"line_end":257,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 16), None);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123828,"byte_end":123882,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123887,"byte_end":123894,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123983,"byte_end":123994,"line_start":263,"line_end":263,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<u8 as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<u8>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":124033,"byte_end":124044,"line_start":264,"line_end":264,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<u16 as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<u16>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":124084,"byte_end":124095,"line_start":265,"line_end":265,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<u32 as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<u32>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":124135,"byte_end":124146,"line_start":266,"line_end":266,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<u64 as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<u64>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":124186,"byte_end":124197,"line_start":267,"line_end":267,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<usize as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<usize>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":124256,"byte_end":124267,"line_start":269,"line_end":269,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<u128 as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<u128>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":124309,"byte_end":124320,"line_start":271,"line_end":271,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<i8 as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<i8>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":124359,"byte_end":124370,"line_start":272,"line_end":272,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<i16 as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<i16>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":124410,"byte_end":124421,"line_start":273,"line_end":273,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<i32 as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<i32>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":124461,"byte_end":124472,"line_start":274,"line_end":274,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<i64 as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<i64>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":124512,"byte_end":124523,"line_start":275,"line_end":275,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<isize as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<isize>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":124582,"byte_end":124593,"line_start":277,"line_end":277,"column_start":33,"column_end":44},"name":"checked_shr","qualname":"<i128 as ops::checked::CheckedShr>::checked_shr","value":"fn checked_shr(&Self, u32) -> Option<i128>","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122439,"byte_end":122448,"line_start":220,"line_end":220,"column_start":13,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inv","qualname":"::ops::inv","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":559}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124702,"byte_end":124705,"line_start":2,"line_end":2,"column_start":11,"column_end":14},"name":"Inv","qualname":"::ops::inv::Inv","value":"Inv","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"decl_id":null,"docs":" Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.\n","sig":null,"attributes":[{"value":"/ Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124603,"byte_end":124691,"line_start":1,"line_end":1,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124765,"byte_end":124771,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::inv::Inv::Output","value":"type Output;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124712,"byte_end":124755,"line_start":3,"line_end":3,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125050,"byte_end":125053,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"inv","qualname":"::ops::inv::Inv::inv","value":"fn inv(Self) -> Self::Output","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse of `self`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse of `self`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124778,"byte_end":124827,"line_start":6,"line_end":6,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124832,"byte_end":124835,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124840,"byte_end":124854,"line_start":8,"line_end":8,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124859,"byte_end":124862,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124867,"byte_end":124874,"line_start":10,"line_end":10,"column_start":5,"column_end":12}},{"value":"/ use std::f64::INFINITY;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124879,"byte_end":124906,"line_start":11,"line_end":11,"column_start":5,"column_end":32}},{"value":"/ use num_traits::Inv;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124911,"byte_end":124935,"line_start":12,"line_end":12,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124940,"byte_end":124943,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(7.0.inv() * 7.0, 1.0);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124948,"byte_end":124985,"line_start":14,"line_end":14,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((-0.0).inv(), -INFINITY);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124990,"byte_end":125030,"line_start":15,"line_end":15,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125035,"byte_end":125042,"line_start":16,"line_end":16,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125143,"byte_end":125146,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"inv","qualname":"<f32 as ops::inv::Inv>::inv","value":"fn inv(Self) -> f32","parent":{"krate":0,"index":546},"children":[],"decl_id":{"krate":0,"index":548},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125126,"byte_end":125135,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125252,"byte_end":125255,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"inv","qualname":"<f64 as ops::inv::Inv>::inv","value":"fn inv(Self) -> f64","parent":{"krate":0,"index":546},"children":[],"decl_id":{"krate":0,"index":548},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125235,"byte_end":125244,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125369,"byte_end":125372,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"inv","qualname":"<&'a f32 as ops::inv::Inv>::inv","value":"fn inv(Self) -> f32","parent":{"krate":0,"index":546},"children":[],"decl_id":{"krate":0,"index":548},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125352,"byte_end":125361,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125487,"byte_end":125490,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"inv","qualname":"<&'a f64 as ops::inv::Inv>::inv","value":"fn inv(Self) -> f64","parent":{"krate":0,"index":546},"children":[],"decl_id":{"krate":0,"index":548},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125470,"byte_end":125479,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mul_add","qualname":"::ops::mul_add","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":569},{"krate":0,"index":573},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2614},{"krate":0,"index":2617},{"krate":0,"index":2620},{"krate":0,"index":2623},{"krate":0,"index":2626},{"krate":0,"index":2629},{"krate":0,"index":2632},{"krate":0,"index":2635},{"krate":0,"index":574},{"krate":0,"index":2638},{"krate":0,"index":2640},{"krate":0,"index":2642},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2654},{"krate":0,"index":2656},{"krate":0,"index":2658},{"krate":0,"index":2660}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126170,"byte_end":126176,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"MulAdd","qualname":"::ops::mul_add::MulAdd","value":"MulAdd<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568}],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125535,"byte_end":125607,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125608,"byte_end":125680,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125681,"byte_end":125684,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125685,"byte_end":125759,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125760,"byte_end":125826,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125827,"byte_end":125830,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that `A` and `B` are `Self` by default, but this is not mandatory.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125831,"byte_end":125906,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125907,"byte_end":125910,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125911,"byte_end":125924,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125925,"byte_end":125928,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125929,"byte_end":125936,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125937,"byte_end":125954,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125955,"byte_end":125958,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let m = 10.0_f32;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125959,"byte_end":125980,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ let x = 4.0_f32;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125981,"byte_end":126001,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/ let b = 60.0_f32;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126002,"byte_end":126023,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126024,"byte_end":126027,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // 100.0","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126028,"byte_end":126040,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126041,"byte_end":126102,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126103,"byte_end":126106,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(abs_difference <= f32::EPSILON);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126107,"byte_end":126151,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126152,"byte_end":126159,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126274,"byte_end":126280,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::mul_add::MulAdd::Output","value":"type Output;","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" The resulting type after applying the fused multiply-add.\n","sig":null,"attributes":[{"value":"/ The resulting type after applying the fused multiply-add.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126203,"byte_end":126264,"line_start":24,"line_end":24,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126341,"byte_end":126348,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::ops::mul_add::MulAdd::mul_add","value":"fn mul_add(Self, A, B) -> Self::Output","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126287,"byte_end":126333,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126446,"byte_end":126458,"line_start":32,"line_end":32,"column_start":11,"column_end":23},"name":"MulAddAssign","qualname":"::ops::mul_add::MulAddAssign","value":"MulAddAssign<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":572}],"decl_id":null,"docs":" The fused multiply-add assignment operation.\n","sig":null,"attributes":[{"value":"/ The fused multiply-add assignment operation.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126387,"byte_end":126435,"line_start":31,"line_end":31,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126539,"byte_end":126553,"line_start":34,"line_end":34,"column_start":8,"column_end":22},"name":"mul_add_assign","qualname":"::ops::mul_add::MulAddAssign::mul_add_assign","value":"fn mul_add_assign(&mut Self, A, B)","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126485,"byte_end":126531,"line_start":33,"line_end":33,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"saturating","qualname":"::ops::saturating","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":2671},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2686},{"krate":0,"index":2689},{"krate":0,"index":2692},{"krate":0,"index":2695}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129334,"byte_end":129344,"line_start":2,"line_end":2,"column_start":11,"column_end":21},"name":"Saturating","qualname":"::ops::saturating::Saturating","value":"Saturating","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"decl_id":null,"docs":" Saturating math operations\n","sig":null,"attributes":[{"value":"/ Saturating math operations","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129293,"byte_end":129323,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129470,"byte_end":129484,"line_start":5,"line_end":5,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ops::saturating::Saturating::saturating_add","value":"fn saturating_add(Self, Self) -> Self","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Saturating addition operator.\n Returns a+b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating addition operator.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129351,"byte_end":129384,"line_start":3,"line_end":3,"column_start":5,"column_end":38}},{"value":"/ Returns a+b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129389,"byte_end":129462,"line_start":4,"line_end":4,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129636,"byte_end":129650,"line_start":9,"line_end":9,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ops::saturating::Saturating::saturating_sub","value":"fn saturating_sub(Self, Self) -> Self","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Saturating subtraction operator.\n Returns a-b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating subtraction operator.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129514,"byte_end":129550,"line_start":7,"line_end":7,"column_start":5,"column_end":41}},{"value":"/ Returns a-b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129555,"byte_end":129628,"line_start":8,"line_end":8,"column_start":5,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapping","qualname":"::ops::wrapping","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2718},{"krate":0,"index":2720},{"krate":0,"index":603},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2740},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":605},{"krate":0,"index":2746},{"krate":0,"index":2748},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2758},{"krate":0,"index":2760},{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":610},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130858,"byte_end":130869,"line_start":24,"line_end":24,"column_start":11,"column_end":22},"name":"WrappingAdd","qualname":"::ops::wrapping::WrappingAdd","value":"WrappingAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":602}],"decl_id":null,"docs":" Performs addition that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that wraps around on overflow.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130795,"byte_end":130847,"line_start":23,"line_end":23,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131028,"byte_end":131040,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::ops::wrapping::WrappingAdd::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130910,"byte_end":131002,"line_start":25,"line_end":25,"column_start":5,"column_end":97}},{"value":"/ the type.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131007,"byte_end":131020,"line_start":26,"line_end":26,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2699},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131098,"byte_end":131110,"line_start":30,"line_end":30,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<u8 as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131145,"byte_end":131157,"line_start":31,"line_end":31,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<u16 as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131193,"byte_end":131205,"line_start":32,"line_end":32,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<u32 as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131241,"byte_end":131253,"line_start":33,"line_end":33,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<u64 as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131289,"byte_end":131301,"line_start":34,"line_end":34,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<usize as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131356,"byte_end":131368,"line_start":36,"line_end":36,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<u128 as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131406,"byte_end":131418,"line_start":38,"line_end":38,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<i8 as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131453,"byte_end":131465,"line_start":39,"line_end":39,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<i16 as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131501,"byte_end":131513,"line_start":40,"line_end":40,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<i32 as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131549,"byte_end":131561,"line_start":41,"line_end":41,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<i64 as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131597,"byte_end":131609,"line_start":42,"line_end":42,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<isize as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131664,"byte_end":131676,"line_start":44,"line_end":44,"column_start":29,"column_end":41},"name":"wrapping_add","qualname":"<i128 as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131752,"byte_end":131763,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"WrappingSub","qualname":"::ops::wrapping::WrappingSub","value":"WrappingSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":604}],"decl_id":null,"docs":" Performs subtraction that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that wraps around on overflow.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131686,"byte_end":131741,"line_start":46,"line_end":46,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131925,"byte_end":131937,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"::ops::wrapping::WrappingSub::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":" Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131804,"byte_end":131896,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ of the type.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131901,"byte_end":131917,"line_start":49,"line_end":49,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131995,"byte_end":132007,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<u8 as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2725},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132042,"byte_end":132054,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<u16 as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132090,"byte_end":132102,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<u32 as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2729},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132138,"byte_end":132150,"line_start":56,"line_end":56,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<u64 as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132186,"byte_end":132198,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<usize as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132253,"byte_end":132265,"line_start":59,"line_end":59,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<u128 as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132303,"byte_end":132315,"line_start":61,"line_end":61,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<i8 as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132350,"byte_end":132362,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<i16 as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132398,"byte_end":132410,"line_start":63,"line_end":63,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<i32 as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132446,"byte_end":132458,"line_start":64,"line_end":64,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<i64 as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132494,"byte_end":132506,"line_start":65,"line_end":65,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<isize as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132561,"byte_end":132573,"line_start":67,"line_end":67,"column_start":29,"column_end":41},"name":"wrapping_sub","qualname":"<i128 as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132652,"byte_end":132663,"line_start":70,"line_end":70,"column_start":11,"column_end":22},"name":"WrappingMul","qualname":"::ops::wrapping::WrappingMul","value":"WrappingMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":606}],"decl_id":null,"docs":" Performs multiplication that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that wraps around on overflow.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132583,"byte_end":132641,"line_start":69,"line_end":69,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132828,"byte_end":132840,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"::ops::wrapping::WrappingMul::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132704,"byte_end":132799,"line_start":71,"line_end":71,"column_start":5,"column_end":100}},{"value":"/ of the type.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132804,"byte_end":132820,"line_start":72,"line_end":72,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132898,"byte_end":132910,"line_start":76,"line_end":76,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<u8 as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132945,"byte_end":132957,"line_start":77,"line_end":77,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<u16 as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132993,"byte_end":133005,"line_start":78,"line_end":78,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<u32 as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133041,"byte_end":133053,"line_start":79,"line_end":79,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<u64 as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133089,"byte_end":133101,"line_start":80,"line_end":80,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<usize as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133156,"byte_end":133168,"line_start":82,"line_end":82,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<u128 as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133206,"byte_end":133218,"line_start":84,"line_end":84,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<i8 as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133253,"byte_end":133265,"line_start":85,"line_end":85,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<i16 as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133301,"byte_end":133313,"line_start":86,"line_end":86,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<i32 as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133349,"byte_end":133361,"line_start":87,"line_end":87,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<i64 as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133397,"byte_end":133409,"line_start":88,"line_end":88,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<isize as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133464,"byte_end":133476,"line_start":90,"line_end":90,"column_start":29,"column_end":41},"name":"wrapping_mul","qualname":"<i128 as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130416,"byte_end":130425,"line_start":7,"line_end":7,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133809,"byte_end":133820,"line_start":104,"line_end":104,"column_start":11,"column_end":22},"name":"WrappingShl","qualname":"::ops::wrapping::WrappingShl","value":"WrappingShl: Sized + Shl<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":609}],"decl_id":null,"docs":" Performs a left shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that does not panic.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133752,"byte_end":133798,"line_start":103,"line_end":103,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134427,"byte_end":134439,"line_start":119,"line_end":119,"column_start":8,"column_end":20},"name":"wrapping_shl","qualname":"::ops::wrapping::WrappingShl::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> Self","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-left; yields `self << mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-left; yields `self << mask(rhs)`,","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133862,"byte_end":133924,"line_start":105,"line_end":105,"column_start":5,"column_end":67}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133929,"byte_end":133993,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133998,"byte_end":134053,"line_start":107,"line_end":107,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134058,"byte_end":134061,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134066,"byte_end":134073,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShl;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134078,"byte_end":134110,"line_start":110,"line_end":110,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134115,"byte_end":134118,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134123,"byte_end":134147,"line_start":112,"line_end":112,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134152,"byte_end":134155,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 0),  0x0001);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134160,"byte_end":134218,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 1),  0x0002);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134223,"byte_end":134281,"line_start":115,"line_end":115,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 15), 0x8000);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134286,"byte_end":134344,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 16), 0x0001);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134349,"byte_end":134407,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134412,"byte_end":134419,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134503,"byte_end":134515,"line_start":122,"line_end":122,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<u8 as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> u8","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134556,"byte_end":134568,"line_start":123,"line_end":123,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<u16 as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> u16","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134610,"byte_end":134622,"line_start":124,"line_end":124,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<u32 as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> u32","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134664,"byte_end":134676,"line_start":125,"line_end":125,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<u64 as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> u64","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134718,"byte_end":134730,"line_start":126,"line_end":126,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<usize as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> usize","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134791,"byte_end":134803,"line_start":128,"line_end":128,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<u128 as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> u128","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134847,"byte_end":134859,"line_start":130,"line_end":130,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<i8 as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> i8","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134900,"byte_end":134912,"line_start":131,"line_end":131,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<i16 as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> i16","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134954,"byte_end":134966,"line_start":132,"line_end":132,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<i32 as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> i32","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135008,"byte_end":135020,"line_start":133,"line_end":133,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<i64 as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> i64","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135062,"byte_end":135074,"line_start":134,"line_end":134,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<isize as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> isize","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135135,"byte_end":135147,"line_start":136,"line_end":136,"column_start":35,"column_end":47},"name":"wrapping_shl","qualname":"<i128 as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> i128","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135215,"byte_end":135226,"line_start":139,"line_end":139,"column_start":11,"column_end":22},"name":"WrappingShr","qualname":"::ops::wrapping::WrappingShr","value":"WrappingShr: Sized + Shr<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":611}],"decl_id":null,"docs":" Performs a right shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that does not panic.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135157,"byte_end":135204,"line_start":138,"line_end":138,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135834,"byte_end":135846,"line_start":154,"line_end":154,"column_start":8,"column_end":20},"name":"wrapping_shr","qualname":"::ops::wrapping::WrappingShr::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> Self","parent":{"krate":0,"index":610},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-right; yields `self >> mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-right; yields `self >> mask(rhs)`,","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135268,"byte_end":135331,"line_start":140,"line_end":140,"column_start":5,"column_end":68}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135336,"byte_end":135400,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135405,"byte_end":135460,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135465,"byte_end":135468,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135473,"byte_end":135480,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShr;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135485,"byte_end":135517,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135522,"byte_end":135525,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135530,"byte_end":135554,"line_start":147,"line_end":147,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135559,"byte_end":135562,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 0),  0x8000);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135567,"byte_end":135625,"line_start":149,"line_end":149,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 1),  0x4000);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135630,"byte_end":135688,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 15), 0x0001);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135693,"byte_end":135751,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 16), 0x8000);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135756,"byte_end":135814,"line_start":152,"line_end":152,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135819,"byte_end":135826,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135910,"byte_end":135922,"line_start":157,"line_end":157,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<u8 as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> u8","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135963,"byte_end":135975,"line_start":158,"line_end":158,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<u16 as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> u16","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136017,"byte_end":136029,"line_start":159,"line_end":159,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<u32 as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> u32","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136071,"byte_end":136083,"line_start":160,"line_end":160,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<u64 as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> u64","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136125,"byte_end":136137,"line_start":161,"line_end":161,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<usize as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> usize","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136198,"byte_end":136210,"line_start":163,"line_end":163,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<u128 as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> u128","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136254,"byte_end":136266,"line_start":165,"line_end":165,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<i8 as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> i8","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136307,"byte_end":136319,"line_start":166,"line_end":166,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<i16 as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> i16","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136361,"byte_end":136373,"line_start":167,"line_end":167,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<i32 as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> i32","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136415,"byte_end":136427,"line_start":168,"line_end":168,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<i64 as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> i64","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136469,"byte_end":136481,"line_start":169,"line_end":169,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<isize as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> isize","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136542,"byte_end":136554,"line_start":171,"line_end":171,"column_start":35,"column_end":47},"name":"wrapping_shr","qualname":"<i128 as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> i128","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133618,"byte_end":133627,"line_start":95,"line_end":95,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136731,"byte_end":136743,"line_start":178,"line_end":178,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"<Wrapping<T> as ops::wrapping::WrappingAdd>::wrapping_add","value":"fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":601},"children":[],"decl_id":{"krate":0,"index":602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136931,"byte_end":136943,"line_start":186,"line_end":186,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"<Wrapping<T> as ops::wrapping::WrappingSub>::wrapping_sub","value":"fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":603},"children":[],"decl_id":{"krate":0,"index":604},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137131,"byte_end":137143,"line_start":194,"line_end":194,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"<Wrapping<T> as ops::wrapping::WrappingMul>::wrapping_mul","value":"fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":605},"children":[],"decl_id":{"krate":0,"index":606},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137338,"byte_end":137350,"line_start":202,"line_end":202,"column_start":8,"column_end":20},"name":"wrapping_shl","qualname":"<Wrapping<T> as ops::wrapping::WrappingShl>::wrapping_shl","value":"fn wrapping_shl(&Self, u32) -> Self","parent":{"krate":0,"index":608},"children":[],"decl_id":{"krate":0,"index":609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137544,"byte_end":137556,"line_start":210,"line_end":210,"column_start":8,"column_end":20},"name":"wrapping_shr","qualname":"<Wrapping<T> as ops::wrapping::WrappingShr>::wrapping_shr","value":"fn wrapping_shr(&Self, u32) -> Self","parent":{"krate":0,"index":610},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pow","qualname":"::pow","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":645},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2825},{"krate":0,"index":2829},{"krate":0,"index":2834},{"krate":0,"index":2837},{"krate":0,"index":2841},{"krate":0,"index":2845},{"krate":0,"index":2850},{"krate":0,"index":2853},{"krate":0,"index":2857},{"krate":0,"index":2861},{"krate":0,"index":2866},{"krate":0,"index":2869},{"krate":0,"index":2873},{"krate":0,"index":2877},{"krate":0,"index":2882},{"krate":0,"index":2885},{"krate":0,"index":2889},{"krate":0,"index":2893},{"krate":0,"index":2898},{"krate":0,"index":2901},{"krate":0,"index":2905},{"krate":0,"index":2909},{"krate":0,"index":2914},{"krate":0,"index":2917},{"krate":0,"index":2921},{"krate":0,"index":2925},{"krate":0,"index":2930},{"krate":0,"index":2933},{"krate":0,"index":2937},{"krate":0,"index":2941},{"krate":0,"index":2946},{"krate":0,"index":2949},{"krate":0,"index":2953},{"krate":0,"index":2957},{"krate":0,"index":2962},{"krate":0,"index":2965},{"krate":0,"index":2969},{"krate":0,"index":2973},{"krate":0,"index":2978},{"krate":0,"index":2981},{"krate":0,"index":2985},{"krate":0,"index":2989},{"krate":0,"index":2994},{"krate":0,"index":2997},{"krate":0,"index":3001},{"krate":0,"index":3005},{"krate":0,"index":3010},{"krate":0,"index":3013},{"krate":0,"index":3017},{"krate":0,"index":3021},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3033},{"krate":0,"index":3037},{"krate":0,"index":3042},{"krate":0,"index":3045},{"krate":0,"index":3049},{"krate":0,"index":3053},{"krate":0,"index":3058},{"krate":0,"index":3061},{"krate":0,"index":3065},{"krate":0,"index":3069},{"krate":0,"index":3074},{"krate":0,"index":3077},{"krate":0,"index":3081},{"krate":0,"index":3085},{"krate":0,"index":3090},{"krate":0,"index":3093},{"krate":0,"index":3097},{"krate":0,"index":3101},{"krate":0,"index":3106},{"krate":0,"index":3109},{"krate":0,"index":3113},{"krate":0,"index":3117},{"krate":0,"index":3122},{"krate":0,"index":3125},{"krate":0,"index":3129},{"krate":0,"index":3133},{"krate":0,"index":3138},{"krate":0,"index":3141},{"krate":0,"index":3145},{"krate":0,"index":3149},{"krate":0,"index":3154},{"krate":0,"index":3157},{"krate":0,"index":3161},{"krate":0,"index":3165},{"krate":0,"index":3170},{"krate":0,"index":3173},{"krate":0,"index":3177},{"krate":0,"index":3181},{"krate":0,"index":3186},{"krate":0,"index":3189},{"krate":0,"index":3193},{"krate":0,"index":3197},{"krate":0,"index":3202},{"krate":0,"index":3205},{"krate":0,"index":3209},{"krate":0,"index":3213},{"krate":0,"index":3218},{"krate":0,"index":3221},{"krate":0,"index":3225},{"krate":0,"index":3229},{"krate":0,"index":3234},{"krate":0,"index":3237},{"krate":0,"index":3241},{"krate":0,"index":3245},{"krate":0,"index":3250},{"krate":0,"index":3253},{"krate":0,"index":3257},{"krate":0,"index":3261},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":3273},{"krate":0,"index":3277},{"krate":0,"index":3282},{"krate":0,"index":3285},{"krate":0,"index":3289},{"krate":0,"index":3293},{"krate":0,"index":3298},{"krate":0,"index":3301},{"krate":0,"index":3305},{"krate":0,"index":3309},{"krate":0,"index":3314},{"krate":0,"index":3317},{"krate":0,"index":3321},{"krate":0,"index":3325},{"krate":0,"index":3330},{"krate":0,"index":3333},{"krate":0,"index":3337},{"krate":0,"index":3341},{"krate":0,"index":3346},{"krate":0,"index":3349},{"krate":0,"index":3353},{"krate":0,"index":3357},{"krate":0,"index":3362},{"krate":0,"index":3365},{"krate":0,"index":3369},{"krate":0,"index":3373},{"krate":0,"index":3378},{"krate":0,"index":3381},{"krate":0,"index":3385},{"krate":0,"index":3389},{"krate":0,"index":3394},{"krate":0,"index":3397},{"krate":0,"index":3401},{"krate":0,"index":3405},{"krate":0,"index":3410},{"krate":0,"index":3413},{"krate":0,"index":3417},{"krate":0,"index":3421},{"krate":0,"index":3426},{"krate":0,"index":3429},{"krate":0,"index":3433},{"krate":0,"index":3437},{"krate":0,"index":3442},{"krate":0,"index":3445},{"krate":0,"index":3449},{"krate":0,"index":3453},{"krate":0,"index":3458},{"krate":0,"index":3461},{"krate":0,"index":3465},{"krate":0,"index":3469},{"krate":0,"index":3474},{"krate":0,"index":3477},{"krate":0,"index":3481},{"krate":0,"index":3485},{"krate":0,"index":3490},{"krate":0,"index":3493},{"krate":0,"index":3497},{"krate":0,"index":3501},{"krate":0,"index":3506},{"krate":0,"index":3509},{"krate":0,"index":3513},{"krate":0,"index":3517},{"krate":0,"index":3522},{"krate":0,"index":3525},{"krate":0,"index":3529},{"krate":0,"index":3533},{"krate":0,"index":3538},{"krate":0,"index":3541},{"krate":0,"index":3545},{"krate":0,"index":3549},{"krate":0,"index":3554},{"krate":0,"index":3557},{"krate":0,"index":3561},{"krate":0,"index":3565},{"krate":0,"index":3570},{"krate":0,"index":3573},{"krate":0,"index":3577},{"krate":0,"index":3581},{"krate":0,"index":3586},{"krate":0,"index":3589},{"krate":0,"index":3593},{"krate":0,"index":3597},{"krate":0,"index":3602},{"krate":0,"index":3605},{"krate":0,"index":3609},{"krate":0,"index":3613},{"krate":0,"index":3618},{"krate":0,"index":3621},{"krate":0,"index":3625},{"krate":0,"index":3629},{"krate":0,"index":3634},{"krate":0,"index":3637},{"krate":0,"index":3641},{"krate":0,"index":3645},{"krate":0,"index":3650},{"krate":0,"index":3653},{"krate":0,"index":3657},{"krate":0,"index":3661},{"krate":0,"index":3666},{"krate":0,"index":3669},{"krate":0,"index":3673},{"krate":0,"index":3677},{"krate":0,"index":3682},{"krate":0,"index":3685},{"krate":0,"index":3689},{"krate":0,"index":3693},{"krate":0,"index":3698},{"krate":0,"index":3701},{"krate":0,"index":3705},{"krate":0,"index":3709},{"krate":0,"index":3714},{"krate":0,"index":3717},{"krate":0,"index":3721},{"krate":0,"index":3725},{"krate":0,"index":3730},{"krate":0,"index":3733},{"krate":0,"index":3737},{"krate":0,"index":3741},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3753},{"krate":0,"index":3757},{"krate":0,"index":3762},{"krate":0,"index":3765},{"krate":0,"index":3769},{"krate":0,"index":3773},{"krate":0,"index":3778},{"krate":0,"index":3781},{"krate":0,"index":3785},{"krate":0,"index":3789},{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":3801},{"krate":0,"index":3805},{"krate":0,"index":3810},{"krate":0,"index":3813},{"krate":0,"index":3817},{"krate":0,"index":3821},{"krate":0,"index":3826},{"krate":0,"index":3829},{"krate":0,"index":3833},{"krate":0,"index":3837},{"krate":0,"index":3842},{"krate":0,"index":3845},{"krate":0,"index":3849},{"krate":0,"index":3853},{"krate":0,"index":3858},{"krate":0,"index":3861},{"krate":0,"index":3865},{"krate":0,"index":3869},{"krate":0,"index":3874},{"krate":0,"index":3877},{"krate":0,"index":3881},{"krate":0,"index":3885},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":3897},{"krate":0,"index":3901},{"krate":0,"index":3906},{"krate":0,"index":3909},{"krate":0,"index":3913},{"krate":0,"index":3917},{"krate":0,"index":3922},{"krate":0,"index":3925},{"krate":0,"index":3929},{"krate":0,"index":3933},{"krate":0,"index":3938},{"krate":0,"index":3941},{"krate":0,"index":3945},{"krate":0,"index":3949},{"krate":0,"index":3954},{"krate":0,"index":3957},{"krate":0,"index":3961},{"krate":0,"index":3965},{"krate":0,"index":646},{"krate":0,"index":648}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139493,"byte_end":139496,"line_start":6,"line_end":6,"column_start":11,"column_end":14},"name":"Pow","qualname":"::pow::Pow","value":"Pow<RHS>","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644}],"decl_id":null,"docs":" Binary operator for raising a value to a power.\n","sig":null,"attributes":[{"value":"/ Binary operator for raising a value to a power.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139431,"byte_end":139482,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139561,"byte_end":139567,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Output","qualname":"::pow::Pow::Output","value":"type Output;","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139508,"byte_end":139551,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139756,"byte_end":139759,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::Pow::pow","value":"fn pow(Self, RHS) -> Self::Output","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Returns `self` to the power `rhs`.","sig":null,"attributes":[{"value":"/ Returns `self` to the power `rhs`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139574,"byte_end":139612,"line_start":10,"line_end":10,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139617,"byte_end":139620,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139625,"byte_end":139639,"line_start":12,"line_end":12,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139644,"byte_end":139647,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139652,"byte_end":139659,"line_start":14,"line_end":14,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Pow;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139664,"byte_end":139688,"line_start":15,"line_end":15,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Pow::pow(10u32, 2u32), 100);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139693,"byte_end":139736,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139741,"byte_end":139748,"line_start":17,"line_end":17,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144406,"byte_end":144409,"line_start":188,"line_end":188,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::pow","value":"fn pow<T>(T, usize) -> T where T: Clone + One + Mul<T, Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, using exponentiation by squaring.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144021,"byte_end":144094,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144095,"byte_end":144098,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`pow(0, 0)`) returnes `1`. Mathematically this is undefined.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144099,"byte_end":144181,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144182,"byte_end":144185,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144186,"byte_end":144199,"line_start":178,"line_end":178,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144200,"byte_end":144203,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144204,"byte_end":144215,"line_start":180,"line_end":180,"column_start":1,"column_end":12}},{"value":"/ use num_traits::pow;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144216,"byte_end":144240,"line_start":181,"line_end":181,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144241,"byte_end":144244,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pow(2i8, 4), 16);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144245,"byte_end":144277,"line_start":183,"line_end":183,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(pow(6u8, 3), 216);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144278,"byte_end":144311,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(pow(0u8, 0), 1); // Be aware if this case affects you","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144312,"byte_end":144380,"line_start":185,"line_end":185,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144381,"byte_end":144388,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144389,"byte_end":144398,"line_start":187,"line_end":187,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145416,"byte_end":145427,"line_start":229,"line_end":229,"column_start":8,"column_end":19},"name":"checked_pow","qualname":"::pow::checked_pow","value":"fn checked_pow<T>(T, usize) -> Option<T> where T: Clone + One + CheckedMul","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144863,"byte_end":144944,"line_start":212,"line_end":212,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144945,"byte_end":144948,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`checked_pow(0, 0)`) returnes `Some(1)`. Mathematically this is undefined.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144949,"byte_end":145045,"line_start":214,"line_end":214,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145046,"byte_end":145049,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Otherwise same as the `pow` function.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145050,"byte_end":145091,"line_start":216,"line_end":216,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145092,"byte_end":145095,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145096,"byte_end":145109,"line_start":218,"line_end":218,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145110,"byte_end":145113,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145114,"byte_end":145125,"line_start":220,"line_end":220,"column_start":1,"column_end":12}},{"value":"/ use num_traits::checked_pow;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145126,"byte_end":145158,"line_start":221,"line_end":221,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145159,"byte_end":145162,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(checked_pow(2i8, 4), Some(16));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145163,"byte_end":145209,"line_start":223,"line_end":223,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(checked_pow(7i8, 8), None);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145210,"byte_end":145252,"line_start":224,"line_end":224,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(checked_pow(7u32, 8), Some(5_764_801));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145253,"byte_end":145307,"line_start":225,"line_end":225,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(checked_pow(0u32, 0), Some(1)); // Be aware if this case affect you","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145308,"byte_end":145390,"line_start":226,"line_end":226,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145391,"byte_end":145398,"line_start":227,"line_end":227,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145399,"byte_end":145408,"line_start":228,"line_end":228,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sign","qualname":"::sign","value":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":670},{"krate":0,"index":3970},{"krate":0,"index":3976},{"krate":0,"index":3982},{"krate":0,"index":3988},{"krate":0,"index":3994},{"krate":0,"index":4000},{"krate":0,"index":671},{"krate":0,"index":678},{"krate":0,"index":4006},{"krate":0,"index":4012},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":687}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146292,"byte_end":146298,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Signed","qualname":"::sign::Signed","value":"Signed: Sized + Num + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669}],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[{"value":"/ Useful functions for signed numbers (i.e. numbers that can be negative).","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146205,"byte_end":146281,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146551,"byte_end":146554,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::Signed::abs","value":"fn abs(&Self) -> Self","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146339,"byte_end":146371,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146376,"byte_end":146379,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146384,"byte_end":146455,"line_start":11,"line_end":11,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146460,"byte_end":146463,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146468,"byte_end":146543,"line_start":13,"line_end":13,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146779,"byte_end":146786,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::Signed::abs_sub","value":"fn abs_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146576,"byte_end":146619,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146624,"byte_end":146627,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Returns `zero` if the number is less than or equal to `other`, otherwise the difference","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146632,"byte_end":146723,"line_start":18,"line_end":18,"column_start":5,"column_end":96}},{"value":"/ between `self` and `other` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146728,"byte_end":146771,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147244,"byte_end":147250,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::Signed::signum","value":"fn signum(&Self) -> Self","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146822,"byte_end":146857,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146862,"byte_end":146865,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146870,"byte_end":146894,"line_start":24,"line_end":24,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146899,"byte_end":146902,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146907,"byte_end":146966,"line_start":26,"line_end":26,"column_start":5,"column_end":64}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146971,"byte_end":147035,"line_start":27,"line_end":27,"column_start":5,"column_end":69}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147040,"byte_end":147074,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147079,"byte_end":147082,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ For signed integers:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147087,"byte_end":147111,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147116,"byte_end":147119,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ * `0` if the number is zero","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147124,"byte_end":147155,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/ * `1` if the number is positive","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147160,"byte_end":147195,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147200,"byte_end":147236,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147367,"byte_end":147378,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"is_positive","qualname":"::sign::Signed::is_positive","value":"fn is_positive(&Self) -> bool","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Returns true if the number is positive and false if the number is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is positive and false if the number is zero or negative.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147272,"byte_end":147359,"line_start":37,"line_end":37,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147495,"byte_end":147506,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"is_negative","qualname":"::sign::Signed::is_negative","value":"fn is_negative(&Self) -> bool","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Returns true if the number is negative and false if the number is zero or positive.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is negative and false if the number is zero or positive.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":147400,"byte_end":147487,"line_start":40,"line_end":40,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148479,"byte_end":148482,"line_start":85,"line_end":85,"column_start":8,"column_end":11},"name":"abs","qualname":"<Wrapping<T> as sign::Signed>::abs","value":"fn abs(&Self) -> Self","parent":{"krate":0,"index":664},"children":[],"decl_id":{"krate":0,"index":665},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148462,"byte_end":148471,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148559,"byte_end":148566,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"<Wrapping<T> as sign::Signed>::abs_sub","value":"fn abs_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":664},"children":[],"decl_id":{"krate":0,"index":666},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148542,"byte_end":148551,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148669,"byte_end":148675,"line_start":95,"line_end":95,"column_start":8,"column_end":14},"name":"signum","qualname":"<Wrapping<T> as sign::Signed>::signum","value":"fn signum(&Self) -> Self","parent":{"krate":0,"index":664},"children":[],"decl_id":{"krate":0,"index":667},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148652,"byte_end":148661,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148755,"byte_end":148766,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"is_positive","qualname":"<Wrapping<T> as sign::Signed>::is_positive","value":"fn is_positive(&Self) -> bool","parent":{"krate":0,"index":664},"children":[],"decl_id":{"krate":0,"index":668},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148738,"byte_end":148747,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148841,"byte_end":148852,"line_start":105,"line_end":105,"column_start":8,"column_end":19},"name":"is_negative","qualname":"<Wrapping<T> as sign::Signed>::is_negative","value":"fn is_negative(&Self) -> bool","parent":{"krate":0,"index":664},"children":[],"decl_id":{"krate":0,"index":669},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148824,"byte_end":148833,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150700,"byte_end":150703,"line_start":165,"line_end":165,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::abs","value":"fn abs<T>(T) -> T where T: Signed","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150487,"byte_end":150519,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150520,"byte_end":150523,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150524,"byte_end":150594,"line_start":161,"line_end":161,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150595,"byte_end":150598,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150599,"byte_end":150674,"line_start":163,"line_end":163,"column_start":1,"column_end":76}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150675,"byte_end":150692,"line_start":164,"line_end":164,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150940,"byte_end":150947,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::abs_sub","value":"fn abs_sub<T>(T, T) -> T where T: Signed","parent":null,"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150751,"byte_end":150794,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150795,"byte_end":150798,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Returns zero if `x` is less than or equal to `y`, otherwise the difference","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150799,"byte_end":150877,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ between `x` and `y` is returned.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150878,"byte_end":150914,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150915,"byte_end":150932,"line_start":173,"line_end":173,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151391,"byte_end":151397,"line_start":192,"line_end":192,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::signum","value":"fn signum<T>(T) -> T where T: Signed","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":150999,"byte_end":151034,"line_start":178,"line_end":178,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151035,"byte_end":151038,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151039,"byte_end":151063,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151064,"byte_end":151067,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151068,"byte_end":151127,"line_start":182,"line_end":182,"column_start":1,"column_end":60}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151128,"byte_end":151192,"line_start":183,"line_end":183,"column_start":1,"column_end":65}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151193,"byte_end":151227,"line_start":184,"line_end":184,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151228,"byte_end":151231,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ For signed integers:","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151232,"byte_end":151256,"line_start":186,"line_end":186,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151257,"byte_end":151260,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ * `0` if the number is zero","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151261,"byte_end":151292,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"/ * `1` if the number is positive","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151293,"byte_end":151328,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151329,"byte_end":151365,"line_start":190,"line_end":190,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151366,"byte_end":151383,"line_start":191,"line_end":191,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151506,"byte_end":151514,"line_start":197,"line_end":197,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::sign::Unsigned","value":"Unsigned: Num","parent":null,"children":[],"decl_id":null,"docs":" A trait for values which cannot be negative\n","sig":null,"attributes":[{"value":"/ A trait for values which cannot be negative","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151448,"byte_end":151495,"line_start":196,"line_end":196,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1982,"byte_end":1985,"line_start":62,"line_end":62,"column_start":11,"column_end":14},"name":"Num","qualname":"::Num","value":"Num: PartialEq + Zero + One + NumOps","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691}],"decl_id":null,"docs":" The base trait for numeric types, covering `0` and `1` values,\n comparisons, basic numeric operations, and string conversion.\n","sig":null,"attributes":[{"value":"/ The base trait for numeric types, covering `0` and `1` values,","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1839,"byte_end":1905,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/ comparisons, basic numeric operations, and string conversion.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1906,"byte_end":1971,"line_start":61,"line_end":61,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2030,"byte_end":2045,"line_start":63,"line_end":63,"column_start":10,"column_end":25},"name":"FromStrRadixErr","qualname":"::Num::FromStrRadixErr","value":"type FromStrRadixErr;","parent":{"krate":0,"index":689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2403,"byte_end":2417,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"from_str_radix","qualname":"::Num::from_str_radix","value":"fn from_str_radix(&str, u32) -> Result<Self, Self::FromStrRadixErr>","parent":{"krate":0,"index":689},"children":[],"decl_id":null,"docs":" Convert from a string and radix <= 36.","sig":null,"attributes":[{"value":"/ Convert from a string and radix <= 36.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2052,"byte_end":2094,"line_start":65,"line_end":65,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2099,"byte_end":2102,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2107,"byte_end":2121,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2126,"byte_end":2129,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2134,"byte_end":2145,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ use num_traits::Num;","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2150,"byte_end":2174,"line_start":70,"line_end":70,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2179,"byte_end":2182,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"27\", 10);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2187,"byte_end":2243,"line_start":72,"line_end":72,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(result, Ok(27));","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2248,"byte_end":2279,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2284,"byte_end":2287,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"foo\", 10);","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2292,"byte_end":2349,"line_start":75,"line_end":75,"column_start":5,"column_end":62}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2354,"byte_end":2383,"line_start":76,"line_end":76,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2388,"byte_end":2395,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2639,"byte_end":2645,"line_start":84,"line_end":84,"column_start":11,"column_end":17},"name":"NumOps","qualname":"::NumOps","value":"NumOps<Rhs = Self, Output = Self>: Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + Mul<Rhs, Output =\nOutput> + Div<Rhs, Output = Output> + Rem<Rhs, Output = Output>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing basic numeric operations","sig":null,"attributes":[{"value":"/ The trait for types implementing basic numeric operations","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2484,"byte_end":2545,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2546,"byte_end":2549,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2550,"byte_end":2628,"line_start":83,"line_end":83,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3279,"byte_end":3285,"line_start":106,"line_end":106,"column_start":11,"column_end":17},"name":"NumRef","qualname":"::NumRef","value":"NumRef: Num + for<'r> NumOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement numeric operations taking\n the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement numeric operations taking","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3072,"byte_end":3148,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ the second operand by reference.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3149,"byte_end":3185,"line_start":103,"line_end":103,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3186,"byte_end":3189,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3190,"byte_end":3268,"line_start":105,"line_end":105,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3604,"byte_end":3610,"line_start":113,"line_end":113,"column_start":11,"column_end":17},"name":"RefNum","qualname":"::RefNum","value":"RefNum<Base>: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base>","parent":null,"children":[],"decl_id":null,"docs":" The trait for references which implement numeric operations, taking the\n second operand either by value or by reference.","sig":null,"attributes":[{"value":"/ The trait for references which implement numeric operations, taking the","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3383,"byte_end":3458,"line_start":109,"line_end":109,"column_start":1,"column_end":76}},{"value":"/ second operand either by value or by reference.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3459,"byte_end":3510,"line_start":110,"line_end":110,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3511,"byte_end":3514,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3515,"byte_end":3593,"line_start":112,"line_end":112,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3943,"byte_end":3955,"line_start":119,"line_end":119,"column_start":11,"column_end":23},"name":"NumAssignOps","qualname":"::NumAssignOps","value":"NumAssignOps<Rhs = Self>: AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> +\nRemAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing numeric assignment operators (like `+=`).","sig":null,"attributes":[{"value":"/ The trait for types implementing numeric assignment operators (like `+=`).","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3771,"byte_end":3849,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3850,"byte_end":3853,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3854,"byte_end":3932,"line_start":118,"line_end":118,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4365,"byte_end":4374,"line_start":132,"line_end":132,"column_start":11,"column_end":20},"name":"NumAssign","qualname":"::NumAssign","value":"NumAssign: Num + NumAssignOps","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement assignment operators.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement assignment operators.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4199,"byte_end":4271,"line_start":129,"line_end":129,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4272,"byte_end":4275,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4276,"byte_end":4354,"line_start":131,"line_end":131,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4670,"byte_end":4682,"line_start":139,"line_end":139,"column_start":11,"column_end":23},"name":"NumAssignRef","qualname":"::NumAssignRef","value":"NumAssignRef: NumAssign + for<'r> NumAssignOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `NumAssign` types which also implement assignment operations\n taking the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `NumAssign` types which also implement assignment operations","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4454,"byte_end":4532,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ taking the second operand by reference.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4533,"byte_end":4576,"line_start":136,"line_end":136,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4577,"byte_end":4580,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4581,"byte_end":4659,"line_start":138,"line_end":138,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5617,"byte_end":5631,"line_start":168,"line_end":168,"column_start":8,"column_end":22},"name":"from_str_radix","qualname":"<Wrapping<T> as Num>::from_str_radix","value":"fn from_str_radix(&str, u32) -> Result<Self, Self::FromStrRadixErr>","parent":{"krate":0,"index":689},"children":[],"decl_id":{"krate":0,"index":691},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4061},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5804,"byte_end":5809,"line_start":175,"line_end":175,"column_start":5,"column_end":10},"name":"Empty","qualname":"::FloatErrorKind::Empty","value":"FloatErrorKind::Empty","parent":{"krate":0,"index":4060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4063},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5815,"byte_end":5822,"line_start":176,"line_end":176,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::FloatErrorKind::Invalid","value":"FloatErrorKind::Invalid","parent":{"krate":0,"index":4060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4060},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5783,"byte_end":5797,"line_start":174,"line_end":174,"column_start":10,"column_end":24},"name":"FloatErrorKind","qualname":"::FloatErrorKind","value":"enum FloatErrorKind { Empty, Invalid, }","parent":null,"children":[{"krate":0,"index":4061},{"krate":0,"index":4063}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4067},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5980,"byte_end":5995,"line_start":181,"line_end":181,"column_start":12,"column_end":27},"name":"ParseFloatError","qualname":"::ParseFloatError","value":"ParseFloatError { kind }","parent":null,"children":[{"krate":0,"index":4068}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":6006,"byte_end":6010,"line_start":182,"line_end":182,"column_start":9,"column_end":13},"name":"kind","qualname":"::ParseFloatError::kind","value":"FloatErrorKind","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":6078,"byte_end":6081,"line_start":186,"line_end":186,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseFloatError as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10122},"children":[],"decl_id":{"krate":1,"index":10123},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":14061,"byte_end":14066,"line_start":363,"line_end":363,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"fn clamp<T>(T, T, T) -> T where T: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum and a maximum","sig":null,"attributes":[{"value":"/ A value bounded by a minimum and a maximum","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":13847,"byte_end":13893,"line_start":357,"line_end":357,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":13894,"byte_end":13897,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/  If input is less than min then this returns min.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":13898,"byte_end":13951,"line_start":359,"line_end":359,"column_start":1,"column_end":54}},{"value":"/  If input is greater than max then this returns max.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":13952,"byte_end":14008,"line_start":360,"line_end":360,"column_start":1,"column_end":57}},{"value":"/  Otherwise this returns input.","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":14009,"byte_end":14043,"line_start":361,"line_end":361,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":14044,"byte_end":14053,"line_start":362,"line_end":362,"column_start":1,"column_end":10}}]}],"impls":[{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":19038,"byte_end":19046,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39135,"byte_end":39143,"line_start":568,"line_end":568,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39911,"byte_end":39919,"line_start":601,"line_end":601,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":41827,"byte_end":41835,"line_start":677,"line_end":677,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99866,"byte_end":99874,"line_start":66,"line_end":66,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101851,"byte_end":101859,"line_start":155,"line_end":155,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136660,"byte_end":136668,"line_start":174,"line_end":174,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136860,"byte_end":136868,"line_start":182,"line_end":182,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137060,"byte_end":137068,"line_start":190,"line_end":190,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137260,"byte_end":137268,"line_start":198,"line_end":198,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137466,"byte_end":137474,"line_start":206,"line_end":206,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148388,"byte_end":148396,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151776,"byte_end":151784,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2882,"byte_end":2883,"line_start":93,"line_end":93,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3340,"byte_end":3341,"line_start":107,"line_end":107,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3704,"byte_end":3705,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4096,"byte_end":4097,"line_start":124,"line_end":124,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4420,"byte_end":4421,"line_start":133,"line_end":133,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4755,"byte_end":4756,"line_start":140,"line_end":140,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5355,"byte_end":5363,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":6053,"byte_end":6068,"line_start":185,"line_end":185,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1690,"byte_end":1696,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":163}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1706,"byte_end":1710,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":224}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1720,"byte_end":1725,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":342}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1735,"byte_end":1745,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":416}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1755,"byte_end":1758,"line_start":53,"line_end":53,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":450}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1768,"byte_end":1771,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":502}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":114236,"byte_end":114243,"line_start":1,"line_end":1,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":503}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":114253,"byte_end":114256,"line_start":2,"line_end":2,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":545}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":114266,"byte_end":114273,"line_start":3,"line_end":3,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":563}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":114283,"byte_end":114293,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":575}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":114303,"byte_end":114311,"line_start":5,"line_end":5,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":580}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1781,"byte_end":1784,"line_start":55,"line_end":55,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":627}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1832,"byte_end":1836,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":651}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":19038,"byte_end":19046,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":213}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32326,"byte_end":32331,"line_start":364,"line_end":364,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":305}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39135,"byte_end":39143,"line_start":568,"line_end":568,"column_start":38,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":280}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39911,"byte_end":39919,"line_start":601,"line_end":601,"column_start":42,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":305}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40754,"byte_end":40759,"line_start":640,"line_end":640,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40762,"byte_end":40773,"line_start":640,"line_end":640,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":280},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":41827,"byte_end":41835,"line_start":677,"line_end":677,"column_start":30,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43067,"byte_end":43071,"line_start":718,"line_end":718,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":3189},"to":{"krate":0,"index":338}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44836,"byte_end":44839,"line_start":13,"line_end":13,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":689},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44842,"byte_end":44849,"line_start":13,"line_end":13,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":330},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44852,"byte_end":44855,"line_start":13,"line_end":13,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":3274},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44873,"byte_end":44883,"line_start":13,"line_end":13,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2877},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44886,"byte_end":44890,"line_start":13,"line_end":13,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":3189},"to":{"krate":0,"index":368}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98595,"byte_end":98600,"line_start":12,"line_end":12,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":427}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98603,"byte_end":98606,"line_start":12,"line_end":12,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3247},"to":{"krate":0,"index":427}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99866,"byte_end":99874,"line_start":66,"line_end":66,"column_start":24,"column_end":32},"kind":{"Impl":{"id":284}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":427}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100303,"byte_end":100308,"line_start":91,"line_end":91,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":437}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100311,"byte_end":100314,"line_start":91,"line_end":91,"column_start":24,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":3257},"to":{"krate":0,"index":437}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101851,"byte_end":101859,"line_start":155,"line_end":155,"column_start":22,"column_end":30},"kind":{"Impl":{"id":299}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":437}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104866,"byte_end":104871,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104878,"byte_end":104882,"line_start":36,"line_end":36,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3189},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104889,"byte_end":104892,"line_start":37,"line_end":37,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":689},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104899,"byte_end":104906,"line_start":38,"line_end":38,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":330},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104913,"byte_end":104920,"line_start":39,"line_end":39,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":213},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104927,"byte_end":104937,"line_start":40,"line_end":40,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":2877},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104944,"byte_end":104947,"line_start":41,"line_end":41,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2867},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104954,"byte_end":104956,"line_start":42,"line_end":42,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2836},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104963,"byte_end":104966,"line_start":43,"line_end":43,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3299},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104988,"byte_end":104994,"line_start":44,"line_end":44,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":3306},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105016,"byte_end":105021,"line_start":45,"line_end":45,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":3311},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105043,"byte_end":105049,"line_start":46,"line_end":46,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":3316},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105071,"byte_end":105074,"line_start":47,"line_end":47,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3321},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105103,"byte_end":105106,"line_start":48,"line_end":48,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3327},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105135,"byte_end":105145,"line_start":49,"line_end":49,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":526},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105167,"byte_end":105177,"line_start":50,"line_end":50,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":529},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105199,"byte_end":105209,"line_start":51,"line_end":51,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":531},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105231,"byte_end":105241,"line_start":52,"line_end":52,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":533},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105263,"byte_end":105273,"line_start":53,"line_end":53,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":576},"to":{"krate":0,"index":484}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114475,"byte_end":114480,"line_start":5,"line_end":5,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":526}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114483,"byte_end":114486,"line_start":5,"line_end":5,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3247},"to":{"krate":0,"index":526}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115616,"byte_end":115621,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":529}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115624,"byte_end":115627,"line_start":39,"line_end":39,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3252},"to":{"krate":0,"index":529}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116519,"byte_end":116524,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":531}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116527,"byte_end":116530,"line_start":63,"line_end":63,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3257},"to":{"krate":0,"index":531}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117487,"byte_end":117492,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":533}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117495,"byte_end":117498,"line_start":87,"line_end":87,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3262},"to":{"krate":0,"index":533}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118474,"byte_end":118479,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":535}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118482,"byte_end":118485,"line_start":111,"line_end":111,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3268},"to":{"krate":0,"index":535}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120253,"byte_end":120258,"line_start":162,"line_end":162,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":538}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121702,"byte_end":121707,"line_start":200,"line_end":200,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":540}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121710,"byte_end":121713,"line_start":200,"line_end":200,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3321},"to":{"krate":0,"index":540}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123344,"byte_end":123349,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":543}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123352,"byte_end":123355,"line_start":246,"line_end":246,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3327},"to":{"krate":0,"index":543}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130871,"byte_end":130876,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":601}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130879,"byte_end":130882,"line_start":24,"line_end":24,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3247},"to":{"krate":0,"index":601}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131765,"byte_end":131770,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":603}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131773,"byte_end":131776,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3252},"to":{"krate":0,"index":603}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132665,"byte_end":132670,"line_start":70,"line_end":70,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":605}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132673,"byte_end":132676,"line_start":70,"line_end":70,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3257},"to":{"krate":0,"index":605}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133822,"byte_end":133827,"line_start":104,"line_end":104,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":608}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133830,"byte_end":133833,"line_start":104,"line_end":104,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3321},"to":{"krate":0,"index":608}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135228,"byte_end":135233,"line_start":139,"line_end":139,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":610}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135236,"byte_end":135239,"line_start":139,"line_end":139,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3327},"to":{"krate":0,"index":610}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136660,"byte_end":136668,"line_start":174,"line_end":174,"column_start":38,"column_end":46},"kind":{"Impl":{"id":506}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":601}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136860,"byte_end":136868,"line_start":182,"line_end":182,"column_start":38,"column_end":46},"kind":{"Impl":{"id":507}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":603}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137060,"byte_end":137068,"line_start":190,"line_end":190,"column_start":38,"column_end":46},"kind":{"Impl":{"id":508}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":605}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137260,"byte_end":137268,"line_start":198,"line_end":198,"column_start":38,"column_end":46},"kind":{"Impl":{"id":509}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":608}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137466,"byte_end":137474,"line_start":206,"line_end":206,"column_start":38,"column_end":46},"kind":{"Impl":{"id":510}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":610}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146300,"byte_end":146305,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":664}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146308,"byte_end":146311,"line_start":8,"line_end":8,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":689},"to":{"krate":0,"index":664}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":146314,"byte_end":146317,"line_start":8,"line_end":8,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":3274},"to":{"krate":0,"index":664}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":148388,"byte_end":148396,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"kind":{"Impl":{"id":661}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":664}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151516,"byte_end":151519,"line_start":197,"line_end":197,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":689},"to":{"krate":0,"index":685}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":151776,"byte_end":151784,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"kind":{"Impl":{"id":670}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":685}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1987,"byte_end":1996,"line_start":62,"line_end":62,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2831},"to":{"krate":0,"index":689}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1999,"byte_end":2003,"line_start":62,"line_end":62,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":427},"to":{"krate":0,"index":689}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2006,"byte_end":2009,"line_start":62,"line_end":62,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":437},"to":{"krate":0,"index":689}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2012,"byte_end":2018,"line_start":62,"line_end":62,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":692},"to":{"krate":0,"index":689}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2678,"byte_end":2681,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":3247},"to":{"krate":0,"index":692}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2710,"byte_end":2713,"line_start":86,"line_end":86,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3252},"to":{"krate":0,"index":692}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2742,"byte_end":2745,"line_start":87,"line_end":87,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3257},"to":{"krate":0,"index":692}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2774,"byte_end":2777,"line_start":88,"line_end":88,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3262},"to":{"krate":0,"index":692}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2806,"byte_end":2809,"line_start":89,"line_end":89,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3268},"to":{"krate":0,"index":692}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2882,"byte_end":2883,"line_start":93,"line_end":93,"column_start":46,"column_end":47},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":696},"to":{"krate":0,"index":692}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3287,"byte_end":3290,"line_start":106,"line_end":106,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":689},"to":{"krate":0,"index":699}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3301,"byte_end":3307,"line_start":106,"line_end":106,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":692},"to":{"krate":0,"index":699}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3340,"byte_end":3341,"line_start":107,"line_end":107,"column_start":20,"column_end":21},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":702},"to":{"krate":0,"index":699}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3618,"byte_end":3624,"line_start":113,"line_end":113,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":692},"to":{"krate":0,"index":704}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3647,"byte_end":3653,"line_start":113,"line_end":113,"column_start":54,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":692},"to":{"krate":0,"index":704}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3704,"byte_end":3705,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":708},"to":{"krate":0,"index":704}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3973,"byte_end":3982,"line_start":120,"line_end":120,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":3278},"to":{"krate":0,"index":711}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3990,"byte_end":3999,"line_start":120,"line_end":120,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3282},"to":{"krate":0,"index":711}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4007,"byte_end":4016,"line_start":120,"line_end":120,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":3286},"to":{"krate":0,"index":711}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4024,"byte_end":4033,"line_start":120,"line_end":120,"column_start":56,"column_end":65},"kind":"SuperTrait","from":{"krate":1,"index":3290},"to":{"krate":0,"index":711}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4041,"byte_end":4050,"line_start":120,"line_end":120,"column_start":73,"column_end":82},"kind":"SuperTrait","from":{"krate":1,"index":3294},"to":{"krate":0,"index":711}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4096,"byte_end":4097,"line_start":124,"line_end":124,"column_start":36,"column_end":37},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":714},"to":{"krate":0,"index":711}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4376,"byte_end":4379,"line_start":132,"line_end":132,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":689},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4382,"byte_end":4394,"line_start":132,"line_end":132,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":711},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4420,"byte_end":4421,"line_start":133,"line_end":133,"column_start":23,"column_end":24},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":718},"to":{"krate":0,"index":716}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4684,"byte_end":4693,"line_start":139,"line_end":139,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":716},"to":{"krate":0,"index":719}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4704,"byte_end":4716,"line_start":139,"line_end":139,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":711},"to":{"krate":0,"index":719}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4755,"byte_end":4756,"line_start":140,"line_end":140,"column_start":26,"column_end":27},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":722},"to":{"krate":0,"index":719}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5355,"byte_end":5363,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"kind":{"Impl":{"id":689}},"from":{"krate":1,"index":27766},"to":{"krate":0,"index":689}},{"span":{"file_name":"C:\\Users\\Vinay Konuru\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":6053,"byte_end":6068,"line_start":185,"line_end":185,"column_start":23,"column_end":38},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":4067},"to":{"krate":1,"index":10122}}]}